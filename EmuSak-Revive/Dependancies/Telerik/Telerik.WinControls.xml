<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telerik.WinControls</name>
    </assembly>
    <members>
        <member name="T:Telerik.WinControls.Analytics.ITraceMonitor">
            <summary>
            This interface represents a monitor which receives trace events from RadControls. You can implement it if you need to
            receive trace events from the controls used in your application.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Analytics.ITraceMonitor.TrackAtomicFeature(System.String)">
            <summary>
            This method is called when an atomic feature is executed.
            </summary>
            <param name="feature">The feature to be tracked.</param>
        </member>
        <member name="M:Telerik.WinControls.Analytics.ITraceMonitor.TrackFeatureStart(System.String)">
            <summary>
            This method is called when a feature is initiated.
            </summary>
            <param name="feature">The feature that was initiated.</param>
        </member>
        <member name="M:Telerik.WinControls.Analytics.ITraceMonitor.TrackFeatureEnd(System.String)">
            <summary>
            This method is called when a feature finishes execution.
            </summary>
            <param name="feature">The feature that finished.</param>
        </member>
        <member name="M:Telerik.WinControls.Analytics.ITraceMonitor.TrackFeatureCancel(System.String)">
            <summary>
            This method is called when a feature is canceled.
            </summary>
            <param name="feature">The feature that was canceled.</param>
        </member>
        <member name="M:Telerik.WinControls.Analytics.ITraceMonitor.TrackError(System.String,System.Exception)">
            <summary>
            Traces an error in a specified feature.
            </summary>
            <param name="feature">The feature in which the error occurred.</param>
            <param name="exception">The error that occurred.</param>
        </member>
        <member name="M:Telerik.WinControls.Analytics.ITraceMonitor.TrackValue(System.String,System.Int64)">
            <summary>
            This method is called when a value connected with a specific feature is tracked.
            </summary>
            <param name="feature">The feature that produced the value.</param>
            <param name="value">The value that was tracked by the feature.</param>
        </member>
        <member name="P:Telerik.WinControls.Analytics.ControlTraceMonitor.AnalyticsMonitor">
            <summary>
            Gets or sets the monitor, which the controls report to.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ActionResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.ActionResult" /> class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ActionResult.ShouldInvalidate">
            <summary>
            Gets or sets the should invalidate.
            </summary>
            <value>The should invalidate.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.ActionResult.Execute(System.Object)">
            <summary>
            Executes the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.Controller.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.Controller" /> class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Controller.ProcessNext">
            <summary>
            Gets or sets whether to process the next item.
            </summary>
            <value>The process next.</value>
        </member>
        <member name="E:Telerik.WinControls.UI.Controller.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.Controller.OnPropertyChanged(System.String)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.IView.Render(System.Object)">
            <summary>
            Renders the view with the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.ViewResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.ViewResult" /> class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ViewResult.#ctor(Telerik.WinControls.UI.IView)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.ViewResult" /> class.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.ViewResult.Execute(System.Object)">
            <summary>
            Executes the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.ViewResult.IsDirtyHost">
            <summary>
            Gets or sets if it is dirty host.
            </summary>
            <value>If it is dirty host.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.ViewResult.View">
            <summary>
            Gets or sets the view.
            </summary>
            <value>The view.</value>
        </member>
        <member name="T:Telerik.WinControls.UI.ChartAreaType">
            <summary>
            Defines the type of the chart area
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartAreaType.Cartesian">
            <summary>
            Cartesian Area supports Bar, Line, Area, Scatter, Ohlc, Candlestick series.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartAreaType.Polar">
            <summary>
            Polar Area supports PolarPoint, PolarLine, PolarArea, RadarPoint, RadarLine and RadarArea series.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartAreaType.Pie">
            <summary>
            Pie Area supports Pie and Donut series.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartAreaType.Funnel">
            <summary>
            Funnel Area supports Funnel series.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.AreaSeriesStrokeMode">
            <summary>
            Defines how an AreaSeries shape is outlined.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AreaSeriesStrokeMode.None">
            <summary>
            No outlining.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AreaSeriesStrokeMode.LeftLine">
            <summary>
            The left line (from plotline to the first point) is outlined.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AreaSeriesStrokeMode.Points">
            <summary>
            The line that connects all points is outlined. This is the default mode.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AreaSeriesStrokeMode.RightLine">
            <summary>
            The right line (from plotline to the last point) is outlined.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AreaSeriesStrokeMode.PlotLine">
            <summary>
            The plotline is outlines.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AreaSeriesStrokeMode.LeftAndPoints">
            <summary>
            Left line and points are outlined.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AreaSeriesStrokeMode.RightAndPoints">
            <summary>
            Right line and points are outlined.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AreaSeriesStrokeMode.AllButPlotLine">
            <summary>
            All members except the PlotLine are specified.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AreaSeriesStrokeMode.All">
            <summary>
            All enum members are defined and the area is fully outlined.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartGradientStyle.None">
            <summary>
                No gradient is applied.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartGradientStyle.LeftRight">
             <summary>
                 Gradient is applied from left to right.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartGradientStyle.TopBottom">
             <summary>
                 Gradient is applied from top to bottom.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartGradientStyle.Center">
             <summary>
                 Gradient is applied from the center outwards.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartGradientStyle.DiagonalLeft">
            <summary>
                 Gradient is applied diagonally from left to right.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartGradientStyle.DiagonalRight">
            <summary>
                Gradient is applied diagonally from right to left.
            </summary>    
        </member>
        <member name="F:Telerik.WinControls.UI.ChartGradientStyle.HorizontalCenter">
            <summary>
                 Gradient is applied horizontally from the center outwards.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartGradientStyle.VerticalCenter">
            <summary>
                Gradient is applied vertically from the center outwards.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.GridLineVisibility">
            <summary>
            Defines the visibility of the major and minor lines within a CartesianAxis.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.GridLineVisibility.None">
            <summary>
            Lines are hidden.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.GridLineVisibility.X">
            <summary>
            The lines along the X-axis are visible.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.GridLineVisibility.Y">
            <summary>
            The lines along the Y-axis are visible.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.GridLineVisibility.XY">
            <summary>
            The lines are visible along both axes.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ChartSelectionMode">
            <summary>
            Defines the selection modes of ChartSeries.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartSelectionMode.None">
            <summary>
            No DataPoints can be selected.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartSelectionMode.SingleDataPoint">
            <summary>
            Single DataPoint can be selected.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartSelectionMode.MultipleDataPoints">
            <summary>
            Multiple DataPoints can be selected.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ChartPanZoomMode">
            <summary>
            Defines the pan and zoom mode of the chart view
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartPanZoomMode.Horizontal">
            <summary>
            Allows horizontal pan and zoom.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartPanZoomMode.Vertical">
            <summary>
            Allows vertical pan and zoom.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartPanZoomMode.Both">
            <summary>
            Allows both horizontal and vertical pan and zoom.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.PieLabelModes">
            <summary>
            Defines positioning of labels in a Pie RadChartView.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.PieLabelModes.Horizontal">
            <summary>
            Each label is renderred horizontally. Its position from the center of its corresponding pie segment is determined by X property.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.PieLabelModes.Radial">
            <summary>
            Each label is renderred radial to its corresponding Pie segment. Its position from the center of the chart is determined by X property.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.BarLabelModes">
            <summary>
            Defines positioning of labels in BarSeries.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.BarLabelModes.Default">
            <summary>
            Labels are positoned using the default strategy.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.BarLabelModes.Center">
            <summary>
            Each label is renderred at the center of its corresponding bar.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.BarLabelModes.Top">
            <summary>
            Each label is renderred at the top of its corresponding bar. If the area orientation is horizontal, the labels appear on the right of each bar. 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.LegendPosition">
            <summary>
            Determines the position of the chart legend.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.LegendPosition.Right">
            <summary>
            Docks the right edge of the legend to the right edge of the chart.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.LegendPosition.Bottom">
            <summary>
            Docks the bottom edge of the legend to the bottom edge of the chart.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.LegendPosition.Left">
            <summary>
            Docks the left edge of the legend to the left edge of the chart.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.LegendPosition.Top">
            <summary>
            Docks the top edge of the legend to the top edge of the chart.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.LegendPosition.Float">
            <summary>
            The legend floats over the chart. The position is determined by the LegendOffset property.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.TitlePosition">
            <summary>
            Defines the position of the title.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.TitlePosition.Top">
            <summary>
            Places the title on the top side.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.TitlePosition.Right">
            <summary>
            Places the title on the right side.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.TitlePosition.Bottom">
            <summary>
            Places the title on the bottom side.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.TitlePosition.Left">
            <summary>
            Places the title on the left side.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.DrillElementPosition">
            <summary>
            Defines the position of the Drill Navigator
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.DrillElementPosition.Top">
            <summary>
            Places the title on the top side.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.DrillElementPosition.Bottom">
            <summary>
            Places the title on the bottom side.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.LineSide">
            <summary>
            Determines to which side of a Label element the line contecting it with its data point will be drawn.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.LineSide.Bottom">
            <summary>
            Draws the line to the bottom of the label element.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.LineSide.Top">
            <summary>
            Draws the line to the top side of the label element.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.LineSide.Right">
            <summary>
            Draws the line to the right side of the label element.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.LineSide.Left">
            <summary>
            Draws the line to the left side of the label element.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.SweepDirection">
            <summary>
            Defines the direction an elliptical arc is drawn.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.SweepDirection.Counterclockwise">
            <summary>
            Specifies that arcs are drawn in a counter clockwise (negative-angle) direction.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.SweepDirection.Clockwise">
            <summary>
            Specifies that arcs are drawn in a clockwise (positive-angle) direction.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.AnnotationDrawMode">
            <summary>
            Defines the position of the annotation in the chart draw stack.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AnnotationDrawMode.AboveSeries">
            <summary>
            Draws the annotation above the chart view series. This is the default mode.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AnnotationDrawMode.BelowSeries">
            <summary>
            Draws the annotation below the chart view series.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.AxisDrawMode">
            <summary>
            Defines the position of the axis in the chart draw stack.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AxisDrawMode.AboveSeries">
            <summary>
            Draws the axis above the chart view series. This is the default mode.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AxisDrawMode.BelowSeries">
            <summary>
            Draws the axis below the chart view series.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ScaleBreakStyle">
            <summary>
            Defines the style of the lines draw for scale breaks of an axis.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.DisplayFormatType.None">
            <summary>
            General format
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.DisplayFormatType.Text">
            <summary>
            Displays anything as text (i.e. Left aligned without formatting)
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.DisplayFormatType.Fixed">
            <summary>
            Displays numeric values with two fixed decimals 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.DisplayFormatType.Standard">
            <summary>
            Displays numeric values with two fixed decimals and digit grouping
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.DisplayFormatType.Percent">
            <summary>
            Displays numeric values as percentage values
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.DisplayFormatType.Scientific">
            <summary>
            Displays numeric values in scientific notation
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.DisplayFormatType.GeneralDate">
            <summary>
            Displays numeric or date values as short date format
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.DisplayFormatType.ShortDate">
            <summary>
            Displays numeric or date values as short date format
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.DisplayFormatType.MediumDate">
            <summary>
            Displays numeric or date values as medium date format
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.DisplayFormatType.LongDate">
            <summary>
            Displays numeric or date values as long date format
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.DisplayFormatType.ShortDateTime">
            <summary>
            Displays numeric or date values as a combination of the short date and short time patterns, separated by a space.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.DisplayFormatType.LongDateTime">
            <summary>
            Displays numeric or date values as a combination of the long date and long time patterns, separated by a space.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.DisplayFormatType.Currency">
            <summary>
            Displays numeric date as currency
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.DisplayFormatType.LongTime">
            <summary>
            Displays numeric or date values in a long time format
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.DisplayFormatType.MediumTime">
            <summary>
            Displays numeric or date values in a medium time format
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.DisplayFormatType.ShortTime">
            <summary>
            Displays numeric or date values in a short time format
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.DisplayFormatType.Custom">
            <summary>
            Custom defined format
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.Export.ContentType">
            <summary>
            The cell content type
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.ContentType.None">
            <summary>
            Cell does not contain anything
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.ContentType.String">
            <summary>
            Cell contains a string
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.ContentType.Number">
            <summary>
            Cell contains a number
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.ContentType.DateTime">
            <summary>
            Cell contains a DateTime value
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.ContentType.Boolean">
            <summary>
            Cell contains a bool value
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Export.ContentType.UnresolvedValue">
            <summary>
            Cell contains a formula
            </summary>
            <summary>
            Cell contains a formula which cannot be resolved
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.SignStyles">
            <summary>
            Defines the different sign styles
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.SignStyles.PlusMinus">
            <summary>
            plus/minus sign
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.SignStyles.Arrow">
            <summary>
            up/down arrow
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.SignStyles.Image">
            <summary>
            image
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.SignStyles.Triangle">
            <summary>
            Triangle
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.OfficeShape">
            <summary>Represents the shape of the MS Office forms.</summary>
        </member>
        <member name="P:Telerik.WinControls.UI.OfficeShape.RoundedBottom">
            <summary><para>Gets or sets whether the bottom edges of the form should be rounded.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.UI.OfficeShape.CreatePath(System.Drawing.Rectangle)">
            <summary>Greates the path.</summary>
        </member>
        <member name="M:Telerik.WinControls.UI.OfficeShape.SerializeProperties">
            <summary>Serializes properties. Required for telerik serialization mechanism.</summary>
        </member>
        <member name="M:Telerik.WinControls.UI.OfficeShape.DeserializeProperties(System.String)">
            <summary>Deserializes properties. Required for telerik deserialization mechanism.</summary>
        </member>
        <member name="T:Telerik.WinControls.UI.TabEdgeShape">
            <summary>
            Represents Edge-like tab shape. Shapes are series of connected lines.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.TabEdgeShape.CreatePath(System.Drawing.Rectangle)">
            <summary>
            Creates Edge like tab shape. Overrides CreatePath method in the base class
            ElementShape.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.TabIEShape">
            <summary>Represents IE like tab shape. Shapes are series of connected lines and curves.</summary>
        </member>
        <member name="M:Telerik.WinControls.UI.TabIEShape.CreatePath(System.Drawing.Rectangle)">
            <summary>
            Creates IE like tab shape. Overrides CreatePath method in the base class
            ElementShape.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.TabItemShape">
            <summary>
            Represents IE-like tab shape used by the RadTabbedForm. Shapes are series of connected lines and curves.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.TabItemShape.CreatePath(System.Drawing.Rectangle)">
            <summary>
            Creates the default shape used by the RadTabbedFormControl. Overrides CreatePath method in the base class
            ElementShape.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.TabOffice12Shape">
            <exclude/>
            <summary>Represents office 12 like tab.</summary>
        </member>
        <member name="M:Telerik.WinControls.UI.TabOffice12Shape.CreatePath(System.Drawing.Rectangle)">
            <summary>
            Creates office 12 like tab. Overrides the method defined in its base class -
            ElementShape.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.TabVsShape">
            <summary>Represents VS like tab shape. Shapes are series of connected lines and curves.</summary>
        </member>
        <member name="P:Telerik.WinControls.UI.TabVsShape.RightToLeft">
            <summary><para>Gets or sets the orientation of this shape.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.UI.TabVsShape.CreatePath(System.Drawing.Rectangle)">
            <summary>
            Creates VS like tab shape. Overrides CreatePath method in its base class -
            ElementShape.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.TabVsShape.SerializeProperties">
            <summary>Serializes properties. Required for telerik serialization mechanism.</summary>
        </member>
        <member name="M:Telerik.WinControls.UI.TabVsShape.DeserializeProperties(System.String)">
            <summary>Deserializes properties. Required for telerik deserialization mechanism.</summary>
        </member>
        <member name="T:Telerik.WinControls.UI.TrackBarDThumbShape">
            <exclude/>
        </member>
        <member name="M:Telerik.WinControls.UI.TrackBarDThumbShape.CreatePath(System.Drawing.Rectangle)">
            <summary>
            Creates IE like tab shape. Overrides CreatePath method in the base class
            ElementShape.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.TrackBarLThumbShape">
            <exclude/>
        </member>
        <member name="M:Telerik.WinControls.UI.TrackBarLThumbShape.CreatePath(System.Drawing.Rectangle)">
            <summary>
            Creates IE like tab shape. Overrides CreatePath method in the base class
            ElementShape.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.TrackBarRThumbShape">
            <exclude/>
        </member>
        <member name="M:Telerik.WinControls.UI.TrackBarRThumbShape.CreatePath(System.Drawing.Rectangle)">
            <summary>
            Creates IE like tab shape. Overrides CreatePath method in the base class
            ElementShape.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.TrackBarUThumbShape">
            <exclude/>
        </member>
        <member name="M:Telerik.WinControls.UI.TrackBarUThumbShape.CreatePath(System.Drawing.Rectangle)">
            <summary>
            Creates IE like tab shape. Overrides CreatePath method in the base class
            ElementShape.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.StringTokenizer">
            <summary>
            A String Tokenizer that accepts Strings as source and delimiter. Only 1 delimiter is supported (either String or char[]).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.StringTokenizer.#ctor(System.String,System.String)">
            <summary>
            Constructor for StringTokenizer Class.
            </summary>
            <param name="source">The Source String.</param>
            <param name="delimiter">The Delimiter String. If a 0 length delimiter is given, " " (space) is used by default.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.StringTokenizer.Count">
            <summary>
            Method to get the number of tokens in this StringTokenizer.
            </summary>
            <returns>The number of Tokens in the internal ArrayList.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.StringTokenizer.NextToken">
            <summary>
            Method to get the next (string)token of this StringTokenizer.
            </summary>
            <returns>A string representing the next token; null if no tokens or no more tokens.</returns>
            
        </member>
        <member name="T:Telerik.WinControls.CurrentChangeReason">
            <summary>
            Defines possible reasons for a CurrentChanged notification from RadCollectionView.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.CurrentChangeReason.Default">
            <summary>
            The default reason for causing the event.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.CurrentChangeReason.Add">
            <summary>
            The event was caused by an Add operation.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.CurrentChangeReason.Move">
            <summary>
            The event was caused by a Move operation.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.CurrentChangeReason.EndUpdate">
            <summary>
            The event was caused by an EndUpdate operation.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.CurrentChangeReason.Sync">
            <summary>
            The event was caused by a Sync operation.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.FilterOperatorSettings.ContainedInFullStringSeparators">
            <summary>
            Used when the <see cref="T:Telerik.WinControls.Data.FilterOperator"/> is <see cref="F:Telerik.WinControls.Data.FilterOperator.IsContainedIn"/> or <see cref="F:Telerik.WinControls.Data.FilterOperator.IsNotContainedIn"/>
            Contains the separators used when the whole filter string, containing all the values as a single string is being split into different values.
            For example: Filter string "One, Two, Three". With the default separator "," the string will be split into "One", " Two" and " Three" values.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.FilterOperatorSettings.ContainedInSingleValueTrimSymbols">
            <summary>
            Used when the <see cref="T:Telerik.WinControls.Data.FilterOperator"/> is <see cref="F:Telerik.WinControls.Data.FilterOperator.IsContainedIn"/> or <see cref="F:Telerik.WinControls.Data.FilterOperator.IsNotContainedIn"/>
            Contains the trim symbols used when a single separated string value is being processed.
            For example: Filter value with quotes or intervals will be trimmed to a value with no intervals and quotes.
            'Single Value' -> Single Value
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.IPagedCollectionView.CanPage">
            <summary>
            Gets a value indicating whether this data view can be paginated.
            </summary>
            <value>
              <c>true</c> if this data view can be paginated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Telerik.WinControls.Data.IPagedCollectionView.PageChanged">
            <summary>
            Occurs when the IPagedCollectionView.PageIndex has changed.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Data.IPagedCollectionView.PageChanging">
            <summary>
            Occurs before the IPagedCollectionView.PageIndex is changed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.IPagedCollectionView.MoveToFirstPage">
            <summary>
            Sets the first page as the current page.
            </summary>
            <returns>true if the operation was successful; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.WinControls.Data.IPagedCollectionView.MoveToLastPage">
            <summary>
            Sets the last page as the current page.
            </summary>
            <returns>true if the operation was successful; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.WinControls.Data.IPagedCollectionView.MoveToNextPage">
            <summary>
            Moves to the page after the current page.
            </summary>
            <returns>true if the operation was successful; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.WinControls.Data.IPagedCollectionView.MoveToPage(System.Int32)">
            <summary>
            Requests a page move to the page at the specified index.
            </summary>
            <returns>true if the operation was successful; otherwise, false.</returns>
            <param name="pageIndex">The index of the page to move to.</param>
        </member>
        <member name="M:Telerik.WinControls.Data.IPagedCollectionView.MoveToPreviousPage">
            <summary>
            Moves to the page before the current page.
            </summary>
            <returns>true if the operation was successful; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.WinControls.Data.IPagedCollectionView.CanChangePage">
            <summary>
            Gets a value that indicates whether the IPagedCollectionView.PageIndex value is allowed to change.
            </summary>
            <returns>true if the IPagedCollectionView.PageIndex value is allowed to change; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.WinControls.Data.IPagedCollectionView.IsPageChanging">
            <summary>
            Gets a value that indicates whether a page index change is in process.
            </summary>
            <returns>true if the page index is changing; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.WinControls.Data.IPagedCollectionView.PageIndex">
            <summary>
            Gets the zero-based index of the current page.
            </summary>
            <returns>The zero-based index of the current page.</returns>
        </member>
        <member name="P:Telerik.WinControls.Data.IPagedCollectionView.PageSize">
            <summary>
            Gets or sets the number of items to display on a page.
            </summary>
            <returns>The number of items to display on a page.</returns>
        </member>
        <member name="P:Telerik.WinControls.Data.IPagedCollectionView.ItemCount">
            <summary>
            Gets the total number of items in the source collection.
            </summary>
            <returns>The total number of items in the source collection, or -1 if the total number is unknown.</returns>
        </member>
        <member name="T:Telerik.WinControls.Data.ObservableCollection`1">
            <summary>
            Represents a dynamic data collection that provides notifications when items get added, removed, or when the whole list is refreshed. 
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.#ctor">
            <summary>
            Initializes a new instance of the ObservableCollection class. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Initializes a new instance of the ObservableCollection class that contains elements copied from the specified list. 
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the ObservableCollection class that contains elements copied from the specified list. 
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.#ctor(Telerik.WinControls.Data.ObservableCollection{`0})">
            <summary>
            Initializes a new instance of the ObservableCollection class that contains elements copied from the specified list. 
            </summary>
            <param name="list"></param>
        </member>
        <member name="E:Telerik.WinControls.Data.ObservableCollection`1.CollectionChanged">
            <summary>
            Occurs when an item is added, removed, changed, moved, or the entire list is refreshed.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Data.ObservableCollection`1.CollectionChanging">
            <summary>
            Occurs before an item is added, removed, changed, moved, or the entire list is refreshed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.ClearItems">
            <summary>
            Overridden. Removes all items from the collection. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            Overridden. Inserts an item into the collection at the specified index. 
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at the specified index to a new location in the collection. 
            </summary>
            <param name="oldIndex"></param>
            <param name="newIndex"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
            <summary>
            Moves the item at the specified index to a new location in the collection. 
            </summary>
            <param name="oldIndex"></param>
            <param name="newIndex"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.BeginUpdate">
            <summary>
            Suspends event notification.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.EndItemUpdate(System.Boolean)">
            <summary>
            Resumes event notification.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.EndUpdate(System.Boolean)">
            <summary>
            Resumes event notification.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.ObservableCollection`1.IsUpdated">
            <summary>
            true to indicate the collection has completed update; otherwise false.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.OnCollectionChanged(Telerik.WinControls.Data.NotifyCollectionChangedEventArgs)">
            <summary>
            Calls the NotifyListenersCollectionChanged method with the provided arguments if not in a batch update. 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.NotifyListenersCollectionChanged(Telerik.WinControls.Data.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the CollectionChanged event with the provided arguments. 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.OnCollectionChanging(Telerik.WinControls.Data.NotifyCollectionChangingEventArgs)">
            <summary>
            Calls the NotifyListenersCollectionChanging method with the provided arguments if not in a batch update. 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.NotifyListenersCollectionChanging(Telerik.WinControls.Data.NotifyCollectionChangingEventArgs)">
            <summary>
            Raises the CollectionChanging event with the provided arguments. 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.RemoveItem(System.Int32)">
            <summary>
            Overridden. Removes the item at the specified index of the collection. 
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.SetItem(System.Int32,`0)">
            <summary>
            Overridden. Replaces the element at the specified index. 
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="E:Telerik.WinControls.Data.ObservableCollection`1.PropertyChanged">
            <summary>
            Occurs when a property of an object changes. 
            Calling the event is developer's responsibility.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.OnNotifyPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.OnNotifyPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the NotifyPropertyChanged event
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing event data.</param>
        </member>
        <member name="E:Telerik.WinControls.Data.ObservableCollection`1.PropertyChanging">
            <summary>
            Occurs before a property of an object changes. 		
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.OnNotifyPropertyChanging(System.String)">
            <summary>
            Raises the PropertyChanging event
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.OnNotifyPropertyChanging(Telerik.WinControls.Interfaces.PropertyChangingEventArgsEx)">
            <summary>
            Raises the NotifyPropertyChanging event
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangingEventArgs"/> instance containing event data.</param>
        </member>
        <member name="T:Telerik.WinControls.Data.ReadOnlyObservableCollection`1">
            <summary>
            Represents a read-only data collection that provides notifications when the original <see cref="T:Telerik.WinControls.Data.ObservableCollection`1"/> has changed. 
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="E:Telerik.WinControls.Data.ReadOnlyObservableCollection`1.CollectionChanged">
            <summary>
            Occurs when an item is added, removed, changed, moved, or the entire list is refreshed.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Data.ReadOnlyObservableCollection`1.PropertyChanged">
            <summary>
            Occurs when when a property of an object changes change. 
            Calling the event is developer's responsibility.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Data.ReadOnlyObservableCollection`1.Telerik#WinControls#Data#INotifyCollectionChanged#CollectionChanged">
            <summary>
            Occurs when an item is added, removed, changed, moved, or the entire list is refreshed.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Data.ReadOnlyObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
            <summary>
            Occurs when when a property of an object changes change. 
            Calling the event is developer's responsibility.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.ReadOnlyObservableCollection`1.#ctor(Telerik.WinControls.Data.ObservableCollection{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.Data.ReadOnlyObservableCollection`1"/> with an instance of a <see cref="T:Telerik.WinControls.Data.ObservableCollection`1"/> />
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ReadOnlyObservableCollection`1.OnCollectionChanged(Telerik.WinControls.Data.NotifyCollectionChangedEventArgs)">
            <summary>
            Fires the CollectionChanged event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ReadOnlyObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Fires the PropertyChnaged event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.CollectionViewProvider`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.Data.CollectionViewProvider`1"/> class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.CollectionViewProvider`1.#ctor(Telerik.WinControls.Data.ICollectionView{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.Data.CollectionViewProvider`1"/> class.
            </summary>
            <param name="sourceCollectionView">The source collection view.</param>
        </member>
        <member name="P:Telerik.WinControls.Data.CollectionViewProvider`1.SortDescriptors">
            <summary>
            Gets or sets the sort descriptors.
            </summary>
            <value>The sort descriptors.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.CollectionViewProvider`1.GroupDescriptors">
            <summary>
            Gets or sets the group descriptors.
            </summary>
            <value>The group descriptors.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.CollectionViewProvider`1.Filter">
            <summary>
            Gets or sets the filter.
            </summary>
            <value>The filter.</value>
        </member>
        <member name="M:Telerik.WinControls.Data.CollectionViewProvider`1.GetView(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Gets the view.
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.CollectionViewProvider`1.OnNotifyPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:Telerik.WinControls.Data.CollectionViewProvider`1.OnNotifyPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the NotifyPropertyChanged event
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Telerik.WinControls.Data.DateFilterDescriptor.Value">
            <summary>
            Gets or sets the date value.
            </summary>
            <value>The date value.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.DateFilterDescriptor.Expression">
            <summary>
            Gets the filter expression.
            </summary>
            <value>The filter expression.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.DateFilterDescriptor.IgnoreTimePart">
            <summary>
            Get or set if the time part of date value should be ignored.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.DateFilterDescriptor.GetExpression(Telerik.WinControls.Data.DateFilterDescriptor)">
            <summary>
            Gets the expression.
            </summary>
            <param name="dateTimeFilterDescriptor">The filter descriptor.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.DateFilterDescriptor.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Telerik.WinControls.Data.EmptyCollectionView`1.Comparer">
            <summary>
            Gets or sets the comparer.
            </summary>
            <value>The comparer.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.EmptyCollectionView`1.Groups">
            <summary>
            Gets the groups.
            </summary>
            <value>The groups.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.EmptyCollectionView`1.CanFilter">
            <summary>
            Gets or sets a value indicating whether this data view can filter.
            </summary>
            <value>
            	<c>true</c> if this instance can filter; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.WinControls.Data.EmptyCollectionView`1.CanGroup">
            <summary>
            Gets or sets a value indicating whether this data view can group.
            </summary>
            <value><c>true</c> if this instance can group; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.EmptyCollectionView`1.CanSort">
            <summary>
            Gets or sets a value indicating whether this data view can sort.
            </summary>
            <value><c>true</c> if this instance can sort; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Telerik.WinControls.Data.CompositeFilterDescriptor.DescriptorType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Data.CompositeFilterDescriptor.DescriptorType.Unknown">
            <summary>
            Type is not predefined.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Data.CompositeFilterDescriptor.DescriptorType.Between">
            <summary>
            Between <see cref="T:Telerik.WinControls.Data.CompositeFilterDescriptor"/>
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Data.CompositeFilterDescriptor.DescriptorType.NotBetween">
            <summary>
            Not Between <see cref="T:Telerik.WinControls.Data.CompositeFilterDescriptor"/>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.CompositeFilterDescriptor.GetDescriptorType(Telerik.WinControls.Data.CompositeFilterDescriptor)">
            <summary>
            Gets the type of the <see cref="T:Telerik.WinControls.Data.CompositeFilterDescriptor"/>.
            </summary>
            <param name="compositeDescriptor">The filter descriptor.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.CompositeFilterDescriptor.CreateDescriptor(Telerik.WinControls.Data.CompositeFilterDescriptor.DescriptorType,System.String,System.Object[])">
            <summary>
            Creates the descriptor.
            </summary>
            <param name="type">The type.</param>
            <param name="propertyName"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.CompositeFilterDescriptor.CreateDescriptor(Telerik.WinControls.Data.CompositeFilterDescriptor.DescriptorType,System.String,System.Type,System.Object[])">
            <summary>
            Creates the descriptor.
            </summary>
            <param name="type">The type.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="dataType">Type of the data that will be filtered.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.Data.CompositeFilterDescriptor.LogicalOperator">
            <summary>
            Gets or sets the logical operator.
            </summary>
            <value>The logical operator.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.CompositeFilterDescriptor.FilterDescriptors">
            <summary>
            Gets the filter descriptors.
            </summary>
            <value>The filter descriptors.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.CompositeFilterDescriptor.NotOperator">
            <summary>
            Gets or sets a value indicating whether [not operator].
            </summary>
            <value><c>true</c> if [not operator]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.CompositeFilterDescriptor.PropertyName">
            <summary>
            Gets or sets the name of the property.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.CompositeFilterDescriptor.Operator">
            <summary>
            Gets or sets the operator.
            </summary>
            <value>The operator.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.CompositeFilterDescriptor.IsSameName">
            <summary>
            Gets a value indicating whether this instance contains FilterDescriptor's with different PropertyName.
            </summary>
            <value>
            	<c>true</c> if any child filters have the same name; otherwise <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.WinControls.Data.CompositeFilterDescriptor.Expression">
            <summary>
            Gets the filter expression.
            </summary>
            <value>The filter expression.</value>
        </member>
        <member name="M:Telerik.WinControls.Data.CompositeFilterDescriptor.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Data.CompositeFilterDescriptor.ConvertTo(Telerik.WinControls.Data.CompositeFilterDescriptor.DescriptorType)">
            <summary>
            Converts to the filter descriptor to concrete type
            </summary>
            <param name="type">The type.</param>
            <returns>The converted instance of <see cref="T:Telerik.WinControls.Data.CompositeFilterDescriptor"/></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.CompositeFilterDescriptor.ConvertTo(Telerik.WinControls.Data.CompositeFilterDescriptor.DescriptorType,System.Type)">
            <summary>
            Converts to the filter descriptor to a concrete type.
            </summary>
            <param name="type">The type to which the filter will be converted.</param>
            <param name="dataType">The type of data that will be filtered.</param>
            <returns>
            The converted instance of <see cref="T:Telerik.WinControls.Data.CompositeFilterDescriptor" />
            </returns>
        </member>
        <member name="P:Telerik.WinControls.Data.DataItemGroup`1.GroupBuilder">
            <summary>
            This property is used internally.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.FilterDescriptor.PropertyName">
            <summary>
            Gets or sets the name of the property.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.FilterDescriptor.Operator">
            <summary>
            Gets or sets the operator.
            </summary>
            <value>The operator.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.FilterDescriptor.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.FilterDescriptor.Expression">
            <summary>
            Gets the filter expression.
            </summary>
            <value>The filter expression.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.FilterDescriptor.IsFilterEditor">
            <summary>
            Gets a value indicating whether this instance is default filter descriptor of the column
            </summary>
            <value>
            	<c>true</c> if this instance is default; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Telerik.WinControls.Data.FilterDescriptor.GetExpression(Telerik.WinControls.Data.FilterDescriptor)">
            <summary>
            Gets the expression.
            </summary>
            <param name="filterDescriptor">The filter descriptor.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.FilterDescriptor.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Data.FilterDescriptor.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:Telerik.WinControls.Data.FilterDescriptor.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing event data.</param>
        </member>
        <member name="P:Telerik.WinControls.Data.FilterDescriptorCollection.UseCaseSensitiveFieldNames">
            <summary>
            Gets or sets a value indicating whether fields with names that differ only in the casing
            should be considered different.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.FilterDescriptorCollection.LogicalOperator">
            <summary>
            Gets or sets the logical operator.
            </summary>
            <value>The logical operator.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.FilterDescriptorCollection.Expression">
            <summary>
            Gets or sets the expression.
            </summary>
            <value>The expression.</value>
        </member>
        <member name="M:Telerik.WinControls.Data.FilterDescriptorCollection.Add(System.String,Telerik.WinControls.Data.FilterOperator,System.Object)">
            <summary>
            Adds the specified property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="filterOperator">The filter operator.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.WinControls.Data.FilterDescriptorCollection.IndexOf(System.String)">
            <summary>
            Indexes the of.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.FilterDescriptorCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified property name].
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>
            	<c>true</c> if [contains] [the specified property name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Data.FilterDescriptorCollection.Remove(System.String)">
            <summary>
            Removes the specified property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.FilterDescriptorCollection.Remove(System.String,System.Predicate{Telerik.WinControls.Data.FilterDescriptor})">
            <summary>
            Removes the specified property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="predicate">The predicate which determine weather the filter can be deleted.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.Data.Group`1.Level">
            <summary>
            Get the zero-based depth of the Group
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.Group`1.Header">
            <summary>
            Gets or sets the header.
            </summary>
            <value>The header.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.Group`1.Key">
            <summary>
            Gets the key of the group.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.Group`1.ItemCount">
            <summary>
            Gets the item count.
            </summary>
            <value>The item count.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.Group`1.Item(System.Int32)">
            <summary>
            Gets the item at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.WinControls.Data.Group`1.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.Group`1.Groups">
            <summary>
            Gets the groups.
            </summary>
            <value>The groups.</value>
        </member>
        <member name="M:Telerik.WinControls.Data.Group`1.Contains(`0)">
            <summary>
            Determines whether [contains] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if [contains] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Data.Group`1.IndexOf(`0)">
            <summary>
            Indexes the of.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.Group`1.Evaluate(System.String)">
            <summary>
            Evaluates the specified expression.
            </summary>
            <param name="expression">The expression.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.Group`1.GetItems">
            <summary>
            Gets the items contained in this group. This method is used internally.
            </summary>
            <returns>A list containing group items.</returns>
        </member>
        <member name="P:Telerik.WinControls.Data.GroupCollection`1.GroupList">
            <summary>
            Gets the group list contained in this collection. This property is used internally.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.GroupDescriptor.Aggregates">
            <summary>
            Gets or sets the aggregates.
            </summary>
            <value>The aggregates.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.GroupDescriptor.Format">
            <summary>
            Gets or sets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.GroupDescriptor.Expression">
            <summary>
            Gets or sets the expression.
            </summary>
            <value>The expression.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.GroupDescriptor.GroupNames">
            <summary>
            Gets the group names.
            </summary>
            <value>The group names.</value>
        </member>
        <member name="M:Telerik.WinControls.Data.GroupDescriptor.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Data.GroupDescriptor.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:Telerik.WinControls.Data.GroupDescriptor.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing event data.</param>
        </member>
        <member name="P:Telerik.WinControls.Data.GroupDescriptorCollection.UseCaseSensitiveFieldNames">
            <summary>
            Gets or sets a value indicating whether fields with names that differ only in the casing
            should be considered different.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.GroupDescriptorCollection.Expression">
            <summary>
            Gets or sets the expression.
            </summary>
            <value>The expression.</value>
        </member>
        <member name="M:Telerik.WinControls.Data.GroupDescriptorCollection.Add(System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            Adds the specified property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Telerik.WinControls.Data.GroupDescriptorCollection.Remove(System.String)">
            <summary>
            Removes the specified property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.GroupDescriptorCollection.Contains(System.String,System.Boolean)">
            <summary>
            Determines whether [contains] [the specified property name].
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="caseSensitive"></param>
            <returns>
            	<c>true</c> if [contains] [the specified property name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Data.GroupDescriptorCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified property name].
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>
            	<c>true</c> if [contains] [the specified property name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Data.GroupDescriptorCollection.FindAllAssociatedSortDescriptors(System.String)">
            <summary>
            Finds all sort descriptors associated with the group descriptors by property name
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>All sort descriptors contained in the group descriptors by the specified propertyName</returns>
        </member>
        <member name="M:Telerik.WinControls.Data.GroupDescriptorCollection.FindAllAssociatedSortDescriptors(System.String,System.Boolean)">
            <summary>
            Finds all sort descriptors associated with the group descriptors by property name
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="caseSensitive">if set to <c>true</c> [case sensitive].</param>
            <returns>All sort descriptors contained in the group descriptors by the specified propertyName</returns>
        </member>
        <member name="T:Telerik.WinControls.Data.GroupBuilder`1">
            <summary>
            Used to build groups from indexer
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Telerik.WinControls.Data.GroupBuilder`1.Groups">
            <summary>
            Gets the groups.
            </summary>
            <value>The groups.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.GroupBuilder`1.GroupPredicate">
            <summary>
            Gets or sets the group predicate.
            </summary>
            <value>The group predicate.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.GroupBuilder`1.DefaultGroupPredicate">
            <summary>
            Gets the default group predicate.
            </summary>
            <value>The group predicate.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.GroupBuilder`1.NeedsRefresh">
            <summary>
            Gets a value indicating whether [needs refresh].
            </summary>
            <value><c>true</c> if [needs refresh]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.GroupBuilder`1.CollectionView">
            <summary>
            Gets the collection view associated with this builder.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.GroupBuilder`1.Perform(Telerik.WinControls.Data.IReadOnlyCollection{`0},System.Int32,Telerik.WinControls.Data.Group{`0})">
            <summary>
            Performs the grouping operation for specified items.
            </summary>
            <param name="items">The items.</param>
            <param name="level">The level.</param>
            <param name="parent">The parent.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.Data.ISnapshotCollectionView`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Telerik.WinControls.Data.IReadOnlyCollection`1.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.IReadOnlyCollection`1.Item(System.Int32)">
            <summary>
            Gets the item at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Telerik.WinControls.Data.IReadOnlyCollection`1.Contains(`0)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Data.IReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Telerik.WinControls.Data.IReadOnlyCollection`1.IndexOf(`0)">
            <summary>
            Indexes the of.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.SnapshotCollectionView`1.Evaluate(System.String,`0)">
            <summary>
            Evaluates the specified expression.
            </summary>
            <param name="expression">The expression.</param>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.SnapshotCollectionView`1.Evaluate(System.String,System.Int32,System.Int32)">
            <summary>
            Evaluates the specified expression.
            </summary>
            <param name="expression">The expression.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.SnapshotCollectionView`1.SetDirty">
            <summary>
            Sets the view in dirty state.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.SnapshotCollectionView`1.Groups">
            <summary>
            Gets the groups.
            </summary>
            <value>The groups.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.SnapshotCollectionView`1.GroupPredicate">
            <summary>
            Gets or sets the group predicate.
            </summary>
            <value>The group predicate.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.SnapshotCollectionView`1.SourceCollection">
            <summary>
            Gets the source collection.
            </summary>
            <value>The source collection.</value>
        </member>
        <member name="E:Telerik.WinControls.Data.NotifyPropertyBase.PropertyChanged">
            <summary>
            Occurs when a property of an object changes. 		
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Data.NotifyPropertyBase.PropertyChanging">
            <summary>
            Occurs before a property of an object changes. 		
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyPropertyBase.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyPropertyBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing event data.</param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyPropertyBase.ProcessPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            This method is called right befor the <see cref="E:Telerik.WinControls.Data.NotifyPropertyBase.PropertyChanged"/> event is fired.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyPropertyBase.OnPropertyChanging(System.String,System.Object,System.Object)">
            <summary>
            Raises the PropertyChanging event
            </summary>
            <param name="propertyName">The name of the property</param>
            <param name="originalValue"></param>
            <param name="value">The value that is goint to be set to the property.</param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyPropertyBase.OnPropertyChanging(System.String)">
            <summary>
            Raises the PropertyChanging event
            </summary>
            <param name="propertyName">The name of the property</param>
            <returns>true if the event has been canceled, for more information see <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyPropertyBase.OnPropertyChanging(Telerik.WinControls.Interfaces.PropertyChangingEventArgsEx)">
            <summary>
            Raises the PropertyChanging event.
            <b>Note:</b> This method is called even when the notifications are suspended. 
            </summary>
            <param name="e">A <see cref="T:Telerik.WinControls.Interfaces.PropertyChangingEventArgsEx"/> instance containing event data.</param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyPropertyBase.ProcessPropertyChanging(Telerik.WinControls.Interfaces.PropertyChangingEventArgsEx)">
            <summary>
            This method is called right before the <see cref="E:Telerik.WinControls.Data.NotifyPropertyBase.PropertyChanging"/> event is fired.
            Note: If <see cref="P:Telerik.WinControls.Data.NotifyPropertyBase.IsSuspended"/> is true, this method is not called.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyPropertyBase.SetProperty``1(System.String,``0@,``0)">
            <summary>
            General method for setting the value of the field related to the property that is modified. 
            This method confirms that the old and new values are different, then fires the 
            <see cref="E:Telerik.WinControls.Data.NotifyPropertyBase.PropertyChanging"/> event, then sets the given value to the supplied field, 
            and fires the <see cref="E:Telerik.WinControls.Data.NotifyPropertyBase.PropertyChanged"/> event.
            <b>Note:</b> If the <see cref="E:Telerik.WinControls.Data.NotifyPropertyBase.PropertyChanging"/> event is canceled, the last two actions are
            not performed.
            </summary>
            <example>
            <code>
            public class MyNotificationsTest : NotifyPropertyBase
            {
                private int myInt = 0;
                private int myInt2 = 0; //
            
                public int AsInt
                {
                   get 
                   { 
                      return this.myField; 
                   }
                   set
                   {
                      if (SetProperty("AsInt", ref this.myInt, value))
                      {
                         // perform additional actions when new value is set to myInt.
                      }
                   }
                }
            
                public int AsInt2
                {
                   get 
                   { 
                      return (float)this.myInt2; 
                   }
                   set
                   {
                      // The following property setter is the same as the previous one.
                      if (this.myInt2 != value) 
                      {
                          PropertyChangingEventArgs2 ea = new PropertyChangingEventArgs2("AsInt2", value);
                          OnPropertyChanging(ea);
            
                          if (!ea.Cancel)
                          {
                             this.myInt2 = (int)ea.Value;
                             OnPropertyChanged("AsInt2");
            
                             // perform additional actions when new value is set to myInt2.
                          }
                       }
                   }
                }
            }
            </code>
            </example>
            The two setter implementations are identical. If you require to perform some actions before
            the <see cref="E:Telerik.WinControls.Data.NotifyPropertyBase.PropertyChanged"/> event is fired, you can use the second implementation, or,
            a better solution is to override the <see cref="M:Telerik.WinControls.Data.NotifyPropertyBase.ProcessPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)"/> method and place
            the code there.
            <typeparam name="T">The type of the field that is to be modified.</typeparam>
            <param name="propertyName">The name of the property, that will appear as propertyName in the <see cref="E:Telerik.WinControls.Data.NotifyPropertyBase.PropertyChanging"/> and <see cref="E:Telerik.WinControls.Data.NotifyPropertyBase.PropertyChanged"/> event args.</param>
            <param name="propertyField">The field, that is related to the property.</param>
            <param name="value">The value that is to be set to the field in case the <see cref="E:Telerik.WinControls.Data.NotifyPropertyBase.PropertyChanging"/> event is not being <see cref="P:System.ComponentModel.CancelEventArgs.Cancel">Canceled</see>.</param>
            <returns>true if new value is being set</returns>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.Comparer">
            <summary>
            Gets or sets the comparer.
            </summary>
            <value>The comparer.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.GroupComparer">
            <summary>
            Gets or sets the comparer.
            </summary>
            <value>The comparer.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.ChangeCurrentOnAdd">
            <summary>
            Gets or sets a value indicating whether [change current on add].
            </summary>
            <value><c>true</c> if [change current on add]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.IsEmpty">
            <summary>
            Gets a value indicating whether this item collection is empty.
            </summary>
            <value><c>true</c> if this item collection is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.IsDynamic">
            <summary>
            Gets a value that indicates whether the underlying collection provides change notifications.
            </summary>
            <value>
            	<c>true</c> if this instance is dynamic; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.Item(System.Int32)">
            <summary>
            Gets the item at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.CaseSensitive">
            <summary>
            Indicates whether string comparisons of data are case-sensitive. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.FilterExpression">
            <summary>
            Gets or sets the filter expression.
            </summary>
            <value>The filter expression.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.BypassFilter">
            <summary>
            Gets or sets a value indicating whether filtering will be performed or it will be handled by the user/data source.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.BypassSort">
            <summary>
            Gets or sets a value indicating whether sorting will be performed or it will be handled by the user/data source.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.PassesFilter(`0)">
            <summary>
            Passeses the filter.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.BeginUpdate">
            <summary>
            Suspends event notification.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.EndUpdate(System.Boolean)">
            <summary>
            Resumes event notification.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.EndUpdate">
            <summary>
            Resumes event notification.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.DeferRefresh">
            <summary>
            Defers the refresh.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies to array.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.LoadData(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Loads the data.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.Find(System.Int32,System.Object)">
            <summary>
            Finds the specified item index.
            </summary>
            <param name="itemIndex">Index of the item.</param>
            <param name="dataBoundItem">The data bound item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.FindGroup(Telerik.WinControls.Data.Group{`0})">
            <summary>
            Searches the Groups collection for a match, using the Keys in the provided group.
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.ContainsGroup(Telerik.WinControls.Data.Group{`0})">
            <summary>
            Determines whether the specified group is present within this view.
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.IndexOf(`0)">
            <summary>
            Indexes the of.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.Contains(`0)">
            <summary>
            Determines whether [contains] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if [contains] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.Evaluate(System.String,`0)">
            <summary>
            Evaluates the specified expression.
            </summary>
            <param name="expression">The expression.</param>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.Evaluate(System.String,System.Int32,System.Int32)">
            <summary>
            Evaluates the specified expression.
            </summary>
            <param name="expression">The expression.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.Evaluate(System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Evaluates the specified expression.
            </summary>
            <param name="expression">The expression.</param>
            <param name="items">The items.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.TryEvaluate(System.String,System.Collections.Generic.IEnumerable{`0},System.Object@)">
            <summary>
            This method is used internally.
            </summary>
            <param name="expression"></param>
            <param name="items"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.TryEvaluate(System.String,System.Collections.Generic.IEnumerable{`0},System.Int32,System.Object@)">
            <summary>
            Try to evaluate the specified expression.
            </summary>
            <param name="expression">The expression.</param>
            <param name="items">The items.</param>
            <param name="index">Index of item, which the result will be calculated for</param>
            <param name="result">Expression result</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.HasFilter">
            <summary>
            Gets a value indicating whether this instance has filter applied.
            </summary>
            <value>
            	<c>true</c> if this instance has filter applied; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.HasGroup">
            <summary>
            Gets a value indicating whether this instance has group applied.
            </summary>
            <value><c>true</c> if this instance has group applied; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.Version">
            <summary>
            Gets a value indicating the current version of the view.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.LazyRefresh">
            <summary>
            This method is used internally.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.SortDescriptorCollectionFactory">
            <summary>
            This property is used internally.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.GroupDescriptorCollectionFactory">
            <summary>
            This property is used internally.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.HasSort">
            <summary>
            Gets a value indicating whether this instance has sort applied.
            </summary>
            <value><c>true</c> if this instance has sort applied; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.CurrentItem">
            <summary>
            Gets or sets the current item.
            </summary>
            <value>The current item.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.CurrentPosition">
            <summary>
            Gets or sets the current position.
            </summary>
            <value>The current position.</value>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.MoveCurrentTo(`0)">
            <summary>
            Moves the current to.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.MoveCurrentToFirst">
            <summary>
            Moves the current to first.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.MoveCurrentToLast">
            <summary>
            Moves the current to last.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.MoveCurrentToNext">
            <summary>
            Moves the current to next.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.MoveCurrentToPosition(System.Int32)">
            <summary>
            Moves the current to position.
            </summary>
            <param name="newPosition">The position.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.SetCurrentPositionCore(System.Int32,System.Boolean)">
            <summary>
            The core update routine for the current position.
            </summary>
            <param name="newPosition">New position of the current item.</param>
            <param name="forceNotify">True to raise CurrentChanged regardless of whether actual position change is available.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.MoveCurrentToPrevious">
            <summary>
            Moves the current to previous.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.CanFilter">
            <summary>
            Gets or sets a value indicating whether this data view can filter.
            </summary>
            <value>
            	<c>true</c> if this instance can filter; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.CanGroup">
            <summary>
            Gets or sets a value indicating whether this data view can group.
            </summary>
            <value><c>true</c> if this instance can group; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.CanSort">
            <summary>
            Gets or sets a value indicating whether this data view can sort.
            </summary>
            <value><c>true</c> if this instance can sort; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.SourceCollection">
            <summary>
            Gets the source collection.
            </summary>
            <value>The source collection.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.SortDescriptors">
            <summary>
            Gets the sort descriptions.
            </summary>
            <value>The sort descriptions.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.GroupDescriptors">
            <summary>
            Gets the group descriptions.
            </summary>
            <value>The group descriptions.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.Filter">
            <summary>
            Provides a callback so that the default filtering expression parser can be substituted. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.IsIncrementalFiltering">
            <summary>
            Gets a value indicating whether this instance is incremental filtering.
            </summary>
            <value>
            	<c>true</c> if this instance is incremental filtering; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.DefaultFilter">
            <summary>
            Default callback so that the default filtering expression parser can be substituted. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.Groups">
            <summary>
            Gets the groups.
            </summary>
            <value>The groups.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.DefaultGroupPredicate">
            <summary>
            Gets the default group predicate.
            </summary>
            <value>The default group predicate.</value>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.Refresh">
            <summary>
            Refreshes this data view.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.OnNotifyPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.EnsurePageIndex">
            <summary>
            Ensures the index of the page is within the valid pages range.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.OnNotifyPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the NotifyPropertyChanged event
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.PagingBeforeGrouping">
            <summary>
            Gets or sets a value indicating whether paging is performed before grouping or vice versa.
            </summary>
            <value>
            <c>true</c> if paging is performed before grouping; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.CanPage">
            <summary>
            Gets or sets a value indicating whether this data view can be paginated.
            </summary>
            <value>
            <c>true</c> if this data view can be paginated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Telerik.WinControls.Data.RadCollectionView`1.PageChanged">
            <summary>
            Occurs when the IPagedCollectionView.PageIndex has changed.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Data.RadCollectionView`1.PageChanging">
            <summary>
            Occurs before the IPagedCollectionView.PageIndex is changed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.MoveToFirstPage">
            <summary>
            Sets the first page as the current page.
            </summary>
            <returns>
            true if the operation was successful; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.MoveToLastPage">
            <summary>
            Sets the last page as the current page.
            </summary>
            <returns>
            true if the operation was successful; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.MoveToNextPage">
            <summary>
            Moves to the page after the current page.
            </summary>
            <returns>
            true if the operation was successful; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.MoveToPage(System.Int32)">
            <summary>
            Requests a page move to the page at the specified zero-based index.
            </summary>
            <param name="pageIndex">The zero-based index of the page to move to.</param>
            <returns>
            true if the operation was successful; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.MoveToPreviousPage">
            <summary>
            Moves to the page before the current page.
            </summary>
            <returns>
            true if the operation was successful; otherwise, false.
            </returns>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.CanChangePage">
            <summary>
            Gets a value that indicates whether the IPagedCollectionView.PageIndex value is allowed to change.
            </summary>
            <returns>true if the IPagedCollectionView.PageIndex value is allowed to change; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.IsPageChanging">
            <summary>
            Gets a value that indicates whether a page index change is in process.
            </summary>
            <returns>true if the page index is changing; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.PageIndex">
            <summary>
            Gets the zero-based index of the current page.
            </summary>
            <returns>The zero-based index of the current page.</returns>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.PageSize">
            <summary>
            Gets or sets the number of items to display on a page.
            </summary>
            <returns>The number of items to display on a page.</returns>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.ItemCount">
            <summary>
            Gets the total number of items in the source collection.
            </summary>
            <returns>The total number of items in the source collection, or -1 if the total number is unknown.</returns>
        </member>
        <member name="P:Telerik.WinControls.Data.RadCollectionView`1.TotalPages">
            <summary>
            Gets the total number of pages with the current page size.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.OnPageChanging(System.Int32)">
            <summary>
            Fires the PageChanging event. Returns the value of the Cancel event argument.
            </summary>
            <param name="newIndex">The new index.</param>
            <returns>True if the event was canceled, otherwise false.</returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadCollectionView`1.OnPageChanged">
            <summary>
            Fires the PageChanged event.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.RadDataView`1.Comparer">
            <summary>
            Gets or sets the sort comparer.
            </summary>
            <value>The comparer.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadDataView`1.GroupComparer">
            <summary>
            Gets or sets the group comparer.
            </summary>
            <value>The group comparer.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadDataView`1.Groups">
            <summary>
            Gets the groups.
            </summary>
            <value>The groups.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadDataView`1.GroupPredicate">
            <summary>
            Gets or sets the group predicate.
            </summary>
            <value>The group predicate.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadDataView`1.DefaultGroupPredicate">
            <summary>
            Gets the default group predicate.
            </summary>
            <value>The default group predicate.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadDataView`1.CanPage">
            <summary>
            Gets or sets a value indicating whether this data view can be paginated.
            </summary>
            <value>
              <c>true</c> if this data view can be paginated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadDataView`1.CanFilter">
            <summary>
            Gets or sets a value indicating whether this data view can filter.
            </summary>
            <value>
            	<c>true</c> if this instance can filter; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadDataView`1.CanGroup">
            <summary>
            Gets or sets a value indicating whether this data view can group.
            </summary>
            <value><c>true</c> if this instance can group; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadDataView`1.CanSort">
            <summary>
            Gets or sets a value indicating whether this data view can sort.
            </summary>
            <value><c>true</c> if this instance can sort; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Telerik.WinControls.Data.RadDataView`1.MoveToLastPage">
            <summary>
            Sets the last page as the current page.
            </summary>
            <returns>
            true if the operation was successful; otherwise, false.
            </returns>
        </member>
        <member name="P:Telerik.WinControls.Data.RadListSource`1.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadListSource`1.Current">
            <summary>
            Gets the current.
            </summary>
            <value>The current.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.RadListSource`1.CreateATransactionForEveryValueSetting">
            <summary>
            Gets or sets a value indicating whether each value setting should be encapsulaed in its own BeginEdit EndEditTransaction.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.Refresh">
            <summary>
            Refreshes this instance.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.BeginUpdate">
            <summary>
            Begins the update.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.EndUpdate">
            <summary>
            Ends the update.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.EndUpdate(System.Boolean)">
            <summary>
            Ends the update.
            </summary>
            <param name="notifyUpdates">if set to <c>true</c> [notify updates].</param>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.AddNew">
            <summary>
            Adds the new.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.AddNew(`0)">
            <summary>
            Adds the created item to ListSource.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.Move(System.Int32,System.Int32)">
            <summary>
            Moves the specified item.
            </summary>
            <param name="oldIndex">The old index.</param>
            <param name="newIndex">The new index.</param>
        </member>
        <member name="P:Telerik.WinControls.Data.RadListSource`1.CollectionView">
            <summary>
            Gets the collection view.
            </summary>
            <value>The collection view.</value>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.NotifyItemChanging(`0)">
            <summary>
            Raises a CollectionChanged notification with action ItemChanging. Must be paired with the NotifyItemChanged method.
            </summary>
            <param name="item"></param>        
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.NotifyItemChanged(`0)">
            <summary>
            Raises a CollectionChanged notification with action ItemChanged. Must be paired with the NotifyItemChanging method.
            </summary>
            <param name="item"></param> 
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.NotifyItemChanging(`0,System.String)">
            <summary>
            Raises a CollectionChanged notification with action ItemChanging. Must be paired with the NotifyItemChanged method.
            </summary>
            <param name="item"></param>        
            <param name="propertyName"></param> 
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.NotifyItemChanged(`0,System.String)">
            <summary>
            Raises a CollectionChanged notification with action ItemChanged. Must be paired with the NotifyItemChanging method.
            </summary>
            <param name="item"></param> 
            <param name="propertyName"></param> 
        </member>
        <member name="P:Telerik.WinControls.Data.RadListSource`1.DataMember">
            <summary>
            Gets or sets the name of the list or table in the data source for which the <see cref="T:Telerik.WinControls.Data.RadListSource`1"/> is bound. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.RadListSource`1.DataSource">
            <summary>
            Gets or sets the data source of the <see cref="T:Telerik.WinControls.Data.RadListSource`1"/>.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.RadListSource`1.IsDataBound">
            <summary>
            Gets a value indicating whether this instance is data bound.
            </summary>
            <value>
            	<c>true</c> if this instance is data bound; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Returns the <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> that represents the properties on each item used to bind data.
            </summary>
            <param name="listAccessors">An array of <see cref="T:System.ComponentModel.PropertyDescriptor"/> objects to find in the collection as bindable. This can be null.</param>
            <returns>
            The <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> that represents the properties on each item used to bind data.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Returns the name of the list.
            </summary>
            <param name="listAccessors">An array of <see cref="T:System.ComponentModel.PropertyDescriptor"/> objects, for which the list name is returned. This can be null.</param>
            <returns>The name of the list.</returns>
        </member>
        <member name="E:Telerik.WinControls.Data.RadListSource`1.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.OnNotifyPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.OnNotifyPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the NotifyPropertyChanged event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="P:Telerik.WinControls.Data.RadListSource`1.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.Add(`0)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.AddUnboundInternal(`0)">
            <summary>
            Used internally by the design time property editor.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.
            -or-
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            -or-
            Type T cannot be cast automatically to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="P:Telerik.WinControls.Data.RadListSource`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Telerik.WinControls.Data.RadListSource`1.IsUpdating">
            <summary>
            Determines whether this instance is in a Begin/End update block.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:Telerik.WinControls.Data.RadListSource`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Telerik.WinControls.Data.SortDescriptor.PropertyName">
            <summary>
            Gets or sets the name of the property.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.SortDescriptor.Direction">
            <summary>
            Gets or sets the direction.
            </summary>
            <value>The direction.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.SortDescriptor.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="M:Telerik.WinControls.Data.SortDescriptor.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:Telerik.WinControls.Data.SortDescriptor.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing event data.</param>
        </member>
        <member name="M:Telerik.WinControls.Data.SortDescriptor.OnPropertyChanging(System.String,System.Object,System.Object)">
            <summary>
            Raises the <see cref="E:PropertyChanging"/> event.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
            <returns>Returns [TRUE] If the events is not canceled, otherwise [FALSE].</returns>
        </member>
        <member name="M:Telerik.WinControls.Data.SortDescriptor.OnPropertyChanging(Telerik.WinControls.Interfaces.PropertyChangingEventArgsEx)">
            <summary>
            Raises the <see cref="E:PropertyChanging"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Telerik.WinControls.Data.SortDescriptorCollection.UseCaseSensitiveFieldNames">
            <summary>
            Gets or sets a value indicating whether fields with names that differ only in the casing
            should be considered different.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.SortDescriptorCollection.Expression">
            <summary>
            Gets or sets the expression.
            </summary>
            <value>The expression.</value>
        </member>
        <member name="M:Telerik.WinControls.Data.SortDescriptorCollection.Add(System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            Adds the specified property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Telerik.WinControls.Data.SortDescriptorCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified property name].
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>
            	<c>true</c> if [contains] [the specified property name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Data.SortDescriptorCollection.IndexOf(System.String)">
            <summary>
            Indexes the of.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Data.SortDescriptorCollection.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Data.SortDescriptorCollection.Remove(System.String)">
            <summary>
            Removes the specified property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.Data.INotifyCollectionChanged">
            <summary>
            Notifies listeners of dynamic changes, such as when items get added and removed or the whole list is refreshed. 
            </summary>
            <remarks>
            You can enumerate over any collection that implements the IEnumerable interface. However, to set up dynamic bindings so that insertions or deletions in the collection update the UI automatically, the collection must implement the INotifyCollectionChanged interface. This interface exposes the CollectionChanged event that must be raised whenever the underlying collection changes.
            </remarks>
        </member>
        <member name="E:Telerik.WinControls.Data.INotifyCollectionChanged.CollectionChanged">
            <summary>
            Occurs when the collection changes.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Data.INotifyCollectionChanging">
            <summary>
            Notifies listeners of dynamic changes, such as when items get added and removed or the whole list is refreshed. 
            </summary>
            <remarks>
            You can enumerate over any collection that implements the IEnumerable interface. However, to set up dynamic bindings so that insertions or deletions in the collection update the UI automatically, the collection must implement the INotifyCollectionChanged interface. This interface exposes the CollectionChanged event that must be raised whenever the underlying collection changes.
            </remarks>
        </member>
        <member name="E:Telerik.WinControls.Data.INotifyCollectionChanging.CollectionChanging">
            <summary>
            Occurs before the collection changes.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Data.NotifyCollectionChangedAction">
            <summary>
            Describes the action that caused a CollectionChanged event. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Data.NotifyCollectionChangedAction.Add">
            <summary>
            One or more items were added to the collection. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Data.NotifyCollectionChangedAction.Remove">
            <summary>
            One or more items were removed from the collection. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Data.NotifyCollectionChangedAction.Replace">
            <summary>
            One or more items were replaced in the collection. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Data.NotifyCollectionChangedAction.Move">
            <summary>
            One or more items were moved within the collection.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Data.NotifyCollectionChangedAction.Reset">
            <summary>
            The content of the collection changed dramatically.  
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Data.NotifyCollectionChangedAction.Batch">
            <summary>
            The collection has been updated in a batch operation.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Data.NotifyCollectionChangedAction.ItemChanging">
            <summary>
            An item in the collection is about to change.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Data.NotifyCollectionChangedAction.ItemChanged">
            <summary>
            An item in the collection has changed.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs">
            <summary>
            Provides data for the CollectionChanged event. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.PropertyName">
            <summary>
            Gets the name of the changed property when the Action is ItemChanged.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a Reset change. 
            </summary>
            <param name="action">The action that caused the event. This must be set to Reset.</param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Collections.IList)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a multi-item change. 
            </summary>
            <param name="action"></param>
            <param name="changedItems"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a one-item change. 
            </summary>
            <param name="action"></param>
            <param name="changedItem"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a multi-item Replace change. 
            </summary>
            <param name="action"></param>
            <param name="newItems"></param>
            <param name="oldItems"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a multi-item change or a reset change. 
            </summary>
            <param name="action"></param>
            <param name="changedItems"></param>
            <param name="startingIndex"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a one-item change. 
            </summary>
            <param name="action"></param>
            <param name="changedItem"></param>
            <param name="index"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a one-item Replace change. 
            </summary>
            <param name="action"></param>
            <param name="newItem"></param>
            <param name="oldItem"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a multi-item Replace change. 
            </summary>
            <param name="action"></param>
            <param name="newItems"></param>
            <param name="oldItems"></param>
            <param name="startingIndex"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a multi-item Move change. 
            </summary>
            <param name="action"></param>
            <param name="changedItems"></param>
            <param name="index"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a multi-item Move change. 
            </summary>
            <param name="action"></param>
            <param name="changedItem"></param>
            <param name="index"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a one-item Replace change. 
            </summary>
            <param name="action"></param>
            <param name="newItem"></param>
            <param name="oldItem"></param>
            <param name="index"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs"/> class.
            </summary>
            <param name="action">The action.</param>
            <param name="newItem">The new item.</param>
            <param name="oldItem">The old item.</param>
            <param name="index">The index.</param>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.Action">
            <summary>
            Provides data for the CollectionChanged event. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.ResetReason">
            <summary>
            Gets the reason for a Reset notification.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.NewItems">
            <summary>
            Gets the list of new items involved in the change.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.NewStartingIndex">
            <summary>
            Gets the index at which the change occurred.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.OldItems">
            <summary>
            Gets the list of items affected by a Replace, Remove, or Move action.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.OldStartingIndex">
            <summary>
            Gets the index at which a Move, Remove, ore Replace action occurred.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Data.NotifyCollectionChangedEventHandler">
            <summary>
            Represents the method that handles the CollectionChanged event. 
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="T:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs">
            <summary>
            Provides data for the CollectionChanging event. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a Reset change. 
            </summary>
            <param name="action">The action that caused the event. This must be set to Reset.</param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Collections.IList)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a multi-item change. 
            </summary>
            <param name="action"></param>
            <param name="changedItems"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a one-item change. 
            </summary>
            <param name="action"></param>
            <param name="changedItem"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a multi-item Replace change. 
            </summary>
            <param name="action"></param>
            <param name="newItems"></param>
            <param name="oldItems"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a multi-item change or a reset change. 
            </summary>
            <param name="action"></param>
            <param name="changedItems"></param>
            <param name="startingIndex"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a one-item change. 
            </summary>
            <param name="action"></param>
            <param name="changedItem"></param>
            <param name="index"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a one-item Replace change. 
            </summary>
            <param name="action"></param>
            <param name="newItem"></param>
            <param name="oldItem"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a multi-item Replace change. 
            </summary>
            <param name="action"></param>
            <param name="newItems"></param>
            <param name="oldItems"></param>
            <param name="startingIndex"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a multi-item Move change. 
            </summary>
            <param name="action"></param>
            <param name="changedItems"></param>
            <param name="index"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a multi-item Move change. 
            </summary>
            <param name="action"></param>
            <param name="changedItem"></param>
            <param name="index"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a one-item Replace change. 
            </summary>
            <param name="action"></param>
            <param name="newItem"></param>
            <param name="oldItem"></param>
            <param name="index"></param>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.Action">
            <summary>
            Provides data for the CollectionChanging event. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.PropertyArgs">
            <summary>
            Gets the property arguments when property changing has been fired.
            </summary>
            <value>The property arguments.</value>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.NewItems">
            <summary>
            Gets the list of new items involved in the change.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.NewStartingIndex">
            <summary>
            Gets the index at which the change occurred.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.OldItems">
            <summary>
            Gets the list of items affected by a Replace, Remove, or Move action.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.OldStartingIndex">
            <summary>
            Gets the index at which a Move, Remove, ore Replace action occurred.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Data.NotifyCollectionChangingEventHandler">
            <summary>
            Represents the method that handles the CollectionChanging event. 
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="F:Telerik.WinControls.Export.DataType.String">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Export.DataType.Number">
            <summary>
            Number
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Export.DataType.DateTime">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Export.DataType.Boolean">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Export.DataType.Null">
            <summary>
            Null
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Export.DataType.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Export.DataType.Empty">
            <summary>
            Used when exporting null value.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Export.IGridViewSpreadStreamExportCellInfo.RowType">
            <summary>
            Gets or sets the type of the grid row.
            </summary>
            <value>The type of the row.</value>
        </member>
        <member name="P:Telerik.WinControls.Export.IGridViewSpreadStreamExportCellInfo.RowIndex">
            <summary>
            Gets or sets the index of the grid row.
            </summary>
            <value>The index of the row.</value>
        </member>
        <member name="P:Telerik.WinControls.Export.IGridViewSpreadStreamExportCellInfo.ColumnType">
            <summary>
            Gets or sets the type of the grid column.
            </summary>
            <value>The type of the column.</value>
        </member>
        <member name="P:Telerik.WinControls.Export.IGridViewSpreadStreamExportCellInfo.ColumnIndex">
            <summary>
            Gets or sets the index of the grid column.
            </summary>
            <value>The index of the column.</value>
        </member>
        <member name="P:Telerik.WinControls.Export.IGridViewSpreadStreamExportCellInfo.CellStyleInfo">
            <summary>
            Gets or sets the cell style info.
            </summary>
            <value>The cell style info.</value>
        </member>
        <member name="M:Telerik.WinControls.Export.IPdfEditor.SetLinearGradient(System.Int32,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            This creates a linear gradient depending on number of colors needed
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Export.IPdfEditor.CreateMatrixPosition(System.Double,System.Double)">
            <summary>
            this.editor.Position = savePosition;
            </summary>
            <param name="x">Horizontal offset that will be set as new Matrix position</param>
            <param name="y">Vertical offset that will be set as new Matrix position</param>
        </member>
        <member name="T:Telerik.WinControls.Export.SpreadExportFormat">
            <summary>
            Enum listing the export formats supported by RadSpreadProcessing.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Export.SpreadExportFormat.Xlsx">
            <summary>
            XLSX format
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Export.SpreadExportFormat.Pdf">
            <summary>
            PDF format
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Export.SpreadExportFormat.Csv">
            <summary>
            CSV format
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Export.SpreadExportFormat.Txt">
            <summary>
            Txt format
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Export.SpreadExportFormat.Xls">
            <summary>
            XLS format
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Export.SpreadStreamExportFormat">
            <summary>
            Enum listing the export formats supported by RadSpreadStreamProcessing.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Export.SpreadStreamExportFormat.Xlsx">
            <summary>
            XLSX format
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Export.SpreadStreamExportFormat.Csv">
            <summary>
            CSV format
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Export.FileExportMode">
            <summary>
            Enum listing the different options when exporting to a file
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Export.FileExportMode.NewSheetInExistingFile">
            <summary>
            Export as new sheet in existing file
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Export.FileExportMode.CreateOrOverrideFile">
            <summary>
            Export in new file or override existing file
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ObjectRelation.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="T:Telerik.WinControls.StyleBuilderReadOnlyAttribute">
            <summary>
            Use the StyleBuilderReadOnly attribute to mark properties that should appear as readonly when edited in the Visual 
            Style Builder application
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Design.TelerikToolboxCategoryAttribute">
            <summary>
            This attribute should be used on classes which will be present in the Visual Studio toolbox (i.e. the ones that should also have a <see cref="T:System.Drawing.ToolboxBitmapAttribute"/> attribute).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Design.TelerikToolboxCategoryAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance of the ToolboxCategory attribute with the specified title.
            </summary>
            <param name="categoryTitle">The title of the category where the control will be placed</param>
        </member>
        <member name="T:Telerik.WinControls.Design.NewItemInfo">
            <summary>
            Represents a new item's data.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Design.NewItemInfo.#ctor(Telerik.WinControls.RadNewItemAttribute,Telerik.WinControls.RadItemCollection)">
            <summary>
            Initializes a new instance of the NewItemData class.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Design.RadDefaultValueAttribute">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.RadDescriptionAttribute">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.RadObjectCustomRadPropertyDescriptor">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.RadItemEditTextAttribute">
            <summary>
            Represents a item's edit text attribute.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Design.RadPropertyDefaultValueAttribute">
            <exclude/>
        </member>
        <member name="M:Telerik.WinControls.Design.RadPropertyDefaultValueAttribute.#ctor(System.String,System.Type)">
            <summary>
            RadPropertyDefaultValueAttribute constructor
            </summary>
            <param name="propertyName">The name of the property which provides the default value.</param>
            <param name="ownerType">Type of the object that ownes the RadProperty which provides the default value.</param>
        </member>
        <member name="T:Telerik.WinControls.Design.RadToolboxItemAttribute">
            <summary>
            Attribute that can be applied to hide a class when searching for possible new-item-types when a RadControl 
            is in design mode
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Design.ServiceProviderSite">
            <summary>
            A dummy ISite implementation, which provides support for custom services.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadThemeManager">
            <summary>
            Theme manager Component is used to load user-defined themes for RadControls in an application. 
            Use the LoadedThemes property to add new team source files. Themes load immediately when correct 
            property values specified and last for the life time of the application. After a theme is loaded 
            it can be used by the corresponding types of controls placed on any Form of the application. 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ThemeSource">
            <summary>
            ThemeSource is used to load user-defined themes for RadControls in an application. 
            Themes load immediately when correct property values specified and last for the life 
            time of the application. After a theme is loaded it can be used by the corresponding 
            types of controls placed on any Form of the application. ThemeSource object are generally 
            used by ThemeManager component placed on a Form
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ThemeSource.ThemeStorageValid">
            <summary>
            Indicates whether the specified theme was loaded successfully.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ThemeSource.ThemeLoadingError">
            <summary>
            Gets value indicating the error message if Theme was not loaded successfully.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ThemeSource.ThemeLocation">
            <summary>
            Gets or sets the full resource name if StorageType is Resource. Example: "MyNamespace.MyThemeFileName.xml". 
            If the StorageType specified is File, then the value of this property should represent the full or relative file path,
            accessible by the application. The "~" sign can be used to substitute the application executable path.
            Eg. "C:\MyApp\MyThemeFileName.xml" or "..\..\MyThemeFileName.xml" or "~\MyThemeFileName.xml"
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ThemeSource.OwnerThemeManager">
            <summary>
            Gets or sets the owner theme manager component. Generally used by Form's designer.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ThemeSource.StorageType">
            <summary>
            Gets or sets File or Resource type of storage for the theme file
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ThemeSource.SettingsAreValid">
            <summary>
            Gets a value indicating whether property values are valid
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ThemeSource.ReloadThemeFromStorage">
            <summary>
            Loads the theme from the file resource specified and registers it into ThemeResolutionService. Thais method is called 
            immediately when correct ThemeLocation and StorageType are specified.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ThemeSourcesChangedDelegate">
             <summary>
             Represents
             </summary>
             <param name="changed">
             
             </param>
             <param name="tartet">
             
             </param>
             <param name="atIndex">
             
             </param>
             <param name="operation">
             
            </param>
        </member>
        <member name="T:Telerik.WinControls.ThemeSourceChangeOperation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ThemeSourceChangeOperation.Inserted">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ThemeSourceChangeOperation.Removed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ThemeSourceChangeOperation.Replaced">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ThemeSourceChangeOperation.Cleared">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ThemeSourceCollection">
            <summary>
                <para>
                  A collection that stores <see cref='T:Telerik.WinControls.ThemeSource'/> objects.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.#ctor(Telerik.WinControls.RadThemeManager)">
            <summary>
                <para>
                  Initializes a new instance of the<see cref='T:Telerik.WinControls.ThemeSourceCollection'/>.
               </para>
            </summary>
            <param name="ownerManager">
                Owner component
            </param>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.#ctor(Telerik.WinControls.ThemeSourceCollection,Telerik.WinControls.RadThemeManager)">
            <summary>
                <para>
                  Initializes a new instance of the <see cref='T:Telerik.WinControls.ThemeSourceCollection'/> based on another <see cref='T:Telerik.WinControls.ThemeSourceCollection'/>.
               </para>
            </summary>
            <param name='value'>
                  A <see cref='T:Telerik.WinControls.ThemeSourceCollection'/> from which the contents are copied
            </param>
            <param name="ownerManager">
                Owner component
            </param>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.#ctor(Telerik.WinControls.ThemeSource[],Telerik.WinControls.RadThemeManager)">
            <summary>
                <para>
                  Initializes a new instance of the <see cref='T:Telerik.WinControls.ThemeSourceCollection'/> containing any array of <see cref='T:Telerik.WinControls.ThemeSource'/> objects.
               </para>
            </summary>
            <param name='value'>
                  A array of <see cref='T:Telerik.WinControls.ThemeSource'/> objects with which to intialize the collection
            </param>
            <param name="ownerManager">
                Owner component
            </param>
        </member>
        <member name="P:Telerik.WinControls.ThemeSourceCollection.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref='T:Telerik.WinControls.ThemeSource'/>.</para>
            </summary>
            <param name='index'><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='index'/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.Add(Telerik.WinControls.ThemeSource)">
            <summary>
               <para>Adds a <see cref='T:Telerik.WinControls.ThemeSource'/> with the specified value to the 
               <see cref='T:Telerik.WinControls.ThemeSourceCollection'/> .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.ThemeSource'/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.AddRange(Telerik.WinControls.ThemeSource[])">
            <summary>
            <para>Copies the elements of an array to the end of the <see cref='T:Telerik.WinControls.ThemeSourceCollection'/>.</para>
            </summary>
            <param name='value'>
               An array of type <see cref='T:Telerik.WinControls.ThemeSource'/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.AddRange(Telerik.WinControls.ThemeSourceCollection)">
            <summary>
                <para>
                  Adds the contents of another <see cref='T:Telerik.WinControls.ThemeSourceCollection'/> to the end of the collection.
               </para>
            </summary>
            <param name='value'>
               A <see cref='T:Telerik.WinControls.ThemeSourceCollection'/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.Contains(Telerik.WinControls.ThemeSource)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref='T:Telerik.WinControls.ThemeSourceCollection'/> contains the specified <see cref='T:Telerik.WinControls.ThemeSource'/>.</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.ThemeSource'/> to locate.</param>
            <returns>
            <para><see langword='true'/> if the <see cref='T:Telerik.WinControls.ThemeSource'/> is contained in the collection; 
              otherwise, <see langword='false'/>.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.CopyTo(Telerik.WinControls.ThemeSource[],System.Int32)">
            <summary>
            <para>Copies the <see cref='T:Telerik.WinControls.ThemeSourceCollection'/> values to a one-dimensional <see cref='T:System.Array'/> instance at the 
               specified index.</para>
            </summary>
            <param name='array'><para>The one-dimensional <see cref='T:System.Array'/> that is the destination of the values copied from <see cref='T:Telerik.WinControls.ThemeSourceCollection'/> .</para></param>
            <param name='index'>The index in <paramref name='array'/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref='T:System.ArgumentException'><para><paramref name='array'/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref='T:Telerik.WinControls.ThemeSourceCollection'/> is greater than the available space between <paramref name='index'/> and the end of <paramref name='array'/>.</para></exception>
            <exception cref='T:System.ArgumentNullException'><paramref name='array'/> is <see langword='null'/>. </exception>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='index'/> is less than <paramref name='array'/>'s lowbound. </exception>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.IndexOf(Telerik.WinControls.ThemeSource)">
            <summary>
               <para>Returns the index of a <see cref='T:Telerik.WinControls.ThemeSource'/> in 
                  the <see cref='T:Telerik.WinControls.ThemeSourceCollection'/> .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.ThemeSource'/> to locate.</param>
            <returns>
            <para>The index of the <see cref='T:Telerik.WinControls.ThemeSource'/> of <paramref name='value'/> in the 
            <see cref='T:Telerik.WinControls.ThemeSourceCollection'/>, if found; otherwise, -1.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.Insert(System.Int32,Telerik.WinControls.ThemeSource)">
            <summary>
            <para>Inserts a <see cref='T:Telerik.WinControls.ThemeSource'/> into the <see cref='T:Telerik.WinControls.ThemeSourceCollection'/> at the specified index.</para>
            </summary>
            <param name='index'>The zero-based index where <paramref name='value'/> should be inserted.</param>
            <param name=' value'>The <see cref='T:Telerik.WinControls.ThemeSource'/> to insert.</param>
            <returns><para>None.</para></returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.GetEnumerator">
            <summary>
               <para>Returns an enumerator that can iterate through 
                  the <see cref='T:Telerik.WinControls.ThemeSourceCollection'/> .</para>
            </summary>
            <returns><para>None.</para></returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.Remove(Telerik.WinControls.ThemeSource)">
            <summary>
               <para> Removes a specific <see cref='T:Telerik.WinControls.ThemeSource'/> from the 
               <see cref='T:Telerik.WinControls.ThemeSourceCollection'/> .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.ThemeSource'/> to remove from the <see cref='T:Telerik.WinControls.ThemeSourceCollection'/> .</param>
            <returns><para>None.</para></returns>
            <exception cref='T:System.ArgumentException'><paramref name='value'/> is not found in the Collection. </exception>
        </member>
        <member name="T:Telerik.WinControls.ThemeStorageType">
            <summary>
            Defines the theme storage type.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ThemeStorageType.File">
            <summary>
            Indicates that the theme is contained in a external file.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ThemeStorageType.Resource">
            <summary>
            Indicates that the theme is contained as a resource.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Themes.ColorDialog.CustomColorsEventArgs">
            <summary>
            This class is used to hold the event arguments
            for the CustomColorsConfigLocationNeeded event of the CustomColors control.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Themes.ColorDialog.CustomColorsEventArgs.#ctor(System.String,System.String)">
            <summary>
            Creates an instance of the CustomColorsEventArgs class.
            </summary>
            <param name="location">The location of the config file.</param>
            <param name="fileName">The name of the config file.</param>
        </member>
        <member name="P:Telerik.WinControls.Themes.ColorDialog.CustomColorsEventArgs.ConfigFilename">
            <summary>
            Gets or sets the file name of the configuration file.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Themes.ColorDialog.CustomColorsEventArgs.ConfigLocation">
            <summary>
            Gets or sets the path where the configuration file will be stored.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Themes.GradientDialog.GradientAngleControl">
            <exclude/>
        </member>
        <member name="F:Telerik.WinControls.Themes.GradientDialog.GradientAngleControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Themes.GradientDialog.GradientAngleControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.Themes.GradientDialog.GradientAngleControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Themes.Serialization.StyleSerializationAttributeAttribute">
            <summary>
            Marker attribute - informs StyleXmlSerializer that property should be serialized as an attribute, when serializing 
            RadControl style
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Themes.Design.ProjectManagement">
            <summary>
            Utility class for Design - Time VisualStudio.NET project management.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Themes.XmlSerialization.XmlPropertySettingValueConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ColorChangedEventArgs">
            <summary>
            Represent the ColorChangedEventArgs class
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ColorChangedEventArgs.#ctor(Telerik.WinControls.HslColor)">
             <summary>
             Represents event arguments for the 
             %ColorChanged:Telerik.WinControls.CaptureBox.ColorChanged% event.
             </summary>
             <param name="selectedHslColor">
             Represents the changed color. 
            </param>
        </member>
        <member name="M:Telerik.WinControls.ColorChangedEventArgs.#ctor(System.Drawing.Color)">
             <summary>
             Represents event arguments for the 
             <see cref="T:Telerik.WinControls.ColorChangedEventHandler"/> event.
             </summary>
             <param name="selectedColor">
             Represents the changed color. 
            </param>
        </member>
        <member name="T:Telerik.WinControls.ColorPickerActiveMode">
            <summary>
            Modes the RadColorPicker can be in
            </summary>
        </member>
        <member name="T:Telerik.WinControls.HslColor">
            <summary>
            Represents color in HSL color space.
            </summary>
            <remarks>
            Used for color blending operations, defined in HSL color space which are more precise than in RGB. 
            HSL colors are used by theming and painting sub-systems of RadControls.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.HslColor.H">
            <summary>
            H Channel value
            </summary>
        </member>
        <member name="P:Telerik.WinControls.HslColor.S">
            <summary>
            S Channel value
            </summary>
        </member>
        <member name="P:Telerik.WinControls.HslColor.L">
            <summary>
            L Channel value
            </summary>
        </member>
        <member name="P:Telerik.WinControls.HslColor.RgbValue">
            <summary>
            RGB color value
            </summary>
        </member>
        <member name="P:Telerik.WinControls.HslColor.A">
            <summary>
            Gets or sets color'a alpha chanel level in terms of argb color. Used mainly for conversion from/to ARGB color values.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.IColorSelector">
            <summary>
            Wraps the functionality provided by the color picker
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.SelectedColor">
            <summary>
            Gets or sets the selected color
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.SelectedHslColor">
            <summary>
            Gets or sets the selected color
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.OldColor">
            <summary>
            Gets or sets the old color
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.ShowBasicColors">
            <summary>
            Shows or hides the basic colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.ActiveMode">
            <summary>
            Gets or sets the active mode of the color tabs
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.ShowSystemColors">
            <summary>
            Shows or hides the system colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.ShowWebColors">
            <summary>
            Shows or hides the web colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.ShowProfessionalColors">
            <summary>
            Shows or hides the professional colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.ShowCustomColors">
            <summary>
            Shows or hides the custom colors panel
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.ShowHEXColorValue">
            <summary>
            Shows or hides the hex color textbox
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.AllowEditHEXValue">
            <summary>
            Allows or disallows editing the hex value
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.AllowColorPickFromScreen">
            <summary>
            Allows or disallows picking colors from the screen
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.AllowColorSaving">
            <summary>
            Allows or disallows color saving
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.CustomColors">
            <summary>
            Gets the custom colors
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.BasicTabHeading">
            <summary>
            Gets or sets the heading of the basic colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.SystemTabHeading">
            <summary>
            Gets or sets the heading of the system colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.WebTabHeading">
            <summary>
            Gets or sets the heading of the web colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.ProfessionalTabHeading">
            <summary>
            Gets or sets the heading of the professional colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.SelectedColorLabelHeading">
            <summary>
            Gets or sets the heading of the selected color label
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.OldColorLabelHeading">
            <summary>
            Gets or sets the heading of the old color label
            </summary>
        </member>
        <member name="E:Telerik.WinControls.IColorSelector.OkButtonClicked">
            <summary>
            Fires when the OK Button is clicked
            </summary>
        </member>
        <member name="E:Telerik.WinControls.IColorSelector.CancelButtonClicked">
            <summary>
            Fires when the Cancel Button is clicked
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.RadColorSelector">
            <summary>
            Gets the color selector
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.SelectedColor">
            <summary>
            Gets or sets the selected color
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.SelectedHslColor">
            <summary>
            Gets or sets the selected hsl color
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.OldColor">
            <summary>
            Gets or sets the old color
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.ActiveMode">
            <summary>
            Gets or sets the active mode of the color tabstrip
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.ShowBasicColors">
            <summary>
            Shows or hides the basic colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.ShowSystemColors">
            <summary>
            Shows or hides the system colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.ShowWebColors">
            <summary>
            Shows or hides the web colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.ShowProfessionalColors">
            <summary>
            Shows or hides whe professional colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.ShowCustomColors">
            <summary>
            Shows or hides the custom colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.ShowHEXColorValue">
            <summary>
            Shows or hides the hex color value
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.AllowEditHEXValue">
            <summary>
            Allows or disallows editing the HEX value
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.AllowColorPickFromScreen">
            <summary>
            Allows or disallows color picking from the screen
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.AllowColorSaving">
            <summary>
            Allows or disallows color saving
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.CustomColors">
            <summary>
            Gets the custom colors
            </summary> 
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.BasicTabHeading">
            <summary>
            Gets or sets the heading of the basic colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.SystemTabHeading">
            <summary>
            Gets or sets the heading of the system colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.WebTabHeading">
            <summary>
            Gets or sets the heading of the web colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.ProfessionalTabHeading">
            <summary>
            Gets or sets the heading of the professional colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.SelectedColorLabelHeading">
            <summary>
            Gets or sets the heading of the selected color label
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IRadColorDialog.OldColorLabelHeading">
            <summary>
            Gets or sets the heading of the old color label
            </summary>
        </member>
        <member name="E:Telerik.WinControls.IRadColorDialog.ColorChanged">
            <summary>
            Fires when the selected color has changed
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadColorDialog">
            <summary>
            Represents a dialog that can be used to select color with rich UI and extended functionality.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadColorDialog.Reset">
            <summary>
            Resets the properties of a color dialog box to their default values. Replaces the underlaying ColorDialogForm
             with new instance 
            </summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialog.ColorDialogForm">
            <summary>
            Gets the instance of RadColorDialogForm, which incorporates various settings of the
            underlaying color selection Form and ColorSelector user control.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialog.Icon">
            <summary>
            Gets or sets the icon displayed for this dialog.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialog.RightToLeft">
            <summary>Gets or sets a value indicating whether control's elements are aligned
            to support locales using right-to-left fonts.</summary>
            <returns>One of the <see cref="T:System.Windows.Forms.RightToLeft"/> values.
            The default is <see cref="F:System.Windows.Forms.RightToLeft.Inherit"/>.</returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The assigned
            value is not one of the <see cref="T:System.Windows.Forms.RightToLeft"/> values.
            </exception>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialog.SelectedColor">
            <summary>
            Gets or sets the selected color. References to SelectedColor of <see cref="P:Telerik.WinControls.RadColorDialog.ColorDialogForm"/>.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialog.SelectedHslColor">
            <summary>
            Gets or sets the selected HSL color. References to SelectedHslColor of <see cref="P:Telerik.WinControls.RadColorDialog.ColorDialogForm"/>.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialog.OldColor">
            <summary>
            Gets or sets the selected color. References to OldColor of <see cref="P:Telerik.WinControls.RadColorDialog.ColorDialogForm"/>.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialog.CustomColors">
            <summary>
            Gets the user-defined colors. References to CustomColors of <see cref="P:Telerik.WinControls.RadColorDialog.ColorDialogForm"/>.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadColorDialog.RunDialog(System.IntPtr)">
            <summary>
            Shows modal dialog box.
            </summary>
            
            <returns>
            true if the dialog box was successfully run; otherwise, false.
            </returns>
            
            <param name="hwndOwner">A value that represents the window handle of the owner window for the common dialog box. </param>
        </member>
        <member name="T:Telerik.WinControls.ColorChangedEventHandler">
            <summary>
            Represents the method that will handle the ColorChanged event.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Telerik.WinControls.RadColorEditor">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.RadColorEditorConverter">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.RadFillEditor">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.ColorBox">
            <exclude/>
        </member>
        <member name="E:Telerik.WinControls.ColorBox.ColorChanged">
            <summary>
            Fires when the selected color changes
            </summary>
        </member>
        <member name="T:Telerik.WinControls.GradientBox">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.GradientColorValue">
            <exclude/>
        </member>
        <member name="P:Telerik.WinControls.GradientEditorControl.IsLoading">
            <summary>
            Gets or sets a value indicating whether the gradient editor is in loading state. This property is used internally.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.GradientEditorControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.GradientEditorControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.GradientEditorControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.GradientSlider">
            <exclude/>
        </member>
        <member name="P:Telerik.WinControls.GradientSlider.Values">
            <summary>
            Gets or sets the values
            </summary>
        </member>
        <member name="E:Telerik.WinControls.GradientSlider.ColorChanged">
            <summary>
            Fires when the color has changed
            </summary>
        </member>
        <member name="F:Telerik.WinControls.GradientSlider.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.GradientSlider.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.GradientSlider.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadGradientDialog">
            <exclude/>
        </member>
        <member name="F:Telerik.WinControls.RadGradientDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadGradientDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.RadGradientDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.Dock">
            <summary>
            Represents the different positions where an item can be docked
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.GridLayout">
            <summary>
            Represents layout container which implements column and row span and different column and row sizing modes - proportional, fixed, and auto.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.GridLayout.#ctor">
            <summary>
            Creates new instance of <see cref="T:Telerik.WinControls.Layouts.GridLayout">GridLayout</see>.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.GridLayout.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates new instance of <see cref="T:Telerik.WinControls.Layouts.GridLayout">GridLayout</see>.
            </summary>
            <param name="columnsCount">Number of columns.</param>
            <param name="rowsCount">Number of rows.</param>
        </member>
        <member name="P:Telerik.WinControls.Layouts.GridLayout.Columns">
            <summary>
            Gets or sets the columns of the layout container.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.GridLayout.Rows">
            <summary>
            Gets or sets the rows of the layout container.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.GridLayoutSizingType">
            <summary>
            <see cref="T:Telerik.WinControls.Layouts.GridLayout">GridLayout</see> sizing type options.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.GridLayoutColumn">
            <summary>
            Represents <see cref="T:Telerik.WinControls.Layouts.GridLayout">GridLayout</see> column.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.GridLayoutRow">
            <summary>
            Represents <see cref="T:Telerik.WinControls.Layouts.GridLayout">GridLayout</see> row.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.GridLayoutElement">
            <summary>
            Represents base class for <see cref="T:Telerik.WinControls.Layouts.GridLayout">GridLayout</see> element.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.RadMatrix">
            <summary>
            Represents a light-weight 3*3 Matrix to be used for GDI+ transformations.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.RadMatrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new RadMatrix, using the specified parameters.
            </summary>
            <param name="m11"></param>
            <param name="m12"></param>
            <param name="m21"></param>
            <param name="m22"></param>
            <param name="dx"></param>
            <param name="dy"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.RadMatrix.#ctor(Telerik.WinControls.Layouts.RadMatrix)">
            <summary>
            Copy constructor.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.RadMatrix.#ctor(System.Drawing.Drawing2D.Matrix)">
            <summary>
            Initializes a new RadMatrix, using the elements of the specified GDI+ Matrix instance.
            </summary>
            <param name="gdiMatrix"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.RadMatrix.#ctor(System.Drawing.PointF)">
            <summary>
            Initializes a new RadMatrix, applying the specified X and Y values as DX and DY members of the matrix.
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.RadMatrix.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new RadMatrix, scaling it by the provided parameters, at the origin (0, 0).
            </summary>
            <param name="scaleX"></param>
            <param name="scaleY"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.RadMatrix.#ctor(System.Single,System.Single,System.Drawing.PointF)">
            <summary>
            Initializes a new RadMatrix, scaling it by the provided parameters, at the specified origin.
            </summary>
            <param name="scaleX"></param>
            <param name="scaleY"></param>
            <param name="origin"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.RadMatrix.#ctor(System.Single)">
            <summary>
            Initializes a new RadMatrix, rotated by the specified angle (in degrees) at origin (0, 0).
            </summary>
            <param name="angle"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.RadMatrix.#ctor(System.Single,System.Drawing.PointF)">
            <summary>
            Initializes a new RadMatrix, rotated by the specified angle (in degrees) at the provided origin.
            </summary>
            <param name="angle"></param>
            <param name="origin"></param>
        </member>
        <member name="P:Telerik.WinControls.Layouts.RadMatrix.IsEmpty">
            <summary>
            Determines whether the current matrix is empty.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.RadMatrix.IsIdentity">
            <summary>
            Determines whether this matrix equals to the Identity one.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.RadMatrix.Determinant">
            <summary>
            Gets the determinant - [(M11 * M22) - (M12 * M21)] - of this Matrix.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.RadMatrix.IsInvertible">
            <summary>
            Determines whether this matrix may be inverted. That is to have non-zero determinant.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.RadMatrix.ScaleX">
            <summary>
            Gets the scale by the X axis, provided by this matrix.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.RadMatrix.ScaleY">
            <summary>
            Gets the scale by the Y axis, provided by this matrix.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.RadMatrix.Rotation">
            <summary>
            Gets the rotation (in degrees) applied to this matrix.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.RadMatrix.Elements">
            <summary>
            Gets all the six fields of the matrix as an array.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.BoxLayout">
            <summary>
            Represents the BoxLayout class
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.BoxLayout.StripPosition">
            <summary>
            represents StripPosition enumeration
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Layouts.BoxLayout.ProportionProperty">
            <summary>
            Registers the Proportion dependancy property of BoxLayout
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Layouts.BoxLayout.OrientationProperty">
            <summary>
            Registers the Orientation dependancy proeprty of BoxLayout
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Layouts.BoxLayout.StripPositionProperty">
            <summary>
            Registers the StripPosition dependancy property of BoxLayout
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.BoxLayout.GetProportion(Telerik.WinControls.RadElement)">
            <summary>
            Gets the proportion based on a given element
            </summary>
            <param name="element">The element which proportion will be get.</param>
            <returns>The proportion value.</returns>
        </member>
        <member name="M:Telerik.WinControls.Layouts.BoxLayout.SetProportion(Telerik.WinControls.RadElement,System.Single)">
            <summary>
            Sets the proportion (attached property) of a given element.
            </summary>
            <param name="element">The element which proportion will be set.</param>
            <param name="proportion">The proportion value.</param>
        </member>
        <member name="P:Telerik.WinControls.Layouts.BoxLayout.Orientation">
            <summary>
            Gets or sets strip orientation - it could be horizontal or vertical.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.BoxLayout.OnPropertyChanged(Telerik.WinControls.RadPropertyChangedEventArgs)">
            <summary>
            Handles the properties values changes of BoxLayout 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.BoxLayout.MeasureOverride(System.Drawing.SizeF)">
            <summary>
            measures the size to layout the children
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Layouts.BoxLayout.ArrangeOverride(System.Drawing.SizeF)">
            <summary>
            arranges the children by a given criteria 
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.Layouts.IBoxElement">
            <summary>
            Defines properties for the box-model; Elements are nodes of a tree, and a
            rectangular box is generated for each element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.IBoxElement.Width">
            <summary>Gets or sets a value indicating the box width.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.IBoxElement.LeftWidth">
            <summary>Gets or sets a value indicating the left width.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.IBoxElement.TopWidth">
            <summary>Gets or sets a value indicating the top width.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.IBoxElement.RightWidth">
            <summary>Gets or sets a value indicating the right width.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.IBoxElement.BottomWidth">
            <summary>Gets or sets a value indicating the botton width.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.IBoxElement.Offset">
            <summary>Gets a value indicating the offset.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.IBoxElement.BorderSize">
            <summary>Gets a value indicating the border size.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.IBoxElement.HorizontalWidth">
            <summary>Gets a value indicating the horizontal width.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.IBoxElement.VerticalWidth">
            <summary>Gets a value indicating the vertical width.</summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.ICollapsibleElement">
            <summary>
            Defines methods and properties for a calapsible element. For example, 
            RadRibonBarChunk is a collapsible element.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ICollapsibleElement.ExpandElement">
            <summary>
            Expands the element.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ICollapsibleElement.CollapseElement(System.Drawing.Size)">
            <summary>
            Collapses the element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ICollapsibleElement.ExpandedSize">
            <summary>
            Gets or sets a value indicating the expanded size of the element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ICollapsibleElement.CollapseMaxSteps">
            <summary>
            Gets the max number of steps needed for collapsing the collapsible element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ICollapsibleElement.CollapseStep">
            <summary>
            Gets the current collapse step for the collapsible element.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.ILayoutEngine">
            <summary>Defines properties and methods for the default layout engine.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ILayoutEngine.AvailableSize">
            <summary>Gets a value indicating the available size.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.GetParentPadding">
            <summary>Retrieves parent's padding.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.CheckSize(System.Drawing.Size)">
            <summary>Retrieves check size structure.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.SetCoercedSize(System.Drawing.Size)">
            <summary>Sets coerced size taken as parameter.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.GetFaceRectangle">
            <summary>Gets the face rectangle.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.InvalidateLayout">
            <summary>Invalidates layout - needs redrawing.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.LayoutPropertyChanged(Telerik.WinControls.RadPropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.IsValidWrapElement">
            <summary>Retrieves a value indicating whether the element is valid wrap element.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.PerformRegisteredSuspendedLayouts">
            <summary>Performs registered suspended layout.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.GetTransformationPoint">
            <summary>Retrieves transformation point. The point is a Point structure.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.TransformByAlignment(System.Drawing.Size,System.Drawing.Rectangle)">
            <summary>Retrieves transformation by alignment point using size and inner bounds.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.GetBorderOffset">
            <summary>Retrieves Border offset.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.GetBorderSize">
            <summary>Retrieves border size.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.GetChildBorderSize">
            <summary>Retrieves the border size of its child.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.InvalidateCachedBorder">
            <summary>Invalidates the cached border.</summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.ImageAndTextLayoutPanel">
            <summary>
            Represents a panel with two children an image element and a text element
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ImageAndTextLayoutPanel.ImageAlignment">
            <summary>
            Gets or sets a value indicating the image alignment.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ImageAndTextLayoutPanel.TextAlignment">
            <summary>
            Gets or sets a value indicating text alignment.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ImageAndTextLayoutPanel.TextImageRelation">
            <summary>
            Gets or sets a value indicating the TextImageRelation: ImageAboveText, ImageBeforeText, Overlay, TextAboveImage, and TextBeforeImage. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ImageAndTextLayoutPanel.DisplayStyle">
            <summary>
            Gets or sets a value indicating the DisplayStyle: None, Image, Text and ImageAndText.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.IScrollViewer">
            <summary>
            	<para>Content within a user interface is often larger than the visible area that
                the user can see. Large Telerik elements can be put in scroll viewer in order to
                scroll their content in small visible area.</para>
            	<para>
                    Every element that support scrolling must implement this interface. Currently
                    only class RadScrollViewer implements this interface and all
                    Telerik elements that can be scrolled inherit that class.
                </para>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.IScrollViewer.Virtualized">
            <summary>
            Gets whether the scroll viewer uses a virtualized viewport
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.LineDown">
            <summary>
            Scrolls down within viewport by one logical unit.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.LineLeft">
            <summary>
            Scrolls left within viewport by one logical unit.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.LineRight">
            <summary>
            Scrolls right within viewport by one logical unit.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.LineUp">
            <summary>
            Scrolls up within viewport by one logical unit.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.PageDown">
            <summary>
            Scrolls down within viewport by one page.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.PageLeft">
            <summary>
            Scrolls left within viewport by one page.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.PageRight">
            <summary>
            Scrolls right within viewport by one page.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.PageUp">
            <summary>
            Scrolls up within viewport by one page.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.ScrollToTop">
            <summary>
            Scrolls vertically to the beginning of the content.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.ScrollToBottom">
            <summary>
            Scrolls vertically to the end of the content.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.ScrollToLeftEnd">
            <summary>
            Scrolls horizontally to the beginning of the content.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.ScrollToRightEnd">
            <summary>
            Scrolls horizontally to the end of the content.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.ScrollToHome">
            <summary>
            Scrolls both horizontally and vertically to the beginning of the content.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.ScrollToEnd">
            <summary>
            Scrolls both horizontally and vertically to the end of the content.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.DockLayoutPanel">
            <summary>
            Layout panel which docks its children to the sides of the area it contains
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.DockLayoutPanel.GetDock(Telerik.WinControls.RadElement)">
            <summary>
            Gets the dock property of an element
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Layouts.DockLayoutPanel.SetDock(Telerik.WinControls.RadElement,Telerik.WinControls.Layouts.Dock)">
            <summary>
            Sets the docking position of an element
            </summary>
            <param name="element"></param>
            <param name="dock"></param>
        </member>
        <member name="P:Telerik.WinControls.Layouts.DockLayoutPanel.LastChildFill">
            <summary>
            Gets or sets a property indicating whether the last child will fill the remaining area
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.ElementWithCaptionLayoutPanel">
            <summary>ElementWithCaptionLayoutPanel is a container for elements with a caption.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ElementWithCaptionLayoutPanel.CaptionOnTop">
            <summary>
            Gets or sets a boolean value indicating whether there is a caption on the
            top.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.StackLayoutPanel">
            <summary>
            	<para>Layout panel is a container for other elements. It orders the contained
                elements as a stack vertically or horizontally. When the elements pass through the
                left end of the stacklayout, the last one is put on a new line. If horizontal is
                chosen the width of all elements is the width of the largest element in the
                column.</para>
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Layouts.StackLayoutPanel.StackLayoutPanelLastStateKey">
            <summary>
            This constant is used internally.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.Orientation">
            <summary>
            Gets or sets the elements orientation inside the stacklayout. 
            Possible values are horizontal and vertical.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.AllElementsEqualSize">
            <summary>
            Gets or sets a value indicating whether the elements have equal size.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.EqualChildrenWidth">
            <summary>
            Gets or sets a value indicating whether the elements have equal width.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.EqualChildrenHeight">
            <summary>
            Gets or sets a value indicating whether the elements have equal height.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.ChildrenForcedSize">
            <summary>
            ChildrenForcedSize
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.FlipMaxSizeDimensions">
            <summary>
            Gets or sets a value indicating whether maximum size dimensions are
            flipped.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.CollapseElementsOnResize">
            <summary>Gets or sets a value indicating whether elements are collapsed on resize.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.UseParentSizeAsAvailableSize">
            <summary>
            Gets or sets a value indicating whether the panel will use its direct parent size to arrange the child elements or
            whether it will use the first ancestor which is a layout panel or an element with AutoSizeMode = FitToAvailableSize.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.IsInStripMode">
            <summary>
            Gets or sets a value indicating whether the panel is in Strip mode or not. When in Strip mode the panel doesn't
            move the child elements to a new row when there's not enough space but rather arranges all elements on a single row.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.InvalidateChildrenOnChildChanged">
            <summary>
            Notifies all children when same child changes. Effectively redraws all
            children in the panel.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.StackLayoutPanel.ArrangeOverride(System.Drawing.SizeF)">
            <summary>
            ArrangeOverride
            </summary>
            <param name="arrangeSize"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.Layouts.IRadLayoutElement">
            <summary>
            Defines basic methods for Telerik layout architecture. Since all layout panels 
            update their layout automatically through events, this functions are rarely used 
            directly.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IRadLayoutElement.PerformLayout(Telerik.WinControls.RadElement)">
            <summary>
            Performs layout changes based on the element given as a paramater. 
            Sizes and places are determined by the concrete layout panel that is used. 
            For example if StackLayoutPanel is used, the element will be placed next to 
            the previously placed element. Since all layout panels update their layout 
            automatically through events, this function is rarely used directly.
            </summary>
            <param name="affectedElement"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IRadLayoutElement.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Retrieves the preferred size of the layout panel. If the proposed size is 
            smaller than the minimal one, the minimal one is retrieved. Since all layout 
            panels update their layout automatically through events, this function is 
            rarely used directly.
            </summary>
            <param name="proposedSize"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.Layouts.LayoutPanel">
            <summary>
            Represents a base class for all layout panels. Layout panels are RadElements. 
            They are the elements in the control tree responsible for the layout of primitives. 
            Layout panels determine the position and size of the primitives inside them. 
            Because panels are RadElements, panels can be nested thus providing an 
            arbitrary complex layout. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.LayoutPanel.VsbVisible">
            <summary>
            Determines whether the element may be added associated with metadata in the Visual Style Builder.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Layouts.LayoutPanel.LayoutPanelLastStateKey">
            <summary>
            This constant is used internally.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.LayoutUtils">
            <exclude/> 
        </member>
        <member name="T:Telerik.WinControls.ElementSelectorTypes">
            <summary>
            Defines element selector types.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementSelectorTypes.TypeSelector">
            <summary>
            Selects an element based on its type.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementSelectorTypes.ClassSelector">
            <summary>
            Selects an element based on its class property.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementSelectorTypes.VisualStateSelector">
            <summary>
            Selects an element based on its visual state property.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.TextWrapExpandMode">
            <summary>
            TextWrapExpand Modes
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.BorderPrimitiveImpl.PaintBorder(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>
            Virtual method that paints the primitive on the screen. It may be overridden by
            the derived types.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.BorderPrimitiveImpl.PaintBorder(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF,System.Drawing.RectangleF)">
            <summary>
            Virtual method that paints the primitive on the screen. It may be overridden by
            the derived types.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FocusPrimitive.ForeColor2">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FocusPrimitive.ForeColor3">
            <summary>
            Gets or sets color used by radial, glass, office glass, and vista gradients. This
            is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FocusPrimitive.ForeColor4">
            <summary>
            Gets or sets color used by radial, glass, office glass, and vista gradients. This
            is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FocusPrimitive.InnerColor">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FocusPrimitive.InnerColor2">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FocusPrimitive.InnerColor3">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FocusPrimitive.InnerColor4">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FocusPrimitive.GradientStyle">
            <summary>
            Gets or sets gradient style. Possible styles are solid, linear, radial, glass,
            office glass, gel, and vista.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FocusPrimitive.GradientAngle">
            <summary>Gets or sets gradient angle for linear gradient measured in degrees.</summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.LinePrimitive">
            <summary>Represents a line that is drawn on the screen.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.LinePrimitive.LineWidth">
            <summary>Gets or sets the line width in pixels.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.LinePrimitive.SeparatorOrientation">
            <summary>
            Gets or sets the line orientation. Possible values are defined in the SepOrientation
            enumeration.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.LinePrimitive.SweepAngle">
            <summary>Gets or sets the line angle in degrees.</summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.LinePrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>Draws the primitive on the screen.</summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.OverflowPrimitive.#ctor(Telerik.WinControls.ArrowDirection)">
            <summary>
            	<para>Initializes a new instance of the ArrowPrimitive class using the
                ArrowDirection enumeration. Possible directions are up, bottom, left, and
                right.</para>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.OverflowPrimitive.Direction">
            <summary>
            Gets or sets the arrow direction. The possible values are contained in the
            ArrowDirection enumeration: up, left, right, and bottom.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.ProgressBarPrimitive">
            <summary>Represents the internal part of the progress bar.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.HasImage">
            <summary>
            indicates that Progress Bar has Image
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.Orientation">
            <summary>
            Gets or sets progress bar orientation. Possible values are indicates in
            ProgressOrientaion enumeration: up, left, bottom, and right.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.Dash">
            <summary>
            	<para>Indicates whether the progress bar style is dash. If both dash and hash are
                true, hatch style is chosen.</para>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.Hatch">
            <summary>
            Indicates whether the progress bar style is hatch. When true, the style is Hatch.
            When both dash and hatch are true the style is hatch.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.SweepAngle">
            <summary>Gets or sets the angle in degrees of the progress bar dash or hatch parts.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.StepWidth">
            <summary>Gets or sets the step width in pixels between separators.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.SeparatorWidth">
            <summary>Gets or sets separators width in pixels.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.Value1">
            <summary>
            Gets or sets the value of the first progress line. There could be two progress
            lines in the progress bar.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.Value2">
            <summary>
            Gets or sets the value of the second progress line. There could be two progress
            lines in the progress bar.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.Minimum">
            <summary>Specifies minimum value for the progress.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.Maximum">
            <summary>Gets or sets maximum value for the progress.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.Step">
            <summary>
            indicates Stap value
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.SeparatorColor1">
            <summary>Gets or sets the first color that is used in gradient effect.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.SeparatorColor2">
            <summary>Gets or sets the second color that is used in gradient effect.</summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.ProgressBarPrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>Draws the primitive on the screen.</summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.RadioPrimitive">
            <summary><para>Represents a check box primitive that is drawn on the screen.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.TextPrimitiveImpl.DrawTextWithGDI(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)">
            <summary>
            This method draws text to a Bitmap graphics which is used when an element/control is in Disabled state. GDI does not draw text well on a bitmap graphics surface, 
            hence the need for this method.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.TextPrimitiveImpl.GetTextSize(Telerik.WinControls.Primitives.TextParams)">
            <summary>Retrieves the text size.</summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.TrackBarPrimitive">
            <summary>
            	<para>Represents a track bar that is drawn on the screen.</para>
            	<para>
                    Extends
                    <see cref="T:Telerik.WinControls.Primitives.BasePrimitive">BasePrimitive</see>
            	</para>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.TickColor">
            <summary> Gets or Sets RadTrackBar's ticks color </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.SliderAreaGradientAngle">
            <summary> Gets or Sets the gradient angle of the SliderArea </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.FitToAvailableSize">
            <summary> Gets or Sets whether the TrackBar should fit to available size </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.ShowSlideArea">
            <summary> Gets or Sets whether the SlideArea should be visible </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.ShowTicks">
            <summary> Gets or Sets Ticks Visibility </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.BackColor5">
            <summary>
            Gets or sets background color. This property is applicable to radial, glass,
            office glass, and vista gradients.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.BackColor6">
            <summary>
            Gets or sets background color. This property is applicable to radial, glass,
            office glass, and vista gradients.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.ThumbWidth">
            <summary>
            Gets or Sets TrackBar's thumbWidth
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.TrackBarOrientation">
            <summary>
            Gets or Sets TrackBar's Orientation
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.TickStyle">
            <summary>
            Indicates the tick style of the progress bar. Possible values are members of
            %TickStyles enumeration:Telerik.WinControls.Enumerations.TickStyles%: none, 
            topleft, BottomRight, and both.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.TickFrequency">
            <summary>
            The number of positions between tick marks
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.SlideAreaWidth">
            <summary>
            Gets or Sets the width of TrackBar's SlideArea
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.Minimum">
            <summary>Gets or sets a minimum int value for the trackbar position.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.Maximum">
            <summary>Gets or sets a maximum int value for the trackbar position.</summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.ArrowPrimitive">
             <summary>Represents an arrow that is drawn on the screen.
             <para>
             Extends %BasePrimitive:Telerik.WinControls.Primitives.BasePrimitive%. 
             </para> 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.ArrowPrimitive.#cctor">
            <summary><para>Initializes a new instance of the ArrowPrimitive class.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.ArrowPrimitive.#ctor(Telerik.WinControls.ArrowDirection)">
            <summary>
            	<para>Initializes a new instance of the ArrowPrimitive class using the
                ArrowDirection enumeration. Possible directions are up, bottom, left, and
                right.</para>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ArrowPrimitive.UseSmoothPaint">
            <summary>
            Determines whether to paint the arrow using anti-aliasing.
            Default value is false.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ArrowPrimitive.Direction">
            <summary>
            Gets or sets the arrow direction. The possible values are contained in the
            ArrowDirection enumeration: up, left, right, and bottom.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.ArrowPrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            
             <summary>Draws the primitive on the screen.</summary>
             
        </member>
        <member name="T:Telerik.WinControls.Primitives.FillPrimitive">
            <summary>
            Represents a filling that is drawn on the screen.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FillPrimitive.BackColor2">
            <summary>
            Gets or sets background color. This property is applicable to radial, glass, office glass, gel, and vista gradients.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FillPrimitive.BackColor3">
            <summary>
            Gets or sets background color. This property is applicable to radial, glass, office glass, and vista gradients.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FillPrimitive.BackColor4">
            <summary>
            Gets or sets background color. This property is applicable to radial, glass,
            office glass, and vista gradients.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FillPrimitive.NumberOfColors">
            <summary>
            Gets or sets the number of used colors in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FillPrimitive.GradientStyle">
            <summary>
            Gets and sets the gradient style. The possible values are defined in the gradient
            style enumeration: solid, linear, radial, glass, office glass, gel, and vista.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FillPrimitive.GradientAngle">
            <summary>
            Gets or sets gradient angle for linear gradient.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FillPrimitive.GradientPercentage">
            <summary>
            Gets or sets GradientPercentage for linear, glass, office glass, gel, vista, and
            radial gradients.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FillPrimitive.GradientPercentage2">
            <summary>
            Gets or sets GradientPercentage for office glass, vista, and radial
            gradients.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FillPrimitive.PaintUsingParentShape">
            <summary>
            Specifies whether the FillPrimitive should fill the GraphicsPath defined by its Parent.Shape. If false, it will fill its bounding rectangle.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FillPrimitive.ShouldUsePaintBufferState">
            <summary>
            This property is used internally!
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.FillPrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>
            Draws the primitive on the screen.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.BasePrimitive">
            <summary>
            Represents a base type for all primitives. Defines PaintPrimitive method that is
            overridden in all derived classes.
            <para>Primitives are these RadElement(s) that are actually drawn on the 
            screen.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.BasePrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>Virtual function that draws the primitive on the screen.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BasePrimitive.IsEmpty">
            <summary><para>Gets a value indicating whether the primitive has content.</para></summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.BorderPrimitive">
            <summary><para>Represents a border that is drawn on the screen.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.BorderPrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>
            Virtual method that paints the primitive on the screen. It may be overridden by
            the derived types.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.BorderPrimitive.GetBorderThickness">
            <summary>
            Gets the border thickness.
            </summary>
            <returns>An instance of <see cref="T:System.Windows.Forms.Padding"/> representing the border thickness.</returns>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.BoxStyle">
            <summary>
            	<para class="MsoNormal" style="MARGIN: 0in 0in 0pt">
            		<span style="FONT-SIZE: 8pt; COLOR: black; FONT-FAMILY: Verdana">Gets or sets the
                Border style. The two possible values are SingleBorder and FourBorder. In the
                single border case, all four sides share the same appearance although the entire
                border may have gradient. In four border case, each of the four sides may differ in
                appearance. For example, the left border may have different color, shadowcolor, and
                width from the rest. When SingleBorder is chosen, you should use the general
                properties such as width and color, and respectively, when the FourBorder style is
                chosen you should use properties prefixed with the corresponding side, for example,
                LeftColor, LeftWidth for the left side.</span></para>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.BorderDrawMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.Width">
            <summary>
            Gets or sets float value indicating the width of the border
            measured in pixels. It is only used when <em>SingleBorder</em> style is chosen for the
            <em>BoxStyle</em> property which effectively means that all four borders share the same
            width.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.LeftWidth">
            <summary>
            Gets or sets a float value width of the left border. This property
            has effect only if <em>FourBorders</em> style is used in <em>BoxStyle</em> property and
            affects only the width of the left border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.TopWidth">
            <summary>
            Gets or sets a float value width of the top border . This property
            has effect only if <em>FourBorders</em> style is used in <em>BoxStyle</em> property,
            and affects only the top border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.RightWidth">
            <summary>
            Gets or sets a float value width of the right border. This
            property has effect only if <em>FourBorders</em> style is used in <em>BoxStyle</em>
            property, and affects only the right border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.BottomWidth">
            <summary>
            Gets or sets a float value width. This property has effect only if
            <em>FourBorders</em> style is used in <em>BoxStyle</em> property, and affects only the
            bottom border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.LeftColor">
            <summary>
            Gets and sets the left border color. This applies only if FourBorders is chosen
            for BoxStyle property, and affects only the left border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.TopColor">
            <summary>
            Gets and sets the top border color. This applies only if FourBorders is chosen
            for BoxStyle property, and affects only the top border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.RightColor">
            <summary>
            Gets and sets the right border color. This applies only if FourBorders is chosen
            for BoxStyle property, and affects only the right border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.BottomColor">
            <summary>
            Gets and sets the bottom border color. This applies only if FourBorders is chosen
            for BoxStyle property, and affects only the bottom border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.LeftShadowColor">
            <summary>
            Gets and sets the left shadow color. This option applies only if
            fourBorders is chosen, and affects only the left border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.TopShadowColor">
            <summary>
            Gets and sets the top shadow color. This option applies only if
            fourBorders is chosen, and affects only the top border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.RightShadowColor">
            <summary>
            Gets and sets the right shadow color. This option applies only if
            fourBorders is chosen, and affects only the right border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.BottomShadowColor">
            <summary>
            Gets and sets the bottom shadow color. This option applies only if
            fourBorders is chosen, and affects only the bottom border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.PaintUsingParentShape">
            <summary>
            Specifies whether the BorderPrimitive should draw the GraphicsPath defined by its Parent.Shape. If false, it will draw its bounding rectangle.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.BorderDashStyle">
            <summary>
            Specifies the style of dashed lines drawn with a border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.BorderDashPattern">
            <summary>
            Specifies the pattern of dashed lines drawn when the BorderDashStyle is custom.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.Offset">
            <summary>
            Gets the border offset of the primitive. It effectively retrieves the upper-left
            corner inside the primitive border. It takes into consideration the BoxStyle property
            and possible different widths of the left and the upper side.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.BorderSize">
            <summary>Retrieves size of the combined bottom, right, upper, and left border.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.HorizontalWidth">
            <summary>Gets the horizontal width of the combined left and right border.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.VerticalWidth">
            <summary>Gets the vertical width of the combined bottom and upper border.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.GradientAngle">
            <summary>Gets or sets gradient angle for linear gradient measured in degrees.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.GradientStyle">
            <summary>
            Gets or sets gradient style. Possible styles are solid, linear, radial, glass,
            office glass, gel, and vista.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.ForeColor2">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.ForeColor3">
            <summary>
            Gets or sets color used by radial, glass, office glass, and vista gradients. This
            is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.ForeColor4">
            <summary>
            Gets or sets color used by radial, glass, office glass, and vista gradients. This
            is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.InnerColor">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.InnerColor2">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.InnerColor3">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.InnerColor4">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.CheckPrimitive">
            <summary><para>Represents a check box primitive that is drawn on the screen.</para></summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.CheckPrimitive.CheckPrimitiveStyle">
            <summary>
             Gets or sets a value indicating the style of the check box primitive.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.CheckPrimitive.DrawFill">
            <summary>
             Gets or sets a value indicating whether to draw the background.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.CheckPrimitive.UseFixedCheckSize">
            <summary>
             Gets or sets a value that determines whether the checkmark size is fixed to 8;8 pixels. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.CheckPrimitive.CheckThickness">
            <summary>
             Gets or sets a value that determines the checkmark thickness. Use this property only when UseFixedCheckSize property is set to false.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.CheckPrimitive.VerticalOffest">
            <summary>
            Gets or sets a value that determines how the checkmark position in Indeterminate state will be adjusted vertical (in pixels). 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.CheckPrimitive.HorizontalOffest">
            <summary>
             Gets or sets a value that determines how the checkmark position in Indeterminate will be adjusted horizontal (in pixels). 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.CheckPrimitive.SquareWidthAdjust">
            <summary>
             Gets or sets a value that determines how the checkmark width in Indeterminate state will be adjusted (in pixels). 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.CheckPrimitive.SquareHeightAdjust">
            <summary>
              Gets or sets a value that determines how the checkmark height in Indeterminate state will be adjusted (in pixels). 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.ImagePrimitive">
            <summary>Represents an image that is drawn on the screen.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.StretchHorizontally">
            <summary>
            Gets or sets the flag controlling whether the image primitive fills up the available area horizontally
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.StretchVertically">
            <summary>
            Gets or sets the flag controlling whether the image primitive fills up the available area vertically
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.ImageLayout">
            <summary>
            Gets or sets the way ImagePrimitive will layout its image on the screen.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.ScaleSize">
            <summary>
            Gets or sets the desired size to be used when displaying the image. Works when ImageScalingMode is set to FitToSize.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.Image">
            <summary>Gets or sets the image that is displayed.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.SvgImage">
            <summary>Gets or sets the image that is displayed.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.SvgImageXml">
            <summary>
            Gets or sets the Svg Image as string.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.RenderImage">
            <summary>
            Gets the Image that will be painted on the screen, with settings such as Opacity and Flip applied.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.ImageIndex">
            <summary>Gets or sets the image list index value of the displayed image.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.ImageKey">
            <summary>Gets or sets the key accessor for the image in the ImageList.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.UseSmallImageList">
            <summary>Specifies whether the image should be taken from the SmallImageList or from the ImageList when the ImageIndex/ImageKey property is set.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.ImageScaling">
            <summary>
            Gets or sets image scaling. Possible values are members of ImageScaling
            enumeration: None and SizeToFit.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.ActualIndex">
            <summary>Gets actual index.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.ImageDrawType">
            <summary>
            Determines whether the Image or SvgImage property will be painted.
            Note that if SvgImage == null, this property will always return "ImageDrawType.Image".
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.IsEmpty">
            <summary><para>Gets a value indicating whether the primitive has content.</para></summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.TransparentColor">
            <summary>
            Gets or sets the transparent color for the image
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.RotateFlipType">
            <summary>
            Gets or sets the type of rotate/flip to be applied.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.ImagePrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>Draws the primitive on the screen.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.IPrimitive.ShouldPaint">
            <summary><para>Gets or sets a value indicating whether the primitive should 
            be painted.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.IPrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>Draws the primitive on the screen.</summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.TextPrimitive">
            <summary>
            Represents text that is drawn on the screen.
            Extends %BasePrimitive:Telerik.WinControls.Primitives.BasePrimitive%.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.TextRenderingHint">
            <summary>
            Gets or sets the text rendering hint.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.DisabledTextRenderingHint">
            <summary>
            Gets or sets the text rendering hint used when this instance is disabled.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.Impl">
            <summary>
            This property is used internally.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.Text">
            <summary>
            Gets or sets the displayed text.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.StretchHorizontally">
            <summary>
            Allow StretchHorizontally
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.StretchVertically">
            <summary>
            Allow StretchVertically
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.AutoEllipsis">
            <summary>
            Gets or sets a value indicating whether the additional label text is to be indicated by an ellipsis.
            </summary>
            <value>
              <c>true</c> if the additional label text is to be indicated by an ellipsis otherwise, <c>false</c>. Default value is <c>true</c>.
            </value>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.MeasureTrailingSpaces">
            <summary>
            Includes the trailing space at the end of each line. By default the boundary rectangle returned by the Overload:System.Drawing.Graphics.MeasureString method excludes the space at the end of each line. Set this flag to include that space in measurement.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.TextWrap">
            <summary>
            Gets or sets a value indicating whether the text should wrapped to the available layout rectangle.
            </summary>
            <value>
              <c>true</c> if the text should wrapped to the available layout rectangle otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether the control interprets an ampersand character (&#38;)
            in the control's Text property to be an access key prefix character.
            </summary>
            <returns>
            true if the label doesn't display the ampersand character and underlines the character
            after the ampersand in its displayed text and treats the underlined character as an access key;
            otherwise, false if the ampersand character is displayed in the text of the control.
            The default is true.
            </returns>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.ShowKeyboardCues">
            <summary>
            Gets or sets a value indicating whether if the keyboard accelerators are visible.
            </summary>
            <value>
              <c>true</c> if if the keyboard accelerators are visible otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.TextOrientation">
            <summary>
            Gets or sets the text orientation. Possible values are horizontal 
            and vertical.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.FlipText">
            <summary>
            Gets or sets whether the text will be flipped.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.TextAlignment">
            <summary>
            Gets or sets the text alignment. Possible values are included in 
            the ContentAlignment enumeration.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.IsEmpty">
            <summary>
            Gets a value indicating whether the primitive has content.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.Shadow">
            <summary>
            Gets or sets the shadow settings.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.TextParams">
            <summary>
            Gets an instance of the <see cref="T:Telerik.WinControls.Primitives.TextParams"/> structure which contains information on how to render the text in this element
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.TextPrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>
            Draws the primitive on the screen.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.TextPrimitive.ToString">
            <summary>
            Returns the text as a string.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.WaitingBarStyles.Indeterminate">
            <summary>
            Indicates Indeterminate style
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.WaitingBarStyles.Throbber">
            <summary>
            Indicates Throbber style
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.WaitingBarStyles.Dash">
            <summary>
            Indicates Dash style
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.WaitingBarStyles.DotsLine">
            <summary>
            Shows a line of moving dots.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.WaitingBarStyles.DotsSpinner">
            <summary>
            Shows a ring of moving dots.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.WaitingBarStyles.LineRing">
            <summary>
            Shows a ring, composed of lines.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.WaitingBarStyles.SegmentedRing">
            <summary>
            Shows a ring, composed of segments.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.WaitingBarStyles.DotsRing">
            <summary>
            Shows a ring, composed of dots.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.WaitingBarStyles.FadingRing">
            <summary>
            Shows a rotating fading ring.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.WaitingBarStyles.RotatingRings">
            <summary>
            Shows two rotating rings in opposite directions.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Enumerations.CheckPrimitiveStyleEnum">
            <summary>    
            Defines the options used by CheckPrimitive check box 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.CheckPrimitiveStyleEnum.XP">
            <summary>
            Indicates XP check primitive style.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.CheckPrimitiveStyleEnum.Vista">
            <summary>
            Indicates Vista check primitive style.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.CheckPrimitiveStyleEnum.Mac">
            <summary>
            Indicates Mac check primitive style.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.CheckPrimitiveStyleEnum.None">
            <summary>
            Indicates empty check primitive.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.CheckPrimitiveStyleEnum.Win8">
            <summary>
            Indicates Windows8 check primitive style.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Enumerations.SortStyle">
            <summary>
            Defines the sorting style of items in a control.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.SortStyle.Ascending">
            <summary>
            Indicates ascending sorting. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.SortStyle.Descending">
            <summary>
            Indicates descending sorting.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.SortStyle.None">
            <summary>
            Indicates no sorting.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Enumerations.ImageScaling">
            <summary>
            	<para>Indicates how the image is scaled. ImageScaling members are None and
                SizeToFit. The latter fits the image to the parent size.</para>
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Enumerations.ToggleState">
            <summary>
            Defines the toggle states. Toggle states are used in RadToggleButton.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.ToggleState.Off">
            <summary>
            Indicates off state.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.ToggleState.On">
            <summary>
            Indicates on state.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.ToggleState.Indeterminate">
            <summary>
            Indicates a third state for the toggle button - indeterminate.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Enumerations.TypeRestriction">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.TypeRestriction.ValidateForbiddenTypes">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.TypeRestriction.ValidateAllowedTypes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.WinControls.GestureEventArgs.Handled">
            <summary>
            [true] if the event has been handled and should not be proccessed further, [false] otherwise.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.GestureEventArgs.GestureType">
            <summary>
            The type of the gesture that has occured.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.GestureEventArgs.IsBegin">
            <summary>
            [true] if this is the beggining of the gesture, [false] otherwise.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.GestureEventArgs.IsEnd">
            <summary>
            [true] if this is the end of the gesture, [false] otherwise.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.GestureEventArgs.IsInertia">
            <summary>
            [true] if the event was caused by inertia, [false] otherwise.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.GestureEventArgs.Location">
            <summary>
            The location of the gesture.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PageChangingEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.PageChangingEventArgs"/> class.
            </summary>
            <param name="newPageIndex">The index of the requested page.</param>
        </member>
        <member name="P:Telerik.WinControls.PageChangingEventArgs.NewPageIndex">
            <summary>
            Gets the index of the requested page.
            </summary>
            <returns>The index of the requested page.</returns>
        </member>
        <member name="P:Telerik.WinControls.PanGestureEventArgs.Offset">
            <summary>
            The possition offset according to the previous pan event.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.PanGestureEventArgs.Velocity">
            <summary>
            A direction vector that indicates the direction of the velocity.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.PressAndTapGestureEventArgs.Delta">
            <summary>
            The offset of the tapping finger according to the pressing finger.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RotateGestureEventArgs.Angle">
            <summary>
            The rotation angle in radians. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ZoomGestureEventArgs.ZoomFactor">
            <summary>
            The zoom factor according to the previous zoom gesture event.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ZoomGestureEventArgs.Center">
            <summary>
            The center of the zoom gesture.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.IPropertySetting">
            <summary>
            Exposes methods and properties for a concrete property setttings used in StyleSheets and Themes.
            PropertySetting can customize the current value of any RadPropertry of any RadElement instance.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IPropertySetting.Property">
            <summary>
            Gets or sets the property itself.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.IPropertySetting.GetCurrentValue(Telerik.WinControls.RadObject)">
            <summary>
            Retrieves the current value of the property.
            </summary>
            <param name="forObject">
                
            </param>
            <returns>
            
            </returns>
        </member>
        <member name="M:Telerik.WinControls.IPropertySetting.ApplyValue(Telerik.WinControls.RadObject)">
            <summary>
            Applies the value to the element given as a parameter.
            </summary>
            <param name="element">
            the element that the property value is applied to.
            </param>
        </member>
        <member name="M:Telerik.WinControls.IPropertySetting.UnapplyValue(Telerik.WinControls.RadObject)">
            <summary>
            Unapply the property to the element given as a parameter.
            </summary>
            <param name="element">
            the element that the property value is unapplied to.
            </param>
        </member>
        <member name="F:Telerik.WinControls.ScreenTipPresenter.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ScreenTipPresenter.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.ScreenTipPresenter.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadScreenTip.ScreenTipElement">
            <summary>
            Gets the instance of RadScreenTipElement wrapped by this control. RadScreenTipElement
            is the main element in the hierarchy tree and encapsulates the actual functionality of RadScreenTip.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadScreenTipElement">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadScreenTipElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.RadScreenTipElement"/> class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadScreenTipElement.EnableCustomSize">
            <summary>
            Gets or sets value indicating whether Office 2007 UI compliant screen tip sizing should be used
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadScreenTipElement.Description">
            <summary>
            Override this property and provide custom screentip template description in DesignTime
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadScreenTipElement.TemplateType">
            <summary>
            Gets the screen tip actual template type. Used for component serialization.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadScreenTipElement.TipSize">
            <summary>
            Gets a value indicating screen tip preset size.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadScreenTipPlaceholder.ScreenTipElement">
            <summary>
            Gets the instance of RadScreenTipElement wrapped by this control. RadScreenTipElement
            is the main element in the hierarchy tree and encapsulates the actual functionality of RadScreenTip.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadScreenTipPlaceholder.SetScreenTipElement(Telerik.WinControls.RadScreenTipElement)">
            <summary>
            Sets the screntip element to be wrapped by this control.
            </summary>
            <param name="element">An instance of <see cref="T:Telerik.WinControls.RadScreenTipElement">RadScreenTipElement</see></param>
        </member>
        <member name="F:Telerik.WinControls.ScreenTipUI.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ScreenTipUI.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.ScreenTipUI.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.CollectionChangedHandler">
            <summary>
            Represents the method that will handle a CollectionChanged event.
            </summary>
            <param name="sender">the %sender:System.Collections.CollectionBase% of the event</param>
            <param name="args">the %event arguments:Telerik.WinControls.UI.CollectionChangedEventArgs" </param>
        </member>
        <member name="T:Telerik.WinControls.CollectionChangedEventArgs">
            <summary>
            Represents event data for the CollectionChanged event.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.CollectionChangedEventArgs.Target">
            <summary>
            Gets or sets a value specifing the target.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.CollectionChangedEventArgs.Index">
            <summary>
            Gets or sets a value indicating the index in the collection of the changed item.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.CollectionChangedEventArgs.Operation">
            <summary>
            Gets or sets a value indicating the items chnage operation.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.CollectionChangedEventArgs.#ctor(System.Object,System.Int32,Telerik.WinControls.ItemsChangeOperation)">
            <summary>
            Initializes a new instance of the CollectionChangedEventArgs class using the 
            target, the index of the item, and the item's change operation. 
            </summary>
            <param name="target"></param>
            <param name="index"></param>
            <param name="operation"></param>
        </member>
        <member name="T:Telerik.WinControls.RadToolTip">
            <summary>
            Represents a small rectangular pop-up window that displays a brief description of a control's purpose when the user rests the pointer on the control.
            <see cref="T:Telerik.WinControls.RadToolTip" /> Provides extended functionality by removing the necessity to have a control in the element tree
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadToolTip.CurrentText">
            <summary>
            Returns the current text if it is alredy set.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadToolTip.Show(System.String)">
            <summary>
            Sets the <see cref="T:Telerik.WinControls.RadToolTip" /> text and displays the <see cref="T:Telerik.WinControls.RadToolTip" /> modally.
            Uses CursorPosition relative to screen coordinates to position the <see cref="T:Telerik.WinControls.RadToolTip" />.
            </summary>
            <param name="text">A <see cref="T:System.String" /> containing the new <see cref="T:Telerik.WinControls.RadToolTip" /> text.</param>
        </member>
        <member name="M:Telerik.WinControls.RadToolTip.Show(System.String,System.Int32)">
            <summary>
            Sets the <see cref="T:Telerik.WinControls.RadToolTip" /> text and displays the <see cref="T:Telerik.WinControls.RadToolTip" /> modally.
            Uses CursorPosition relative to screen coordinates to position the <see cref="T:Telerik.WinControls.RadToolTip" />.
            </summary>
            <param name="text">A <see cref="T:System.String" /> containing the new <see cref="T:Telerik.WinControls.RadToolTip" /> text.</param>
            <param name="duration">An <see cref="T:System.Int32" /> containing the duration, in milliseconds, to display the <see cref="T:Telerik.WinControls.RadToolTip" />.</param>
        </member>
        <member name="M:Telerik.WinControls.RadToolTip.Show(System.String,System.Drawing.Point)">
            <summary>
            Sets the <see cref="T:Telerik.WinControls.RadToolTip" /> text and displays the <see cref="T:Telerik.WinControls.RadToolTip" /> modally. 
            Uses CursorPosition relative to screen coordinates to position the <see cref="T:Telerik.WinControls.RadToolTip" />. 
            </summary>
            <param name="text">A <see cref="T:System.String" /> containing the new <see cref="T:Telerik.WinControls.RadToolTip" /> text.</param>
            <param name="point">A <see cref="T:System.Drawing.Point" /> containing the offset, in pixels, relative to the upper-left corner of the screen, to display the <see cref="T:Telerik.WinControls.RadToolTip" />.</param>
        </member>
        <member name="M:Telerik.WinControls.RadToolTip.Show(System.String,System.Int32,System.Int32)">
            <summary>
            Sets the <see cref="T:Telerik.WinControls.RadToolTip" /> text and displays the <see cref="T:Telerik.WinControls.RadToolTip" /> modally.
            Uses CursorPosition relative to screen coordinates to position the <see cref="T:Telerik.WinControls.RadToolTip" />.  
            </summary>
            <param name="text">A <see cref="T:System.String" /> containing the new <see cref="T:Telerik.WinControls.RadToolTip" /> text.</param>
            <param name="x">The horizontal offset, in pixels, relative to the upper-left corner of the screen, to display the ToolTip.</param>
            <param name="y">The vertical offset, in pixels, relative to the upper-left corner of the screen, to display the ToolTip.</param>
        </member>
        <member name="M:Telerik.WinControls.RadToolTip.Show(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the <see cref="T:Telerik.WinControls.RadToolTip" /> text and displays the <see cref="T:Telerik.WinControls.RadToolTip" /> modally. 
            Uses CursorPosition relative to screen coordinates to position the <see cref="T:Telerik.WinControls.RadToolTip" />.   
            </summary>
            <param name="text">A <see cref="T:System.String" /> containing the new <see cref="T:Telerik.WinControls.RadToolTip" /> text.</param>
            <param name="x">The horizontal offset, in pixels, relative to the upper-left corner of the screen, to display the ToolTip.</param>
            <param name="y">The vertical offset, in pixels, relative to the upper-left corner of the screen, to display the ToolTip.</param>
            <param name="duration">An <see cref="T:System.Int32" /> containing the duration, in milliseconds, to display the <see cref="T:Telerik.WinControls.RadToolTip" />.</param>
        </member>
        <member name="M:Telerik.WinControls.RadToolTip.Show(System.String,System.Drawing.Point,System.Int32)">
            <summary>
            Sets the <see cref="T:Telerik.WinControls.RadToolTip" /> text and displays the <see cref="T:Telerik.WinControls.RadToolTip" /> modally. 
            Uses CursorPosition relative to screen coordinates to position the <see cref="T:Telerik.WinControls.RadToolTip" />.    
            </summary>
            <param name="text">A <see cref="T:System.String" /> containing the new <see cref="T:Telerik.WinControls.RadToolTip" /> text.</param>
            <param name="point">A <see cref="T:System.Drawing.Point" /> containing the offset, in pixels, relative to the upper-left corner of the screen, to display the <see cref="T:Telerik.WinControls.RadToolTip" />.</param>
            <param name="duration">An <see cref="T:System.Int32" /> containing the duration, in milliseconds, to display the <see cref="T:Telerik.WinControls.RadToolTip" />.</param>
        </member>
        <member name="M:Telerik.WinControls.RadToolTip.Hide">
            <summary>
            Hides this <see cref="T:Telerik.WinControls.RadToolTip" /> instance.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ResFinder">
            <summary>
            Repository for Telerik-related resources. Not for general use.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ChamferedRectShape">
            <summary>
            Represents a rectangle with chamfered corners.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ChamferedRectShape.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.ChamferedRectShape"/> class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ChamferedRectShape.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.ChamferedRectShape"/> class.
            </summary>
            <param name="width">The width of the chamfer.</param>
        </member>
        <member name="M:Telerik.WinControls.ChamferedRectShape.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.ChamferedRectShape"/> class.
            </summary>
            <param name="width">The width of the chamfer.</param>
            <param name="angle">The angle of the chamfer in degrees.</param>
        </member>
        <member name="M:Telerik.WinControls.ChamferedRectShape.#ctor(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.ChamferedRectShape"/> class.
            </summary>
            <param name="width">The width of the chamfer.</param>
            <param name="angle">The angle of the chamfer in degrees.</param>
            <param name="topLeftChamfered">if set to <c>true</c> the top left corner will be chamfered.</param>
            <param name="bottomLeftChamfered">if set to <c>true</c> the bottom left corner will be chamfered.</param>
            <param name="bottomRightChamfered">if set to <c>true</c> the bottom right corner will be chamfered.</param>
            <param name="topRightChamfered">if set to <c>true</c> the top right corner will be chamfered.</param>
        </member>
        <member name="P:Telerik.WinControls.ChamferedRectShape.Width">
            <summary>
            Gets or sets the width of the chamfer.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ChamferedRectShape.Angle">
            <summary>
            Gets or sets the angle of the chamfer in degrees. The value must be between 0 inclusive and 90 exclusive.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ChamferedRectShape.TopLeftChamfered">
            <summary>
            Gets or sets a value indicating whether the top left corner of the shape will be chamfered.
            </summary>
            <value>
              <c>true</c> if the top left corner is be chamfered; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.WinControls.ChamferedRectShape.TopRightChamfered">
            <summary>
            Gets or sets a value indicating whether the top right corner of the shape will be chamfered.
            </summary>
            <value>
              <c>true</c> if the top right corner is be chamfered; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.WinControls.ChamferedRectShape.BottomRightChamfered">
            <summary>
            Gets or sets a value indicating whether the bottom right corner of the shape will be chamfered.
            </summary>
            <value>
              <c>true</c> if the bottom right corner is chamfered; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.WinControls.ChamferedRectShape.BottomLeftChamfered">
            <summary>
            Gets or sets a value indicating whether the bottom left corner of the shape will be chamfered.
            </summary>
            <value>
              <c>true</c> if the bottom left corner is chamfered; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Telerik.WinControls.ChamferedRectShape.CreatePath(System.Drawing.Rectangle)">
            <summary>
            Creates path using a rectangle for bounds.
            </summary>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ChamferedRectShape.SerializeProperties">
            <summary>
            Serializes properties. Required for telerik serialization mechanism.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ChamferedRectShape.DeserializeProperties(System.String)">
            <summary>
            Deserializes properties. Required for telerik deserialization mechanism.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.CircleShape.CreatePath(System.Drawing.Rectangle)">
            <summary>
            Creates circle shape in the middle of the provided rectangle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.CircleShape.CreatePath(System.Drawing.RectangleF)">
            <summary>
            Creates circle shape in the middle of the provided rectangle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.CircleShape.CreateRegion(System.Drawing.Rectangle)">
            <summary>
            Creates circle region in the middle of the provided rectangle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.CustomShape.SerializeProperties">
            <summary>Serializes properties. Required for telerik serialization mechanism.</summary>
        </member>
        <member name="M:Telerik.WinControls.CustomShape.DeserializeProperties(System.String)">
            <summary>Deserializes properties. Required for telerik deserialization mechanism.</summary>
        </member>
        <member name="F:Telerik.WinControls.CustomShapeEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.CustomShapeEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.CustomShapeEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.IShapeCurve.SnapToCurve(System.Drawing.PointF,System.Single)">
            <summary>
            Should snap to the line or curve
            </summary>
            <param name="pt"></param>
            <param name="snapDistance"></param>
            <returns></returns>
        </member>
        <member name="F:Telerik.WinControls.RadShapeEditorControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadShapeEditorControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.RadShapeEditorControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.SnapToGrid.#ctor">
            <summary>
            The default constructor sets the following default values:
                FieldWidth = 1.0f;
                SnapRelative = 0.2f;
                SnapDelta = 0.2f;
                SnapType = SnapTypes.Relative;
            </summary>
        </member>
        <member name="P:Telerik.WinControls.SnapToGrid.SnapType">
            <summary>
            Set the snap type to be one of the following:
                SnapTypes.Relative - snap distance is relative to the FieldWidth
            <see cref="P:Telerik.WinControls.SnapToGrid.SnapFixed"/>
                SnapTypes.Fixed    - snap distance is fixed
            </summary>
        </member>
        <member name="P:Telerik.WinControls.SnapToGrid.FieldWidth">
            <summary>
            Width of a single box in the snap grid.
            It's value cannot be less than or equal to zero.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.SnapToGrid.SnapFixed">
            <summary>
            Sets/Gets the snap distance for fixed type snapping. 
            Does not activate fixed type snapping.
            <see cref="P:Telerik.WinControls.SnapToGrid.SnapType"/>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.SnapToGrid.SnapRelative">
            <summary>
            Sets/Gets the relative snap distance.
            Does not activate relative type snapping.
            <see cref="P:Telerik.WinControls.SnapToGrid.SnapType"/>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.SnapToGrid.CachedSnap">
            <summary>
            Gets the precached snap distance.
            Doesn't need to be equal to any of the SnapFixed or SnapRelative properties. 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.OldShapeEditor.CustomShape">
            <summary>Represents custom shape of an element.</summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.CustomShape.#ctor">
            <summary>Initializes a new instance of the CustomShape class.</summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.CustomShape.Points">
            <summary>Gets a List of Shape points.</summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.CustomShape.Dimension">
            <summary>Gets or sets a Rectangle indicating the dimension of the shape.</summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.CustomShape.CreatePath(System.Drawing.Rectangle)">
            <summary>Creates a path using a ractangle for bounds.</summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.CustomShape.SerializeProperties">
            <summary>Serializes properties. Required for telerik serialization mechanism.</summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.CustomShape.DeserializeProperties(System.String)">
            <summary>Deserializes properties. Required for telerik deserialization mechanism.</summary>
        </member>
        <member name="T:Telerik.WinControls.OldShapeEditor.RadShapeEditorControl">
            <summary>
            Represents a shape editor control.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.RadShapeEditorControl.DrawGridLines(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Draws grid lines in the specified rectangle with the specified color
            </summary>
            <param name="graphics"></param>
            <param name="rect"></param>
            <param name="color"></param>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.RadShapeEditorControl.GetRealFromVirtualRect(System.Drawing.Rectangle)">
            <summary>
            Translates a rectangle in accordance with the offsets due to scrolling
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.RadShapeEditorControl.GetRealFromVirtualPoint(Telerik.WinControls.OldShapeEditor.ShapePointBase)">
            <summary>
            Translates a point in accordance with the offsets due to scrolling
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.RadShapeEditorControl.UpdateMaxSize(Telerik.WinControls.OldShapeEditor.ShapePointBase)">
            <summary>
            Updates the bounds of the drawable area
            </summary>
            <param name="pt"></param>
        </member>
        <member name="F:Telerik.WinControls.OldShapeEditor.RadShapeEditorControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.RadShapeEditorControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.RadShapeEditorControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.OldShapeEditor.CustomShapeEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.CustomShapeEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.CustomShapeEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.OldShapeEditor.ShapePoint">
            <summary>
            Represents a shape point.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.OldShapeEditor.ShapePoint.LineDirections">
            <summary>
            Exposes the line direction.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.OldShapeEditor.ShapePoint.LinePositions">
            <summary>
            Exposes the line position.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.OldShapeEditor.ShapePoint.LinePositions.Horizontal">
            <summary>
            Indicates horizontal position.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.OldShapeEditor.ShapePoint.LinePositions.Vertical">
            <summary>
            Indicates vertical position.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.ShapePoint.ControlPoint1">
            <summary>
            Gets or sets the first control point.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.ShapePoint.ControlPoint2">
            <summary>
            Gets or sets the second control point.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePoint.#ctor">
            <summary>
            Initializes a new instance of the ShapePoint class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePoint.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ShapePoint class from
            the X and Y coordinates of the point.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePoint.#ctor(System.Drawing.Point)">
            <summary>
            Initializes a new instance of the ShapePoint class from a Point structure.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePoint.#ctor(Telerik.WinControls.OldShapeEditor.ShapePoint)">
            <summary>
            Initializes a new instance of the ShapePoint class using a ShapePoint instance.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePoint.GetLineDirection(Telerik.WinControls.OldShapeEditor.ShapePointBase)">
            <summary>
            Retrieves the line direction of the line that passes through the instance
            point and the point given as an argument.
            </summary>
            <param name="nextPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePoint.CreateBezier(Telerik.WinControls.OldShapeEditor.ShapePointBase)">
            <summary>
            Creates a Bezier curve between the current point and the point given as a
            parameter.
            </summary>
            <param name="nextPoint"></param>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePoint.GetCurve(Telerik.WinControls.OldShapeEditor.ShapePoint)">
            <summary>
            
            </summary>
            <param name="nextPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePoint.IsVisible(Telerik.WinControls.OldShapeEditor.ShapePoint,System.Drawing.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="nextPoint"></param>
            <param name="pt"></param>
            <param name="width"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePoint.IsCurveVisible(System.Drawing.Point[],System.Drawing.Point,System.Double)">
            <summary>
            
            </summary>
            <param name="points"></param>
            <param name="pt"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.OldShapeEditor.ShapePointBase">
            <summary>
            Represents a base class of the ShapePoint class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.ShapePointBase.X">
            <summary>
            Gets or sets a float value indicating the X coordinate of the shape point.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.ShapePointBase.Y">
            <summary>
            Gets or sets a float value indicating the Y coordinate of the shape point.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.ShapePointBase.Anchor">
            <summary>
            Gets or sets a value indicating the anchor style.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.ShapePointBase.Locked">
            <summary>
            Gets or sets a boolean value indicating whether the shape point is locked.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePointBase.#ctor">
            <summary>
            Initializes a new instance of the ShapePointbase class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePointBase.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the ShapePoint class using X and Y
            coordinates.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePointBase.#ctor(System.Drawing.Point)">
            <summary>
            Initializes a new instance of the ShapePoint class using a Point structure.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePointBase.#ctor(Telerik.WinControls.OldShapeEditor.ShapePointBase)">
            <summary>
            Initializes a new instance of the ShapePoint class using an instance of the
            ShapePointBase class.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePointBase.Set(System.Single,System.Single)">
            <summary>
            Sets the X and Y coordinates of the shape point.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePointBase.Set(System.Drawing.Point)">
            <summary>
            Sets the point position from a Point structure.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePointBase.GetPoint">
            <summary>
            Retrieves a Point structure corresponding to the point position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePointBase.GetPoint(System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePointBase.ToString">
            <summary>
            Retrieves a string representation of the ShapePointBase class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.SnapToGrid.#ctor">
            <summary>
            The default constructor sets the following default values:
                FieldWidth = 1.0f;
                SnapRelative = 0.2f;
                SnapDelta = 0.2f;
                SnapType = SnapTypes.Relative;
            </summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.SnapToGrid.SnapType">
            <summary>
            Set the snap type to be one of the following:
                SnapTypes.Relative - snap distance is relative to the FieldWidth
            <see cref="P:Telerik.WinControls.OldShapeEditor.SnapToGrid.SnapFixed"/>
                SnapTypes.Fixed    - snap distance is fixed
            </summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.SnapToGrid.FieldWidth">
            <summary>
            Width of a single box in the snap grid.
            It's value cannot be less than or equal to zero.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.SnapToGrid.SnapFixed">
            <summary>
            Sets/Gets the snap distance for fixed type snapping. 
            Does not activate fixed type snapping.
            <see cref="P:Telerik.WinControls.OldShapeEditor.SnapToGrid.SnapType"/>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.SnapToGrid.SnapRelative">
            <summary>
            Sets/Gets the relative snap distance.
            Does not activate relative type snapping.
            <see cref="P:Telerik.WinControls.OldShapeEditor.SnapToGrid.SnapType"/>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.SnapToGrid.CachedSnap">
            <summary>
            Gets the precached snap distance.
            Doesn't need to be equal to any of the SnapFixed or SnapRelative properties. 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Tests.DonutShape">
            <summary>Represents donut like shape.</summary>
        </member>
        <member name="M:Telerik.WinControls.Tests.DonutShape.CreatePath(System.Drawing.Rectangle)">
            <summary>
            Creates donut-like path. Overrides the method defined in its base class -
            ElementShape.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Tests.QAShape.CreatePath(System.Drawing.Rectangle)">
            <summary>
            Creates donut-like path. Overrides the method defined in its base class -
            ElementShape.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ElementShape">
            <summary>Represents element shape. Base class for specialized shapes such as 
            EllipseShape, RoundRectShape, Office12Shape, etc. </summary>
        </member>
        <member name="M:Telerik.WinControls.ElementShape.GetElementShape(Telerik.WinControls.RadElement)">
            <summary>
            Retrieves the shape of the element. GraphicsPath represents a series of connected
            lines and curves.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ElementShape.GetElementContour(Telerik.WinControls.RadElement)">
            <summary>
            Retrieves the contour of the element0. GraphicsPath represents a series of
            connected lines and curves.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ElementShape.CreatePath(System.Drawing.Rectangle)">
            <summary>Creates path using a rectangle for bounds.</summary>
        </member>
        <member name="M:Telerik.WinControls.ElementShape.CreatePath(System.Drawing.RectangleF)">
            <summary>Creates path using a rectangle for bounds.</summary>
        </member>
        <member name="M:Telerik.WinControls.ElementShape.MirrorPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF)">
            <summary>
            Mirrors the GraphicsPath. Used in RightToLeft mode.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ElementShape.SerializeProperties">
            <summary>
            Serializes properties. Required for serialization mechanism of telerik
            framework.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ElementShape.DeserializeProperties(System.String)">
            <summary>
            Deserializes properties. Required for the deserialization mechanism of telerik
            framework.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ElementShapeConverter">
            <summary>Represents element shape converter.</summary>
        </member>
        <member name="T:Telerik.WinControls.EllipseShape">
            <summary>Represents ellipse shape.</summary>
        </member>
        <member name="M:Telerik.WinControls.EllipseShape.CreatePath(System.Drawing.Rectangle)">
            <summary>
            Creates ellipse shape. Overrides the method defined in its base class -
            ElementShape.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ImagePaintMode">
            <summary>
            Defines possible modes to be used when rendering an image.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ImagePaintMode.None">
            <summary>
            Image is painted without any modification.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ImagePaintMode.Stretch">
            <summary>
            Image is stretched within the paint rectangle.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ImagePaintMode.StretchXTileY">
            <summary>
            Image is stretched by the X axis and tiled by the Y one.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ImagePaintMode.StretchYTileX">
            <summary>
            Image is stretched by the Y axis and tiled by the X one.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ImagePaintMode.StretchXYTileInner">
            <summary>
            Inner image segment is tiled while all others are stretched.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ImagePaintMode.Center">
            <summary>
            Image is centered within the paint rectangle.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ImagePaintMode.CenterXStretchY">
            <summary>
            Image is centered by the X axis and stretched by the Y one.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ImagePaintMode.CenterYStretchX">
            <summary>
            Image is centered by the Y axis and stretched by the X one.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ImagePaintMode.CenterXTileY">
            <summary>
            Image is centered by the X axis and tiled by the Y one.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ImagePaintMode.CenterYTileX">
            <summary>
            Image is centered by the Y axis and tiled by the X one.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ImagePaintMode.Tile">
            <summary>
            Image is tiled within the paint rectangle.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ImagePaintMode.TileFlipX">
            <summary>
            Image is flipped by the X axis and tiled within the paint rectangle.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ImagePaintMode.TileFlipXY">
            <summary>
            Image is flipped by the X and Y axis and tiled within the paint rectangle.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ImagePaintMode.TileFlipY">
            <summary>
            Image is flipped by the Y axis and tiled within the paint rectangle.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadImageSegment.Segment">
            <summary>
            Gets the segment associated with this object.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadImageSegment.ImagePart">
            <summary>
            Gets or sets the image part associated with this object.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadImageShape">
            <summary>
            Represents an image which may be divided in 9 different segments where only the inner one is stretched within the paint rectangle.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadImageShape.RotateFlip">
            <summary>
            Gets or sets the RotateFlipType value that defines additional transform on the rendered image.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadImageShape.InterpolationMode">
            <summary>
            Gets or sets the interpolation mode to be applied on the device context when image is rendered.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadImageShape.VisibleSegments">
            <summary>
            Determines which segments from the image will be painted.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadImageShape.UseSegments">
            <summary>
            Determines whether the image will be rendered using segments.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadImageShape.PaintMode">
            <summary>
            Gets or sets the mode to be used when image is painted.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadImageShape.Image">
            <summary>
            Gets or sets the image to be rendered.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadImageShape.SvgImage">
            <summary>
            Gets or sets the SVG image to be rendered.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadImageShape.ImageStream">
            <summary>
            Gets or sets the string representation of the 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadImageShape.Alpha">
            <summary>
            Gets or sets the opacity of the rendered image. Valid values are within the interval [0, 1].
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadImageShape.Margins">
            <summary>
            Gets or sets the Padding structure that defines the margins of the segmented image.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadImageShape.Padding">
            <summary>
            Gets or sets the Padding structure that defines offset when the image is rendered to the destination rectangle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Shapes.PathElementShape.SerializeProperties">
            <summary>Serializes properties. Required for telerik serialization mechanism.</summary>
        </member>
        <member name="M:Telerik.WinControls.Shapes.PathElementShape.DeserializeProperties(System.String)">
            <summary>Deserializes properties. Required for telerik deserialization mechanism.</summary>
        </member>
        <member name="T:Telerik.WinControls.RoundRectShape">
            <summary>Represents round rectangle shape.</summary>
        </member>
        <member name="M:Telerik.WinControls.RoundRectShape.#ctor">
            <summary>Initializes a new instance of the RoundRectShape class.</summary>
        </member>
        <member name="M:Telerik.WinControls.RoundRectShape.#ctor(System.ComponentModel.IContainer)">
            <summary>Initializes a new instance of the RoundRectShape class.</summary>
        </member>
        <member name="M:Telerik.WinControls.RoundRectShape.#ctor(System.Int32)">
            <summary>Initializes a new instance of the RoundRectShape class using a radius.</summary>
        </member>
        <member name="M:Telerik.WinControls.RoundRectShape.#ctor(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance of the RoundRectShape class using a radius and rounded corners.</summary>
        </member>
        <member name="P:Telerik.WinControls.RoundRectShape.Radius">
            <summary><para>Gets or sets the radius of the shape.</para></summary>
        </member>
        <member name="P:Telerik.WinControls.RoundRectShape.BottomLeftRounded">
            <summary>
            Gets or sets value indicating whether the bottom left corner of the shape should be round
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RoundRectShape.TopLeftRounded">
            <summary>
            Gets or sets value indicating whether top left corner of the shape should be round
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RoundRectShape.BottomRightRounded">
            <summary>
            Gets or sets value indicating whether bottom right corner of the shape should be round
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RoundRectShape.TopRightRounded">
            <summary>
            Gets or sets value indicating whether top right corner of the shape should be round
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RoundRectShape.CreatePath(System.Drawing.RectangleF)">
            <summary>Greates round rectangle like path.</summary>
        </member>
        <member name="M:Telerik.WinControls.RoundRectShape.SerializeProperties">
            <summary>Serializes properties. Required for telerik serialization mechanism.</summary>
        </member>
        <member name="M:Telerik.WinControls.RoundRectShape.DeserializeProperties(System.String)">
            <summary>Deserializes properties. Required for telerik deserialization mechanism.</summary>
        </member>
        <member name="M:Telerik.WinControls.IComponentTreeHandler.GetAmbientPropertyValue(Telerik.WinControls.RadProperty)">
            <summary>
            Returns the value for some ambient properties like BackColor, ForelColor, Font, etc.
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.IComponentTreeHandler.OnAmbientPropertyChanged(Telerik.WinControls.RadProperty)">
            <summary>
            Updates after a change in an ambient property like BackColor, ForeColor, Font, etc.
            </summary>
            <param name="property"></param>
        </member>
        <member name="T:Telerik.WinControls.RadElementTree">
            <summary>
            Represents RadElementTree. Every Telerik control has a corresponding tree of
            RadElements. This gives a lot of flexibility in building controls allowing, for
            example, inheritance of properties from the ancenstor nodes.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElementTree.#ctor(Telerik.WinControls.IComponentTreeHandler)">
            <summary>Initializes a new instance of RadElementTree class.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadElementTree.RootElement">
            <summary>Gets the RootElement of the tree.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadElementTree.Control">
            <summary>Gets or sets the RadControl for the corresponding tree.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadElementTree.ComponentTreeHandler">
            <summary>Gets the bridge between the abstract RadElement layout and the RadControl instance.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadElementTree.TreeName">
            <summary>Gets the tree name.</summary>
        </member>
        <member name="M:Telerik.WinControls.RadElementTree.GetElementAtPoint``1(System.Drawing.Point)">
            <summary>
            Gets the element of specific type at specific coordinates if it handles the mouse input.
            </summary>
            <param name="point">Element location in control coordinates</param>
            <returns>The element if successfull, otherwise null</returns>
        </member>
        <member name="M:Telerik.WinControls.RadElementTree.GetElementAtPoint(System.Drawing.Point)">
            <summary>
            Gets the element at specific coordinates if it handles the mouse input.
            </summary>
            <param name="point">Element location in control coordinates</param>
            <returns>The element if successfull, otherwise null</returns>
        </member>
        <member name="M:Telerik.WinControls.RadElementTree.GetElementAtPoint(System.Drawing.Point,System.Predicate{Telerik.WinControls.RadElement})">
            <summary>
            Gets the element at specific coordinates if it meets the predicate criteria.
            </summary>
            <param name="point">Element location in control coordinates</param>
            <param name="predicate">Specify a predicate or null if the first element should be returned.</param>
            <returns>The element if successfull, otherwise null</returns>
        </member>
        <member name="M:Telerik.WinControls.RadElementTree.GetPreferredSize(System.Drawing.Size,System.Drawing.Size)">
            <summary>
            Retrieves the size of a rectangular area into which a control can be
            fitted. This override is called only when AutoSize is true.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ShouldSerializePropertyEventHandler">
            <summary>
            An event handler used to control whether to serialize given property.
            </summary>
            <param name="sender">The sender(an instance of the RadObject class).</param>
            <param name="args">The event arguments.</param>
        </member>
        <member name="T:Telerik.WinControls.ShouldSerializePropertyEventArgs">
            <summary>
            Event arguments used in the <see cref="E:Telerik.WinControls.RadObject.ShouldSerializePropertyHandler"/> event.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ShouldSerializePropertyEventArgs.#ctor(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.ShouldSerializePropertyEventArgs"/> class.
            </summary>
            <param name="property"></param>
        </member>
        <member name="P:Telerik.WinControls.ShouldSerializePropertyEventArgs.ShouldSerialize">
            <summary>
            Determines whether to serialize the property. If the value is not set the default serialization mechanism will be applied.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ShouldSerializePropertyEventArgs.Property">
            <summary>
            Gets the property that is about to be serialized.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.PropertyChangeBehavior">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.PropertyChangeBehaviorCollection">
            <summary>
            Represents a collection of PropertyChangeBahavior instances.
            See also RadElement.AddBehavior
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RoundedCornersStyle">
            <summary>
            An enumeration that defines options for form round corners in Windows 11.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RoundedCornersStyle.Default">
            <summary>
            Let the system decide whether or not to round window corners.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RoundedCornersStyle.None">
            <summary>
            Never round window corners.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RoundedCornersStyle.Round">
            <summary>
            Round the corners if appropriate.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RoundedCornersStyle.RoundSmall">
            <summary>
            Round the corners if appropriate, with a small radius.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.WindowsSettings">
            <summary>
            A class that defines windows settings related to RadForm and RadControl.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.WindowsSettings.EnableRoundedCornersDefaultValue">
            <summary>
            Gets or sets a value indicating whether to round the corners of RadForms in Windows 11.
            Note that this property is considered only when the operating system is Windows 11.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.WindowsSettings.RoundedCornersStyleDefaultValue">
            <summary>
            Gets or sets a value indicating how to round the corners of RadForms in Windows 11.
            Note that this property is considered only when the operating system is Windows 11.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.WindowsSettings.EnableRoundedCorners">
            <summary>
            Gets or sets a value indicating whether to round the corners of a the form instance that owns these settings.
            Note that this property is considered only when the operating system is Windows 11.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.WindowsSettings.RoundedCornersStyle">
            <summary>
            Gets or sets a value indicating how to round the corners of a the form instance that owns these settings.
            Note that this property is considered only when the operating system is Windows 11.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.WindowsSettings.ShouldApplyRoundedCorners">
            <summary>
            Determines whether to round the corners.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.RoutedEvent">
            <summary>
            Represents a routed event. Routed events can be tunnel or bubble event 
            according to the routed direction of the event.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RoutedEvent.EventName">
            <summary>
            Gets or sets the event name.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RoutedEvent.OwnerType">
            <summary>
            Gets the owner's type.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RaisedRoutedEvent">
            <summary>
            Represents a raised routed event.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RaisedRoutedEvent.#ctor">
            <summary>
            Initializes a new instance of the RaisedRoutedEvent class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RaisedRoutedEvent.#ctor(Telerik.WinControls.RoutedEvent,System.String,Telerik.WinControls.EventBehaviorSenderType,Telerik.WinControls.RoutingDirection)">
            <summary>
            Initializes a new instance of the RaisedRoutedEvent class using
            routed event, event sender, sender's type, and routing direction (tunnel 
            or bubble).
            </summary>
            <param name="routedEvent"></param>
            <param name="sender"></param>
            <param name="senderType"></param>
            <param name="direction"></param>
        </member>
        <member name="P:Telerik.WinControls.RaisedRoutedEvent.RoutedEvent">
            <summary>
            Gets or sets a value indicating the routed event.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RaisedRoutedEvent.RoutedEventFullName">
            <summary>
            Gets or sets a string value indicating the routed event name.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RaisedRoutedEvent.SenderType">
            <summary>
            Gets or sets the sender's type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RaisedRoutedEvent.Sender">
            <summary>
            Gets or sets the sender.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RaisedRoutedEvent.Direction">
            <summary>
            Gets or sets the routing direction - tunnel or bubble.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RaisedRoutedEvent.IsSameEvent(Telerik.WinControls.RadElement,Telerik.WinControls.RoutedEventArgs)">
            <summary>
            Compares the instance with the other event arguments and the sender of the event.
            </summary>
            <param name="senderElement"></param>
            <param name="eventArgs"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RaisedRoutedEvent.IsSameEvent(Telerik.WinControls.RaisedRoutedEvent)">
            <summary>
            Compares the instance with another event passed as a parameter.
            </summary>
            <param name="targetEvent"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.RoutingDirection">
            <summary>
            Defines the routing directions for an events.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RoutingDirection.Tunnel">
            <summary>
            Indicates a tunnel event.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RoutingDirection.Bubble">
            <summary>
            Indicates a bubble event.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RoutedEventArgs">
            <summary>
            Represents event arguments for a routed event.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RoutedEventArgs.#ctor(System.EventArgs,Telerik.WinControls.RoutedEvent)">
            <summary>
            Initializes a new instance of the RoutedEventArgs class using EventsArgs to 
            initializes its base class and the RoutedEvent.
            </summary>
            <param name="args"></param>
            <param name="routedEvent"></param>
        </member>
        <member name="P:Telerik.WinControls.RoutedEventArgs.OriginalEventArgs">
            <summary>
            Gets or sets the original EventArgs.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RoutedEventArgs.RoutedEvent">
             <summary>
            Gets or sets a value indicating the RoutedEvent. 
             </summary>
        </member>
        <member name="P:Telerik.WinControls.RoutedEventArgs.Canceled">
            <summary>
            Gets or sets a value indicating whether the event is canceled.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RoutedEventArgs.Direction">
            <summary>
            Gets or sets a value indicating the routing direction for the event.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RoutedEventBehaviorCollection">
            <summary>
            A collection of the RoutedEventBehavior objects. Used by the StyleSheet system.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ImageDrawType">
            <summary>
            An enumeration that defines whether an Image or a RadSvgImage will be painted.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadSvgImage.Width">
            <summary>
            Gets or sets the default width of the SVG image.
            Note that if you set negative value or null, the default width of the <see cref="T:Telerik.WinControls.Svg.SvgDocument"/> will be returned when accessing the property.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadSvgImage.Height">
            <summary>
            Gets or sets the default height of the SVG image.
            Note that if you set negative value or null, the default height of the <see cref="T:Telerik.WinControls.Svg.SvgDocument"/> will be returned when accessing the property.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadSvgImage.Size">
            <summary>
            Gets or sets the default size of the SVG image.
            If this property is not modified it takes the value from the <see cref="T:Telerik.WinControls.Svg.SvgDocument"/>.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadSvgImage.FromXml(System.String)">
            <summary>
            Creates a <see cref="T:Telerik.WinControls.RadSvgImage"/> from the specified XML string.
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadSvgImage.FromFile(System.String)">
            <summary>
            Creates a <see cref="T:Telerik.WinControls.RadSvgImage"/> from the specified file.
            </summary>
            <param name="filename">A string that contains the name of the file from which to create the <see cref="T:Telerik.WinControls.RadSvgImage"/>.</param>
            <returns>The <see cref="T:Telerik.WinControls.RadSvgImage"/> this method creates.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadSvgImage.FromStream(System.IO.Stream)">
            <summary>
            Creates a <see cref="T:Telerik.WinControls.RadSvgImage"/> from the specified data stream.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> that contains the data for this <see cref="T:Telerik.WinControls.RadSvgImage"/>.</param>
            <returns>The <see cref="T:Telerik.WinControls.RadSvgImage"/> this method creates.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadSvgImage.FromByteArray(System.Byte[])">
            <summary>
            Creates a <see cref="T:Telerik.WinControls.RadSvgImage"/> from the specified byte array.
            </summary>
            <param name="bytes">A byte array that contains the data for this <see cref="T:Telerik.WinControls.RadSvgImage"/>.</param>
            <returns>The <see cref="T:Telerik.WinControls.RadSvgImage"/> this method creates.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadSvgImage.GetRasterImage(System.Boolean)">
            <summary>
            Returns a raster <see cref="T:System.Drawing.Bitmap"/> with the default width and height for the loaded SVG document.
            </summary>
            <param name="cache">Determines whether to cache the raster image. Default value is true.</param>
            <returns>The raster image.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadSvgImage.GetRasterImage(System.Drawing.Size,System.Boolean)">
            <summary>
            Returns a raster <see cref="T:System.Drawing.Bitmap"/> by given size for the loaded SVG document.
            </summary>
            <param name="size">The size of the SVG document.</param>
            <param name="cache">Determines whether to cache the raster image. Default value is true.</param>
            <returns>The raster image.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadSvgImage.GetRasterImage(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns a raster <see cref="T:System.Drawing.Bitmap"/> by given width and height for the loaded SVG document.
            </summary>
            <param name="width">The width of the raster image.</param>
            <param name="height">The height of the raster image.</param>
            <param name="cache">Determines whether to cache the raster image. Default value is true.</param>
            <returns>The raster image.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadSvgImage.ClearCache">
            <summary>
            Clears all cached raster images.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadSvgImage.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This constructor is called during the deserialization process. 
            https://docs.microsoft.com/en-us/dotnet/api/system.runtime.serialization.iserializable?view=netframework-2.0
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Telerik.WinControls.AnimatedPropertySetting">
            <summary>
            Represets an animated property setting
            </summary>
        </member>
        <member name="M:Telerik.WinControls.AnimatedPropertySetting.#ctor">
            <summary>
            Initializes new instance of <see cref="T:Telerik.WinControls.AnimatedPropertySetting"/>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.AnimatedPropertySetting.#ctor(Telerik.WinControls.RadProperty,System.Int32,System.Int32,System.Object)">
            <summary>
            Initializes new instance of <see cref="T:Telerik.WinControls.AnimatedPropertySetting"/>
            </summary>
            <param name="property">The property to animate.</param>
            <param name="frames">The number of frames.</param>
            <param name="interval">The interval between animation frames.</param>
            <param name="step">The step used to calculate the next value.</param>
        </member>
        <member name="M:Telerik.WinControls.AnimatedPropertySetting.#ctor(Telerik.WinControls.RadProperty,System.Object,System.Object,System.Int32,System.Int32)">
            <summary>
            Initializes new instance of <see cref="T:Telerik.WinControls.AnimatedPropertySetting"/>
            </summary>
            <param name="property">The property to animate.</param>
            <param name="startValue">The start value.</param>
            <param name="endValue">The end value.</param>
            <param name="frames">The number of frames.</param>
            <param name="interval">The interval between animation frames.</param>
        </member>
        <member name="P:Telerik.WinControls.AnimatedPropertySetting.Property">
            <summary>
            Gets or sets the property that will be animated.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.AnimatedPropertySetting.StartValue">
            <summary>
            Gets or sets the start value for the animation.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.AnimatedPropertySetting.EndValue">
            <summary>
            Gets or sets the end value for the animation.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.AnimatedPropertySetting.MaxValue">
            <summary>
            Gets or sets the maximum allowed value when using OutElastic mode
            </summary>
        </member>
        <member name="P:Telerik.WinControls.AnimatedPropertySetting.Step">
            <summary>
            Gets or sets the step used when calculating the next value.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.AnimatedPropertySetting.NumFrames">
            <summary>
            Gets or sets the number of frames in which the animation will run.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.AnimatedPropertySetting.Interval">
            <summary>
            Gets or sets the interval between animation frames.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.AnimatedPropertySetting.ApplyDelay">
            <summary>
            Gets or sets a value indicating the time delay before starting the animation.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.AnimatedPropertySetting.RandomDelay">
            <summary>
            Gets or sets a value indicating whether to set a random delay before starting the animation. 
            The random delay applies if the value of this property is different from 0.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.AnimatedPropertySetting.ApplyEasingType">
            <summary>
            Gets or sets the easing to be used when applying animation values.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.AnimatedPropertySetting.RemoveAfterApply">
            <summary>
            Gets or sets a value that determines whether the animation value remains applied after the animation finishes.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.AnimatedPropertySetting.AnimationsEnabled">
            <summary>
            Static value indicating whether animations are enabled at global level.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.AnimatedPropertySetting.AnimationFinished">
            <summary>
            Occurs when the animation finishes.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.AnimatedPropertySetting.AnimationStarted">
            <summary>
            Occurs when the animation starts.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationValueBoolCalculator">
            <summary>
            Calculates int values for property animation.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationValueCalculator">
            <summary>
            Calculates values used in each frame of property animation.
            Also supports converting animation step values to and from a string for 
            theme serialization.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)">
            <summary>
            Calculates the animated value from start value, end value, current value, 
            current frame, total number of frames and the specified animation calulator.
            </summary>
            <param name="startValue"></param>
            <param name="endValue"></param>
            <param name="currValue"></param>
            <param name="step"></param>
            <param name="currFrameNum"></param>
            <param name="totalFrameNum"></param>
            <param name="calc"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueCalculator.CalculateInversedStep(System.Object)">
            <summary>
            
            </summary>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueCalculator.ConvertAnimationStepToString(System.Object)">
            <summary>
            Retrieves the animation step as a string value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueCalculator.ConvertToAnimationStepFromString(System.String)">
            <summary>
            Converts a string to an animation value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)">
            <summary>
            Calculates the animation step from start value, end value, and the total number of frames.
            </summary>
            <param name="animationStartValue"></param>
            <param name="animationEndValue"></param>
            <param name="numFrames"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimationEndValue(System.Object,System.Object,System.Int32)">
            <summary>
            Calculates the animation end value from start value, step, and the total number of frames.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationValueCalculatorFactory">
            <summary>
            Represents a map of CLR types and corresponding <see cref="T:Telerik.WinControls.AnimationValueCalculator"/> type using when property animation is running and
            for animations serialization in themes.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationValueColorCalculator">
            <summary>
            Animates color values using ColorAnimationStep objects.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationValueDoubleCalculator">
            <summary>
            Calculates double values for the property animation.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationValueFloatCalculator">
            <summary>
            Calculates float values for the property animation.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationValueFontCalculator">
            <summary>
            Calculates Font values for property animation, using FontAnimationStep values.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationValueIntCalculator">
            <summary>
            Calculates int values for property animation.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationValuePaddingCalculator">
            <summary>
            Calculates animation rectangle values.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationValuePointCalculator">
            <summary>
            Represents a value point animation calculator.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationValuePointFCalculator">
            <summary>
            Represents a value point animation calculator using floating point values.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationValueRectangleCalculator">
            <summary>
            Calculates animation rectangle values.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationValueSizeCalculator">
            <summary>
            Represents a value size animation calculator.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationValueSizeFCalculator">
             <summary>
            Represents a value size animation calculator using floating point values.
             </summary>
        </member>
        <member name="T:Telerik.WinControls.EasingCalculator">
            <summary>
            Represents a numerical value calculator. It is used internally by StyleSheet 
            system to calculate the value changes when animating RadElement properties.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.EasingCalculator.CalculateCurrentValue(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the current value of some property from the initial value, end value, current frame, and the numbers of frames.
            </summary>
            <param name="initialValue"></param>
            <param name="endValue"></param>
            <param name="currentFrame"></param>
            <param name="numFrames"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.EasingCalculator.CalculateCurrentValue(System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            Calculates the current value of some property from the initial value, end value, current frame, and the number of frames.
            </summary>
            <param name="initialValue"></param>
            <param name="endValue"></param>
            <param name="currentFrame"></param>
            <param name="numFrames"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.EasingCalculator.CalculateCurrentValue(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Caclulates the current value of a property from the initial value, end value, current frame, and the number of frames.
            </summary>
            <param name="initialValue"></param>
            <param name="endValue"></param>
            <param name="currentFrame"></param>
            <param name="numFrames"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.AnimatorStyles">
            <summary>
            Defines the time of the animation occurrence. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.AnimatorStyles.DoNotAnimate">
            <summary>
            Indicates that no animation is played.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.AnimatorStyles.AnimateWhenApply">
            <summary>
            Indicates that animation is played on applying a setting.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.AnimatorStyles.AnimateWhenUnapply">
            <summary>
            Indicates that animation is played on up-apply a setting.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.AnimatorStyles.AnimateAlways">
            <summary>
            Indicates that animation is always played.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.LoopType">
            <summary>
            Defines the possible types of animation looping.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.LoopType.None">
            <summary>
            No animation looping is enabled.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.LoopType.Standard">
            <summary>
            The animation is started from the beginning after it ends.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.LoopType.Reversed">
            <summary>
            The animation is started again, whereby
            end and start values are swapped.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadAnimationType">
            <summary>
            Defines the animation type.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadAnimationType.ByStep">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadAnimationType.ByStartEndValues">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadEasingType">
            <summary>
            Defines the easing equations for the easing animations.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationStatusEventArgs">
            <summary>
            Contains information about the way Animation has finished
            </summary>
        </member>
        <member name="P:Telerik.WinControls.AnimationStatusEventArgs.IsInterrupt">
            <summary>
            Gets value indicating whether the animation has been interrupted by another one.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.AnimationStatusEventArgs.RegisterValueAsLocal">
            <summary>
            Gets value indicating whether the animation has been interrupted by another one.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.AnimationStatusEventArgs.Element">
            <summary>
            Gets the element (if it exists) associated with the specified animation.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.AnimationStatusEventArgs.Object">
            <summary>
            Gets the object associated with the specified animation.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationStartedEventHandler">
            <summary>
            AnimationStartedEventHandler delegate
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Telerik.WinControls.AnimationFinishedEventHandler">
            <summary>
            AnimationFinishedEventHandler delegate
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Telerik.WinControls.WindowAnimation.AnimationEventHandler">
            <summary>
            Event raised during animation notifying the new size for the panel
            </summary>
            <param name="sender">the object sending the notification</param>
            <param name="e">the new size for the window collasping/expanding </param>
        </member>
        <member name="E:Telerik.WinControls.WindowAnimation.AnimationEngine.AnimationFinished">
            <summary>
            Event raised when animation is finished
            </summary>
        </member>
        <member name="E:Telerik.WinControls.WindowAnimation.AnimationEngine.Animating">
            <summary>
            Event raised in parallel with the executing animation.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.WindowAnimation.WindowAnimationEngine.Minimum">
            <summary>
            Get/Set minimum value allowed for size
            </summary>
        </member>
        <member name="P:Telerik.WinControls.WindowAnimation.WindowAnimationEngine.Maximum">
            <summary>
            Get/Set maximum value allowed for size
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PropertySetting.#ctor">
            <summary>
            Initializes a new instnace of the PropertySetting class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PropertySetting.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instnace of the PropertySetting class by specifying property name and its value.
            </summary>
            <param name="propertyName">A property name.</param>
            <param name="value">A property value.</param>
        </member>
        <member name="M:Telerik.WinControls.PropertySetting.#ctor(Telerik.WinControls.RadProperty,System.Object)">
            <summary>
            Initializes a new instnace of the PropertySetting class by specifying property and its value.
            </summary>
            <param name="property">A property.</param>
            <param name="value">A property value.</param>
        </member>
        <member name="M:Telerik.WinControls.PropertySetting.#ctor(Telerik.WinControls.PropertySetting)">
            <summary>
            Initializes a new instnace of the PropertySetting class by using an exising property setting instance.
            </summary>
            <param name="setting">An existing property setting.</param>
        </member>
        <member name="F:Telerik.WinControls.PropertySetting.PropertyMapper">
            <summary>
            Gets or sets the property mapper used to map property names based on the stylable element type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.PropertySetting.Name">
            <summary>
            Gets or sets the property name.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.PropertySetting.FullName">
            <summary>
            Gets or sets the full property name (including the class name).
            </summary>
        </member>
        <member name="P:Telerik.WinControls.PropertySetting.Value">
            <summary>
            Gets or sets the property value.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.PropertySetting.EndValue">
            <summary>
            Gets or sets the property end value (creates an animated property setting).
            </summary>
        </member>
        <member name="P:Telerik.WinControls.PropertySetting.AnimatedSetting">
            <summary>
            Gets an instance of <see cref="T:Telerik.WinControls.AnimatedPropertySetting"/> related with this setting.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.PropertySetting.Property">
            <summary>
            Gets the associated RadProperty.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PropertySetting.GetCurrentValue(Telerik.WinControls.RadObject)">
            <summary>
            Gets the current property value for the specified <see cref="T:Telerik.WinControls.RadObject"/>
            </summary>
            <param name="forObject">The object.</param>
            <returns>The current property value for the object.</returns>
        </member>
        <member name="M:Telerik.WinControls.PropertySetting.ApplyValue(Telerik.WinControls.RadObject)">
            <summary>
            Applies the property setting on the specified element.
            </summary>
            <param name="element">An instance of  <see cref="T:Telerik.WinControls.RadObject"/></param>
        </member>
        <member name="M:Telerik.WinControls.PropertySetting.UnapplyValue(Telerik.WinControls.RadObject)">
            <summary>
            Unapplies the property setting from the specified element.
            </summary>
            <param name="element">An instance of  <see cref="T:Telerik.WinControls.RadObject"/></param>
        </member>
        <member name="M:Telerik.WinControls.PropertySetting.FindProperty(System.Type,System.String,System.Boolean)">
            <summary>
            Resolves the <see cref="T:Telerik.WinControls.RadProperty"/> object based on its arguments.
            </summary>
            <param name="currentType">The type which owns this property.</param>
            <param name="propertyName">The property name.</param>
            <param name="fallback">Specifies whether to search base classes if the current type does not contain the specified property.</param>
            <returns>An instance of <see cref="T:Telerik.WinControls.RadProperty"/> if successful.</returns>
        </member>
        <member name="M:Telerik.WinControls.PropertySettingGroup.#ctor">
            <summary>
            Initializes a new instance of the PropertySettingGroup class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PropertySettingGroup.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PropertySettingGroup class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PropertySettingGroup.#ctor(System.String,Telerik.WinControls.ElementSelector)">
            <summary>
            Initializes a new instance of the PropertySettingGroup class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PropertySettingGroup.#ctor(System.String,Telerik.WinControls.PropertySetting[])">
            <summary>
            Initializes a new instance of the PropertySettingGroup class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PropertySettingGroup.#ctor(System.String,Telerik.WinControls.Condition,Telerik.WinControls.PropertySetting[])">
            <summary>
            Initializes a new instance of the PropertySettingGroup class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PropertySettingGroup.#ctor(System.Type,Telerik.WinControls.PropertySetting[])">
            <summary>
            Initializes a new instance of the PropertySettingGroup class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PropertySettingGroup.#ctor(System.Type,Telerik.WinControls.Condition,Telerik.WinControls.PropertySetting[])">
            <summary>
            Initializes a new instance of the PropertySettingGroup class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PropertySettingGroup.#ctor(Telerik.WinControls.PropertySettingGroup)">
            <summary>
            Initializes a new instance of the PropertySettingGroup class by using an existing instance.
            </summary>
            <param name="sourceGroup">The PropertySettingGroup to be used as a source.</param>
        </member>
        <member name="P:Telerik.WinControls.PropertySettingGroup.BasedOn">
            <summary>
            Gets or sets value indicating the key of a repository item which this group is based on.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.PropertySettingGroup.Selector">
            <summary>
            Gets the <see cref="T:Telerik.WinControls.ElementSelector"/> for this property setting group.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.PropertySettingGroup.PropertySettings">
            <summary>
            Gets a collection of the property settings for the property setting group.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.PropertySettingGroup.Repositories">
            <summary>
            Gets a collection of repository settings for the property setting group.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PropertySettingGroup.Apply(Telerik.WinControls.RadObject)">
            <summary>
            Applies the property settings contained in this group to the specified element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Telerik.WinControls.PropertySettingGroup.FindSetting(Telerik.WinControls.RadProperty)">
            <summary>
            Searches for a property setting for the specified property.
            </summary>
            <param name="property">The property to search for</param>
            <returns>An instance of <see cref="T:Telerik.WinControls.PropertySetting"/> if successfull.</returns>
        </member>
        <member name="M:Telerik.WinControls.PropertySettingGroup.FindSetting(System.String)">
            <summary>
            Searches for a property setting for the specified property.
            </summary>
            <param name="name">The name of the property to search for</param>
            <returns>An instance of <see cref="T:Telerik.WinControls.PropertySetting"/> if successfull.</returns>
        </member>
        <member name="M:Telerik.WinControls.ElementSelector.#ctor">
            <summary>
            Initializes a new instance of the ElementSelector class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ElementSelector.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ElementSelector class by specifying element state.
            Sets thw type property to VisualStateSelector.
            </summary>
            <param name="elementState">The element state.</param>
        </member>
        <member name="M:Telerik.WinControls.ElementSelector.#ctor(Telerik.WinControls.ElementSelectorTypes,System.String)">
            <summary>
            Initializes a new instance of the ElementSelector class by specifying selector properties.
            </summary>
            <param name="type">The selector type.</param>
            <param name="value">The selector value</param>
        </member>
        <member name="M:Telerik.WinControls.ElementSelector.#ctor(Telerik.WinControls.ElementSelector)">
            <summary>
            Initializes a new instance of the ElementSelector class by using an existing one.
            </summary>
            <param name="selector">The ElementSelector to be used as a source.</param>
        </member>
        <member name="P:Telerik.WinControls.ElementSelector.Value">
            <summary>
            Gets or sets the selector value.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ElementSelector.Type">
            <summary>
            Gets or sets the selector type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ElementSelector.ChildSelector">
            <summary>
            Gets or sets the child selector.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ElementSelector.IsCompatible(Telerik.WinControls.RadObject)">
            <summary>
            Determines whether the selector is compatible with the specified element.
            </summary>
            <param name="element">The element to compare with.</param>
            <returns>true if the element is compatible.</returns>
        </member>
        <member name="M:Telerik.WinControls.ElementSelector.IsValid(Telerik.WinControls.RadObject,System.String)">
            <summary>
            Determines whether the selector is valid an element with specific state.
            </summary>
            <param name="testElement">The element to compare with.</param>
            <param name="state">The element state.</param>
            <returns>true if the selector is valid.</returns>
        </member>
        <member name="M:Telerik.WinControls.ElementSelector.IsCompatible(Telerik.WinControls.ElementSelector)">
            <summary>
            Determines whether the selector is compatible with specific selector.
            </summary>
            <param name="selector">The selector.</param>
            <returns>true if successfull.</returns>
        </member>
        <member name="M:Telerik.WinControls.StyleGroup.#ctor">
            <summary>
            Initializes a new instance of the StyleGroup class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.StyleGroup.#ctor(Telerik.WinControls.StyleRegistration)">
            <summary>
            Initializes a new instance of the StyleGroup class by adding a default style registration.
            </summary>
            <param name="registration">The default style registration.</param>
        </member>
        <member name="M:Telerik.WinControls.StyleGroup.#ctor(System.String)">
            <summary>
            Initializes a new instance of the StyleGroup class by specifying an element type.
            Creates a new ElementTypeDefault registration.
            </summary>
            <param name="elementType">The element type.</param>
        </member>
        <member name="M:Telerik.WinControls.StyleGroup.#ctor(Telerik.WinControls.StyleGroup)">
            <summary>
            Initializes a new instance of the StyleGroup class by using an existing StyleGroup instance.
            </summary>
            <param name="styleGroup">The StyleGroup to be used as a source.</param>
        </member>
        <member name="P:Telerik.WinControls.StyleGroup.PropertySettingGroups">
            <summary>
            Gets a collection with property setting groups for the style group.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.StyleGroup.Registrations">
            <summary>
            Gets a collection with style registrations for the style group.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.StyleGroup.IsCompatible(System.String)">
            <summary>
            Determines whether the style group is compatible with the specified control type.
            </summary>
            <param name="controlType">The control type.</param>
            <returns>true if the style group is compatible.</returns>
        </member>
        <member name="M:Telerik.WinControls.StyleGroup.IsCompatible(System.Windows.Forms.Control)">
            <summary>
            Determines whether the style group is compatible with the specified control.
            </summary>
            <param name="control">The control.</param>
            <returns>true if the style group is compatible.</returns>
        </member>
        <member name="M:Telerik.WinControls.StyleGroup.IsCompatible(Telerik.WinControls.IStylableNode)">
            <summary>
            Determines whether the style group is compatible with the specified stylable node.
            </summary>
            <param name="item">The stylable node.</param>
            <returns>true if the style group is compatible.</returns>
        </member>
        <member name="M:Telerik.WinControls.StyleGroup.IsCompatible(Telerik.WinControls.StyleGroup)">
            <summary>
            Determines whether the style group is compatible with the specified style group.
            </summary>
            <param name="dstGroup">The stye group.</param>
            <returns>true if the style group is compatible.</returns>
        </member>
        <member name="M:Telerik.WinControls.StyleGroup.CreateStyleSheet(Telerik.WinControls.RadObject)">
            <summary>
            Creates a new style sheet based on this style group for the specified element.
            </summary>
            <param name="element">The element.</param>
            <returns>An instance of <see cref="T:Telerik.WinControls.StyleSheet"/> if successful.</returns>
        </member>
        <member name="M:Telerik.WinControls.StyleGroup.Combine(Telerik.WinControls.StyleGroup,System.Boolean)">
            <summary>
            Combines the style group with a specified style group by adding its property setting groups.
            </summary>
            <param name="group">style group to combine with.</param>
            <param name="replaceExistingStyles">Specifies whether to replace existing styles.</param>
        </member>
        <member name="M:Telerik.WinControls.StyleGroup.SaveXML(System.String,System.String)">
            <summary>
            Saves all style settings presented in this group in a file with XML formatting.
            </summary>
            <param name="themeName">The theme name to be stored in the file.</param>
            <param name="fileName">The name of the file to be created.</param>
        </member>
        <member name="M:Telerik.WinControls.StyleGroup.CreateTheme(System.String)">
            <summary>
            Creates a new theme which is a cloned version of all styles existing in this style group.
            </summary>
            <param name="name">The name of the new theme.</param>
            <returns>An instance of the Theme class if successfull.</returns>
        </member>
        <member name="M:Telerik.WinControls.StyleRegistration.#ctor">
            <summary>
            Initializes a new instance of the StyleRegistration class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.StyleRegistration.#ctor(System.String)">
            <summary>
            Initializes a new instance of the StyleRegistration class by creating an ElementTypeDefault registration.
            </summary>
            <param name="elementType">The full element type.</param>
        </member>
        <member name="M:Telerik.WinControls.StyleRegistration.#ctor(Telerik.WinControls.StyleRegistration)">
            <summary>
            Initializes a new instance of the StyleRegistration class by using an existing StyleRegistration instance.
            </summary>
            <param name="registration">The StyleRegistration to be used as a source.</param>
        </member>
        <member name="M:Telerik.WinControls.StyleRegistration.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the StyleRegistration class.
            </summary>
            <param name="registrationType">The registration type.</param>
            <param name="elementType">The full element type.</param>
            <param name="controlType">The full control type.</param>
            <param name="elementName">The element name.</param>
            <param name="controlName">The control name.</param>
        </member>
        <member name="P:Telerik.WinControls.StyleRegistration.RegistrationType">
            <summary>
            Gets or sets the registration type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.StyleRegistration.ElementType">
            <summary>
            Gets or sets the element type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.StyleRegistration.ControlType">
            <summary>
            Gets or sets the control type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.StyleRegistration.ElementName">
            <summary>
            Gets or sets the element name.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.StyleRegistration.ControlName">
            <summary>
            Gets or sets the control name.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.StyleRegistration.IsCompatible(System.Windows.Forms.Control)">
            <summary>
            Determines whether the style registration is valid for the specified control.
            </summary>
            <param name="control">The control to check.</param>
            <returns>true if the style registration is compatible.</returns>
        </member>
        <member name="M:Telerik.WinControls.StyleRegistration.FindCompatibleChild(Telerik.WinControls.IStylableNode)">
            <summary>
            Checks whether the style registration contains a style for a child element of the specified stylable node.
            </summary>
            <param name="node">The <see cref="T:Telerik.WinControls.IStylableNode"/> to check.</param>
            <returns>true if this style registration is compatible.</returns>
        </member>
        <member name="M:Telerik.WinControls.StyleRegistration.IsCompatible(System.String)">
            <summary>
            Determines whether the style registration is valid for the specified control type.
            </summary>
            <param name="controlType">The control type to check.</param>
            <returns>true if the style registration is compatible.</returns>
        </member>
        <member name="M:Telerik.WinControls.StyleRegistration.IsCompatible(Telerik.WinControls.IStylableNode)">
            <summary>
            Determines whether the style registration is valid for the specified stylable node.
            </summary>
            <param name="item">The stylable node to check.</param>
            <returns>true if the style registration is compatible.</returns>
        </member>
        <member name="M:Telerik.WinControls.StyleRegistration.IsCompatible(Telerik.WinControls.StyleRegistration)">
            <summary>
            Determines whether the style registration is compatible with existing style registration.
            </summary>
            <param name="registration">The style registration to check.</param>
            <returns>true if the style registration is compatible.</returns>
        </member>
        <member name="M:Telerik.WinControls.StyleRepository.#ctor">
            <summary>
            Initializes a new instance of the StyleRepository class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.StyleRepository.#ctor(System.String)">
            <summary>
            Initializes a new instance of the StyleRepository class and specifies the repository key.
            </summary>
            <param name="key">The repository key.</param>
        </member>
        <member name="M:Telerik.WinControls.StyleRepository.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the StyleRepository class and specifies its main properties.
            </summary>
            <param name="itemType">The style repository type. It can be: Border, Gradient, Image and Layout</param>
            <param name="name">The repository name.</param>
            <param name="key">The repository key.</param>
        </member>
        <member name="M:Telerik.WinControls.StyleRepository.#ctor(Telerik.WinControls.StyleRepository)">
            <summary>
             Initializes a new instance of the StyleRepository class by using an existigng instance.
            </summary>
            <param name="repository">The StyleRepository to be used as a source</param>
        </member>
        <member name="P:Telerik.WinControls.StyleRepository.ItemType">
            <summary>
            Gets or sets the repository type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.StyleRepository.Name">
            <summary>
            Gets or sets the repository name.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.StyleRepository.Key">
            <summary>
            Gets or sets the repository key.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.StyleRepository.Settings">
            <summary>
            Gets a collection containing the repository settings.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.StyleRepository.Initialize">
            <summary>
            Initializes the repository and maps its properties.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.StyleRepository.FindSetting(System.String)">
            <summary>
            Searches for a specific property setting in the repository.
            </summary>
            <param name="name">The property name to search for.</param>
            <returns>An instance of <see cref="T:Telerik.WinControls.PropertySetting"/> </returns>
        </member>
        <member name="M:Telerik.WinControls.StyleRepository.FindSetting(Telerik.WinControls.RadProperty)">
            <summary>
            Searches for a specific property setting in the repository.
            </summary>
            <param name="property">The property to search for.</param>
            <returns>An instance of <see cref="T:Telerik.WinControls.PropertySetting"/> </returns>
        </member>
        <member name="M:Telerik.WinControls.Theme.#ctor">
            <summary>
            Initializes a new instance of the Theme class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Theme.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Theme class.
            </summary>
            <param name="name">The name of the theme.</param>
        </member>
        <member name="P:Telerik.WinControls.Theme.Name">
            <summary>
            Gets or sets the name of the theme.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Theme.StyleGroups">
            <summary>
            Gets a collection containing the style groups for the theme.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Theme.Repositories">
            <summary>
            Gets a collection containing the repositiories for the theme.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Theme.FindStyleGroup(System.String)">
            <summary>
            Searches for a StyleGroup based on the control type.
            </summary>
            <param name="controlType">The control type to search for.</param>
            <returns>An instance of <see cref="T:Telerik.WinControls.StyleGroup"/> if successfull.</returns>
        </member>
        <member name="M:Telerik.WinControls.Theme.FindStyleGroup(System.Windows.Forms.Control)">
            <summary>
            Searches for a StyleGroup for a specified control.
            </summary>
            <param name="control">The control to search for.</param>
            <returns>An instance of <see cref="T:Telerik.WinControls.StyleGroup"/> if successfull.</returns>
        </member>
        <member name="M:Telerik.WinControls.Theme.FindStyleGroup(Telerik.WinControls.IStylableNode)">
            <summary>
            Searches for a StyleGroup for a specified stylable node.
            </summary>
            <param name="item">The stylable node to search for.</param>
            <returns>An instance of <see cref="T:Telerik.WinControls.StyleGroup"/> if successfull.</returns>
        </member>
        <member name="M:Telerik.WinControls.Theme.FindRepository(System.String)">
            <summary>
            Searches for a StyleRepository based on its key.
            </summary>
            <param name="key">The repository key to search for.</param>
            <returns>An instance of <see cref="T:Telerik.WinControls.StyleRepository"/> if successfull</returns>
        </member>
        <member name="M:Telerik.WinControls.Theme.MergeRepositories">
            <summary>
            Relates repositories with style groups.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Theme.IsCompatible(System.String)">
            <summary>
            Determines whether this theme is compatible with the specified theme name.
            </summary>
            <param name="themeName">Theme name to compare with.</param>
            <returns>true if successfull.</returns>
        </member>
        <member name="P:Telerik.WinControls.Theme.DesignTimeVisible">
            <summary>
            Gets or sets a value indicating whether the theme should be visible at design time. This property value is not serialized.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Theme.ReadTSSP(System.String)">
            <summary>
            Creates a new theme by reading a TSSP file.
            </summary>
            <param name="filePath">The file location.</param>
            <returns>An instance of <see cref="T:Telerik.WinControls.Theme"/> if successfull.</returns>
        </member>
        <member name="M:Telerik.WinControls.Theme.ReadXML(System.String)">
            <summary>
            Creates a new theme by reading an XML file.
            </summary>
            <param name="filePath">The file location.</param>
            <returns>An instance of <see cref="T:Telerik.WinControls.Theme"/> if successfull.</returns>
        </member>
        <member name="M:Telerik.WinControls.Theme.ReadCSS(System.String)">
            <summary>
            Creates a new theme by reading a CSS like file.
            </summary>
            <param name="filePath">The file location.</param>
            <returns>An instance of <see cref="T:Telerik.WinControls.Theme"/> if successfull.</returns>
        </member>
        <member name="M:Telerik.WinControls.Theme.ReadCSSText(System.String)">
            <summary>
            Creates a new theme by reading a CSS like formatted text.
            </summary>
            <param name="text">The text containing a theme in CSS style syntax.</param>
            <returns>An instance of <see cref="T:Telerik.WinControls.Theme"/> if successfull.</returns>
        </member>
        <member name="M:Telerik.WinControls.Theme.ReadFile(System.String)">
            <summary>
            Creates a new theme by reading a file. The function determines the correct file format by using file extension.
            </summary>
            <param name="filePath">The file location.</param>
            <returns>An instance of <see cref="T:Telerik.WinControls.Theme"/> if successfull.</returns>
        </member>
        <member name="M:Telerik.WinControls.Theme.ReadResource(System.Reflection.Assembly,System.String)">
            <summary>
            Creates a new theme by loading it from a resource. The function determines the correct file format by using file extension.
            </summary>
            <param name="resourceAssembly">The assembly to load from.</param>
            <param name="resourcePath">The location of the resource.</param>
            <returns>An instance of <see cref="T:Telerik.WinControls.Theme"/> if successfull.</returns>
        </member>
        <member name="M:Telerik.WinControls.Theme.Clone">
            <summary>
            Creates a new cloned version of the class.
            </summary>
            <returns>A new instance of the Theme class</returns>
        </member>
        <member name="M:Telerik.WinControls.Theme.Combine(Telerik.WinControls.Theme,System.Boolean,System.Boolean)">
            <summary>
            Combines two themes.
            </summary>
            <param name="theme">The source theme.</param>
            <param name="mergeRepositories">Determines whether to merge repositories.</param>
            <param name="replaceExistingStyles">Determines whether to replace existing styles.</param>
        </member>
        <member name="M:Telerik.WinControls.StyleSheet.#ctor">
            <summary>
            Initializes a new instance of the StyleSheet class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.StyleSheet.PropertySettingGroups">
            <summary>
            Gets a collection of the property setting groups for the property setting group.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.StyleSheet.Apply(Telerik.WinControls.RadObject,System.Boolean)">
            <summary>
            Applies contained property setting groups, if their conditions are ture.
            </summary>
            <param name="radObject">The element.</param>
            <param name="initializing">Specifies whether to apply initial condition if the element is in other state.</param>
        </member>
        <member name="P:Telerik.WinControls.ThemeRepository.ControlDefault">
            <summary>
            Gets or sets the default control theme.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ThemeRepository.LoadedThemes">
            <summary>
            Gets a list with all loaded themes.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ThemeRepository.AvailableThemeNames">
            <summary>
            Gets a list with all theme names that are available.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ThemeRepository.FindTheme(System.String)">
            <summary>
            Searches for a theme with specific name.
            </summary>
            <param name="themeName">The theme name to search for.</param>
            <returns>an instance of <see cref="T:Telerik.WinControls.Theme"/> if successfull.</returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeRepository.FindTheme(System.String,System.Boolean)">
            <summary>
            Searches for a theme with specific name.
            </summary>
            <param name="themeName">The theme name to search for.</param>
            <param name="fallbackToControlDefault">Sepecifies whether to fallback to control default theme if no other theme is found.</param>
            <returns>an instance of <see cref="T:Telerik.WinControls.Theme"/> if successfull.</returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeRepository.Add(Telerik.WinControls.Theme)">
            <summary>
            Adds a new theme to the repository.
            </summary>
            <param name="theme">The theme to add.</param>
        </member>
        <member name="M:Telerik.WinControls.ThemeRepository.Add(Telerik.WinControls.Theme,System.Boolean)">
            <summary>
            Adds a new theme to the repository.
            </summary>
            <param name="theme">The theme to add.</param>
            <param name="replaceExistingStyle">Specifies whether to replace all matching styles if a theme with the same name exists.</param>
        </member>
        <member name="M:Telerik.WinControls.ThemeRepository.Remove(System.String)">
            <summary>
            Removes a theme from the repository.
            </summary>
            <param name="themeName">The theme to remove.</param>
        </member>
        <member name="M:Telerik.WinControls.ThemeRepository.RegisterTheme(Telerik.WinControls.RadThemeComponentBase)">
            <summary>
            Registers a theme without loading it.
            </summary>
            <param name="theme">The theme component to register</param>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.LastFocusedElement">
            <summary>
            This property is used internally!
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.CurrentFocusedElement">
            <summary>
            This property is used internally!
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ComponentBehavior.IsFocusWithin(Telerik.WinControls.RadElement)">
            <summary>
            Checks is a given element or any of its descendants contain the focus.
            </summary>
            <param name="element">The element.</param>
            <returns>[true] if the element or any of its children contain focus, [false] otherwise.</returns>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.AllowShowFocusCues">
            <summary>
            Indicates focus cues display, when available, based on the corresponding control type and the current UI state.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ComponentBehavior.FindFormInternal(System.Windows.Forms.Control)">
            <summary>
            This method is used internally.
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.ToolTip">
            <summary>
            Gets the tool tip
            </summary>
            <value>The tool tip.</value>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.ToolTipOffsetY">
            <summary>
            Gets or sets the value of how much the tooltip will be moved on the Y coordinate
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.ToolTipOffsetX">
            <summary>
            Gets or sets the value of how much the tooltip will be moved on the X coordinate
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.ShowItemToolTips">
            <summary>
            Gets or sets a value indicating whether ToolTips are shown for the RadItem objects contained in 
            the RadControl.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.ShowScreenTipsBellowControl">
            <summary>
            Gets or sets value indicating whether the control should show all screen tips under the control client rectangle, as required for the RibbonBar control, for example
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.Shortcuts">
            <summary>
            Gets the shortcust collection.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.IsKeyMapActive">
            <summary>
            This property is used internally!
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.IsParentFormActive">
            <summary>
            Gets whether this instance of RadControl is on a active form
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.EnableKeyMap">
            <summary>
            Gets or sets whether Key Map (Office 2007 like accelerator keys map)
            is used for this specific control. Currently this option is implemented for 
            the RadRibbonBar control only.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.EnableKeyTips">
            <summary>
            Gets or sets whether Key Tips (Office 2007 like accelerator keys map)
            are used for this specific control.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ComponentBehavior.DisposeKeyTips">
            <summary>
            Clears all resources reserved for the KeyTips functionality
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ComponentBehavior.ProccessKeyMap(System.Windows.Forms.Keys)">
            <summary>
            This method is used internally.
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.MouseOver">
            <summary>
            Determines whether the mouse over the owning IComponentTreeHandler instance.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.ItemCapture">
            <summary>
            Only RadItem should manipulate this property 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.SelectedElement">
            <summary>
            Gets the current selected element (hovered by the mouse).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ComponentInputBehavior.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            This method is used internally.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ComponentInputBehavior.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            This method is used internally.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ComponentInputBehavior.OnKeyDown(Telerik.WinControls.RadElement,System.Windows.Forms.KeyEventArgs)">
            <summary>
            This method is used internally.
            </summary>
            <param name="routedSender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.ComponentInputBehavior.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            This method is used internally.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ComponentInputBehavior.OnKeyPress(Telerik.WinControls.RadElement,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            This method is used internally.
            </summary>
            <param name="routedSender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.ComponentInputBehavior.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            This method is used internally.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.ComponentInputBehavior.OnKeyUp(Telerik.WinControls.RadElement,System.Windows.Forms.KeyEventArgs)">
            <summary>
            This method is used internally.
            </summary>
            <param name="routedSender"></param>
            <param name="e"></param>
        </member>
        <member name="E:Telerik.WinControls.ComponentInputBehavior.HoveredElementChanged">
            <summary>Fires when hovered element is changed.</summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentThemableElementTree.Theme">
            <summary>
            Gets the currently used theme.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentThemableElementTree.ThemeName">
            <summary>
                Gets or sets control's preffered theme name. Themes are stored and retrieved using
                APIs of <see cref="T:Telerik.WinControls.ThemeResolutionService"/>.
            </summary>
            <remarks>
            If <strong>ThemeResolutionService.ApplicatonThemeName</strong> refers to a
            non-empty string, the theme of a RadControl can differ from the one set using
            <strong>RadControls.ThemeName</strong> property. If the themes differ, the
            <strong>RadControls.ThemeName</strong> property will be overridden by
            <strong>ThemeResolutionService.ApplicatonThemeName</strong>. If no theme is registered
            with a name as <strong>ThemeResolutionService.ApplicatonThemeName</strong>, then
            control will revert to the theme specified by its <strong>ThemeName</strong> property.
            If <strong>ThemeName</strong> is assigned to a non-existing theme name, the control may
            have no visual properties assigned, which will cause it look and behave in unexpected
            manner. If <strong>ThemeName</strong> equals empty string, control's theme is set to a
            theme that is registered within <strong>ThemeResolutionService</strong> with the name
            "ControlDefault".
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.ComponentThemableElementTree.ThemeClassName">
            <summary>
            Gets or sets the class name string that ThemeResolutionService will use to find the themes registered for the control.
            </summary>
            <remarks>
            By default the return value is RadControl's type FullName; Some controls like drop down menu has different ThemeClassName
            depending on the runtime usage of the control.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.ComponentThemableElementTree.StyleVersion">
            <summary>
            Gets the version of the style applied to this themable element tree. This property is used internally.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentThemableElementTree.FallbackToControlDefault">
            <summary>
            Gets or sets a value indicating whether to fallback to control default theme if the control does not support the current theme.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ComponentThemableElementTree.SuspendAnimations">
            <summary>
            Suspends the animated property changes for the control. When animation are suspended property changes still occur but without aniumations.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ComponentThemableElementTree.ResumeAnimations">
            <summary>
            Resumes the animated property changes for the conrol. For more info see <see cref="M:Telerik.WinControls.ComponentThemableElementTree.SuspendAnimations"/>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentThemableElementTree.AnimationsEnabled">
            <summary>
            Gets value indicating whether the animated property changes are suspended for the control. Also see <see cref="M:Telerik.WinControls.ComponentThemableElementTree.SuspendAnimations"/>.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.HoveredElementChangedEventHandler">
            <summary>
            Represents the method that will handle the 
            %HoveredElementChanged:HoveredElementChanged% event.
            </summary>
            <param name="source">Initializes the event sender.</param>
            <param name="args">Initializes the %event arguments:HoveredElementChangedEventArgs%.</param>
        </member>
        <member name="T:Telerik.WinControls.HoveredElementChangedEventArgs">
            <summary>
            Represents event data for the HoveredElementChanged event.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.HoveredElementChangedEventArgs.#ctor(Telerik.WinControls.RadElement)">
            <summary>
            Initializes a new instance of the HoveredElementChangedEventArgs class.
            </summary>
            <param name="hoveredElement"></param>
        </member>
        <member name="T:Telerik.WinControls.IItemsControl">
            <summary>
            An interface which provides methods for handling a collection of RadItems.
            This interface is used throughout controls which represent a list of items.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.IItemsControl.ItemSelected">
            <summary>
            Fires when an item has been selected.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.IItemsControl.ItemDeselected">
            <summary>
            Fires when an item has been deselected.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.IItemsControl.GetSelectedItem">
            <summary>
            Returns the selected item in the control.
            </summary>
            <returns>An reference to a RadItem instance which represents
            the currently selected item.</returns>
        </member>
        <member name="M:Telerik.WinControls.IItemsControl.SelectItem(Telerik.WinControls.RadItem)">
            <summary>
            Selects an item in the control.
            </summary>
            <param name="item">A reference to a RadItem instance which 
            represents the item which is to be selected.</param>
        </member>
        <member name="M:Telerik.WinControls.IItemsControl.GetNextItem(Telerik.WinControls.RadItem,System.Boolean)">
            <summary>
            Gets an item from the collection that is next to a certain item.
            </summary>
            <param name="item">The item which neighbour to return.</param>
            <param name="forward">The direction in which to look for the neighbour.</param>
            <returns>A reference to a RadItem instance which represents the neighbour item.</returns>
        </member>
        <member name="M:Telerik.WinControls.IItemsControl.SelectNextItem(Telerik.WinControls.RadItem,System.Boolean)">
            <summary>
            Selects an item from the collection that is next to a certain item.
            </summary>
            <param name="item">The item which neighbour to return.</param>
            <param name="forward">The direction in which to look for the neighbour.</param>
            <returns>A reference to a RadItem instance which represents the neighbour item.</returns>
        </member>
        <member name="M:Telerik.WinControls.IItemsControl.GetFirstVisibleItem">
            <summary>
            Gets the first visible item from the collection.
            In a IItemsControl that is the first item that is visible on the control.
            </summary>
            <returns>A reference to a RadItem instance that represents
            the first visible control.</returns>
        </member>
        <member name="M:Telerik.WinControls.IItemsControl.GetLastVisibleItem">
            <summary>
            Gets the last visible item from the collection.
            In a IItemsControl that is the last item that is visible on the control.
            </summary>
            <returns>A reference to a RadItem instance that represents
            the last visible control.</returns>
        </member>
        <member name="M:Telerik.WinControls.IItemsControl.SelectFirstVisibleItem">
            <summary>
            Selects the first visible item on the IItemsControl.
            </summary>
            <returns>A reference to a RadItem instance that represents the item selected.</returns>
        </member>
        <member name="M:Telerik.WinControls.IItemsControl.SelectLastVisibleItem">
            <summary>
            Selects the last visible item on the IItemsControl.
            </summary>
            <returns>A reference to a RadItem instance that represents the item selected.</returns>
        </member>
        <member name="P:Telerik.WinControls.IItemsControl.ActiveItems">
            <summary>
            Gets a collection containing the items
            that are currently active.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IItemsControl.Items">
            <summary>
            Gets the collection of items associated
            with the IItemsControl.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IItemsControl.RollOverItemSelection">
            <summary>
            Gets or sets a boolean value that determines whether
            the rollover items functionality will be allowed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IItemsControl.ProcessKeyboard">
            <summary>
            Gets or sets a boolean value that determines whether
            keyboard input will be processed by the IItemsControl.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.IItemsControl.CanNavigate(System.Windows.Forms.Keys)">
            <summary>
            Defines whether the IItemsControl can execute navigation
            operation based on the keydata provided.
            </summary>
            <param name="keyData">An instance of the <see cref="T:System.Windows.Forms.Keys"/>
            struct that defines the key command issued.</param>
            <returns>True if navigation possible, otherwise false.</returns>
        </member>
        <member name="M:Telerik.WinControls.IItemsControl.CanProcessMnemonic(System.Char)">
            <summary>
            Defines whether the IItemsControl has an item that
            corresponds to the mnemonic passed in the parameter.
            </summary>
            <param name="keyData">A character that defines the mnemonic command issued.</param>
            <returns>True if mnemonic can be processed, otherwise false.</returns>
        </member>
        <member name="P:Telerik.WinControls.ItemSelectedEventArgs.Item">
            <summary>
            Gets the item affected by the operation.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ItemUpdatedEventArgs">
            <summary>
            Represents event data for the ItemUpdated event.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ItemUpdatedEventArgs.#ctor(Telerik.WinControls.RadItem)">
            <summary>
            Initializes a new instance of the ItemUpdatedEventArgs class using the RadItem.
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:Telerik.WinControls.ItemUpdatedEventArgs.Item">
            <summary>
            Gets the RadItem that is updated.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadItemsControlImpl">
            <summary>
            Represents a encapsulated implementation of the IItemsControl interface.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadLayeredWindow">
            <summary>
            Represents a Win2K+ layered window semantic, which allows for semi-transparent windows.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadLayeredWindow.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadLayeredWindow.CreateParams">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadLayeredWindow.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadLayeredWindow.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:Telerik.WinControls.RadLayeredWindow.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Provides special handling for the WM_MOUSEACTIVATE, WM_PAINT and WM_NCHITTEST messages.
            </summary>
            <param name="m"></param>
        </member>
        <member name="P:Telerik.WinControls.RadLayeredWindow.BackgroundImage">
            <summary>
            Gets or sets the Image that represents the Layered window.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadLayeredWindow.BringToFront(System.Boolean)">
            <summary>
            Brings the window on top of the z-order.
            </summary>
            <param name="activate"></param>
        </member>
        <member name="M:Telerik.WinControls.RadLayeredWindow.SendToBack(System.Boolean)">
            <summary>
            Sends the window to back of the z-order.
            </summary>
            <param name="activate"></param>
        </member>
        <member name="M:Telerik.WinControls.RadLayeredWindow.SuspendUpdates">
            <summary>
            Suspends any Layered-related updates for the window.
            Useful for multiple properties set-up without sequential update for each property change.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadLayeredWindow.ResumeUpdates">
            <summary>
            Resumes previously suspended updates and forces Layered update.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadLayeredWindow.ResumeUpdates(System.Boolean)">
            <summary>
            Resumes previously suspended updates. Optionally preforms Layered update.
            </summary>
            <param name="update"></param>
        </member>
        <member name="M:Telerik.WinControls.RadLayeredWindow.ShowWindow(System.Drawing.Point)">
            <summary>
            Displays the window to user using the specified location and current size.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadLayeredWindow.PaintWindow(System.Drawing.Graphics,System.Drawing.Bitmap)">
            <summary>
            Performs painting of the window.
            Default implementation simply paints the BackgroundImage (if any).
            </summary>
            <param name="g">The graphics to use.</param>
            <param name="graphicsBitmap">The off-screen bitmap instance the graphics is created from.</param>
        </member>
        <member name="P:Telerik.WinControls.RadLayeredWindow.Content">
            <summary>
            Gets the final Bitmap that represents the content of the Layered Window.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadLayeredWindow.UpdateWindow">
            <summary>
            Updates the layered window.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadLayeredWindow.NativeUpdateWindow(System.Drawing.Bitmap)">
            <summary>
            Performs native layered window update, using the Win32 UpdateLayeredWindow API.
            </summary>
            <param name="bmp"></param>
        </member>
        <member name="P:Telerik.WinControls.RadLayeredWindow.RecreateHandleOnSizeChanged">
            <summary>
            Determines whether window's handle will be re-created upon a Size change.
            If the window is large - e.g. 800*600 pixels, 
            applying new size may cause flicker due to the nature of Layered Windows semantic.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadLayeredWindow.Updated">
            <summary>
            Determines whether the window is updated (used UpdateLayeredWindow API).
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadLayeredWindow.Alpha">
            <summary>
            Gets or sets the Alpha (transparency) value - [0, 1] - for the window.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadLayeredWindow.DisplaySize">
            <summary>
            Gets the current size used by the window to visualize itself.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadLayeredWindow.DesiredSize">
            <summary>
            Gets or sets the size of the window.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadLayeredWindow.TopMost">
            <summary>
            Determines whether the window is TopMost (above all floating windows).
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadLayeredWindow.HitTestable">
            <summary>
            Determines whether the Control is visible for mouse input.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadNCEnabledControl">
            <summary>
            This class represents a <see cref="T:Telerik.WinControls.RadControl"/> that allows for non-client area modification and paiting.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ReplaceRadControlProvider">
            <summary>
            This is a helper class which avoids design time error when control design time is opened directly.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ScreenTipNeededEventHandler">
            <summary>
            Represents the method that will handle the ScreenTipNeeded event of a RadControl. 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ScreenTipNeededEventArgs">
            <summary>
            Provides data for the ScreenTipNeeded event. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ScreenTipNeededEventArgs.#ctor(Telerik.WinControls.RadItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.ScreenTipNeededEventArgs"/> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.WinControls.ScreenTipNeededEventArgs.#ctor(Telerik.WinControls.RadElement,System.Drawing.Size)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.ScreenTipNeededEventArgs"/> class.
            </summary>
            <param name="item">The item.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="P:Telerik.WinControls.ScreenTipNeededEventArgs.Item">
            <summary>
            Gets the item for which the ScreenTipNeeded event occurs.
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:Telerik.WinControls.ScreenTipNeededEventArgs.Delay">
            <summary>
            Gets or sets the delay.
            </summary>
            <value>The delay.</value>
        </member>
        <member name="P:Telerik.WinControls.ScreenTipNeededEventArgs.Offset">
            <summary>
            Gets or sets the offset.
            </summary>
            <value>The offset.</value>
        </member>
        <member name="T:Telerik.WinControls.SetValueDelegate">
            <summary>
            
            </summary>
            <param name="dependencyProperty"></param>
            <param name="value"></param>
        </member>
        <member name="T:Telerik.WinControls.ThemeNameChangedEventHandler">
            <summary>
            Represents the method that will handle the ThemeNameChanged event.
            </summary>
            <param name="source">
            Initializes the event sender.
            </param>
            <param name="args">
            Initializes the %event arguments:ThemeNameChangedEventArgs%.
            </param>
        </member>
        <member name="T:Telerik.WinControls.ThemeNameChangedEventArgs">
            <summary>
            Represents the event data for the %ThemeNameChanged:ThemeNameChanged% event.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ThemeNameChangedEventArgs.oldThemeName">
            <summary>
            Represents the old theme name.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ThemeNameChangedEventArgs.newThemeName">
            <summary>
            Represents the new theme name.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ThemeNameChangedEventArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ThemeNameChangedEventArgs class. 
            </summary>
            <param name="oldThemeName">
            Initializes the old theme name.
            </param>
            <param name="newThemeName">
            Initializes the new theme name.
            </param>
        </member>
        <member name="T:Telerik.WinControls.ToolTipTextNeededEventHandler">
            <summary>
            Represents the method that will handle the ToolTipTextNeeded event of a RadCOntrol. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A ToolTipTextNeededEventArgs that contains the event data.</param>
        </member>
        <member name="T:Telerik.WinControls.ToolTipTextNeededEventArgs">
            <summary>
            Provides data for the ToolTipTextNeeded event. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ToolTipTextNeededEventArgs.#ctor(System.Windows.Forms.ToolTip)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.ToolTipTextNeededEventArgs" /> class.
            </summary>
            <param name="toolTip">The tool tip.</param>
        </member>
        <member name="M:Telerik.WinControls.ToolTipTextNeededEventArgs.#ctor(System.Windows.Forms.ToolTip,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.ToolTipTextNeededEventArgs" /> class.
            </summary>
            <param name="toolTip">The tool tip.</param>
            <param name="toolTipText">The tool tip text.</param>
        </member>
        <member name="M:Telerik.WinControls.ToolTipTextNeededEventArgs.#ctor(System.Windows.Forms.ToolTip,System.String,System.Drawing.Size)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.ToolTipTextNeededEventArgs" /> class.
            </summary>
            <param name="toolTip">The tool tip.</param>
            <param name="toolTipText">The tool tip text.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="P:Telerik.WinControls.ToolTipTextNeededEventArgs.ToolTipText">
            <summary>
            Gets or sets the ToolTip text. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ToolTipTextNeededEventArgs.Offset">
            <summary>
            Gets or sets the offset from the Cursor.HotSpot
            </summary>
            <value>The offset.</value>
        </member>
        <member name="P:Telerik.WinControls.ToolTipTextNeededEventArgs.ToolTip">
            <summary>
            Gets the tool tip.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadComponent.ThemeName">
            <summary>
            Gets or sets the theme name of the component.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadComponent.GetOwnedTreeHandler">
            <summary>
            Gets an <see cref="T:Telerik.WinControls.IComponentTreeHandler"/> implementation
            which is owned by this component. This method is used
            by the ThemeNameEditor to prefilter
            the available themes for the current component.
            </summary>
            <returns>An <see cref="T:Telerik.WinControls.IComponentTreeHandler"/> implementation which
            is owned by this <see cref="T:Telerik.WinControls.RadComponent"/>.</returns>
        </member>
        <member name="T:Telerik.WinControls.RadComponentElement">
            <exclude/>
        </member>
        <member name="P:Telerik.WinControls.RadComponentElement.IsDesignMode">
            <summary>
            Gets or sets a value indicating whether design mode is active.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadComponentElement.DataBindings">
            <summary>
            Gets the collection of data-binding objects for this IBindableComponent.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadComponentElement.ComponentElementLastStateKey">
            <summary>
            This constant is used internally.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadNewItemAttribute">
            <summary>
            Represents a new item attribute. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadNewItemAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the RadNewItemAttribute class.
            </summary>
            <param name="newItemName"></param>
            <param name="allowEditItemText"></param>
        </member>
        <member name="M:Telerik.WinControls.RadNewItemAttribute.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the RadNewItemAttribute class.
            </summary>
            <param name="newItemName"></param>
            <param name="allowEditItemText"></param>
            <param name="paintGlyph"></param>
        </member>
        <member name="M:Telerik.WinControls.RadNewItemAttribute.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the RadNewItemAttribute class.
            </summary>
            <param name="newItemName"></param>
            <param name="allowEditItemText"></param>
            <param name="paintGlyph"></param>
            <param name="addMenuVerb"></param>
        </member>
        <member name="P:Telerik.WinControls.RadNewItemAttribute.NewItemName">
            <summary>
            Gets a string representing the new item text.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadNewItemAttribute.AllowEditItemText">
            <summary>
            Gets a value indicating whether the item should be editable.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadNewItemAttribute.PaintGlyph">
            <summary>
            Gets a value indicating whether a glyph should be added.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadNewItemAttribute.AddMenuVerb">
            <summary>
            Gets a value indicating whether a verb should be added.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.DisposableObject">
            <summary>
            Represents a basic object which implements IDisposable interface.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.DisposableObject.GetBitState(System.Int64)">
            <summary>
            Gets the current bit state for the object, defined by the provided key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.DisposableObject.SetBitState(System.Int64,System.Boolean)">
            <summary>
            Applies the specified boolean value to the BitVector of the object.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.WinControls.DisposableObject.OnBitStateChanged(System.Int64,System.Boolean,System.Boolean)">
            <summary>
            Notifies the object for a change in its bit state.
            </summary>
            <param name="key"></param>
            <param name="newValue"></param>
            <param name="oldValue"></param>
        </member>
        <member name="P:Telerik.WinControls.DisposableObject.BitState">
            <summary>
            Gets the RadBitVector64 structure that holds all the bit states of the object.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.DisposableObject.Events">
            <summary>
            Provides a simple list of delegates.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.DisposableObject.IsDisposing">
            <summary>
            Determines whether the object is in a process of being disposed of.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.DisposableObject.IsDisposed">
            <summary>
            Determines whether the object is already disposed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.DisposableObject.Dispose">
            <summary>
            Releases all resources associated with this object.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.DisposableObject.Dispose(System.Boolean)">
            <summary>
            Performs the actual Dispose logic.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Telerik.WinControls.DisposableObject.PerformDispose(System.Boolean)">
            <summary>
            Performs the core resources release logic.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Telerik.WinControls.DisposableObject.DisposeManagedResources">
            <summary>
            Disposes all MANAGED resources - such as Bitmaps, GDI+ objects, etc.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.DisposableObject.DisposeUnmanagedResources">
            <summary>
            Releases any UNMANAGED resources used by this object.
            NOTE: If you declare some unmanaged resources in your class,
            you should override its finalizer and put disposing logic there also.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.PropertyBinding">
            <summary>
            Represents a dependency between two properties.
            Used by a RadObject to bind a RadProperty to an external one and always use its value.
            The binding may be also two-way, in which special case the bound property updates its source.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PropertyBinding.#ctor(Telerik.WinControls.RadObject,Telerik.WinControls.RadProperty,Telerik.WinControls.RadProperty,Telerik.WinControls.PropertyBindingOptions)">
            <summary>
            Initializes a new instance of the RadPropertyBinding class.
            </summary>
            <param name="sourceObject"></param>
            <param name="boundProperty"></param>
            <param name="sourceProperty"></param>
            <param name="options"></param>
        </member>
        <member name="M:Telerik.WinControls.PropertyBinding.GetValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.PropertyBinding.UpdateSourceProperty(System.Object)">
            <summary>
            Updates the binding source property.
            </summary>
            <param name="newValue"></param>
        </member>
        <member name="P:Telerik.WinControls.PropertyBinding.SourceObject">
            <summary>
            Gets the binding source.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.PropertyBoundObject">
            <summary>
            Represents an object which property is bound to some other object's property.
            Stores the object itself and its bound property. Used internally by the DPS to notify
            bound objects for a change in a binding source property.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadObject">
            <summary>
            Base for all TPF classes. Implements WPF-like property system with different value sources.
            Provides public interface for getting, setting value or re-setting property value.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadObject.PropertyChanged">
            <summary>
            Occurs when a property of an object changes.
            Note: if a property which is not a RadProperty changes,
            the developer is responsible for firing this event by using the
            <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> API.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadObject.RadPropertyChanged">
            <summary>
            Occurs when a property of a RadObject changes.		
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadObject.RadPropertyChanging">
            <summary>
            Occurs prior to property of a RadObject changes.        
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadObject.ShouldSerializePropertyHandler">
            <summary>
            Occurs when a property is about to be serialized at design time. 
            Suitable to prevent a default value of being serialized in the parent hierarchy of a <see cref="T:Telerik.WinControls.RadObject"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadObject.ReplaceDefaultDescriptors(System.ComponentModel.PropertyDescriptorCollection)">
            <summary>
            Replaces the default property descriptors of properties of the object in order to perform Rad-Object specific 
            tasks like checking ShouldSerialize and RadProperty-DefaultValue...
            </summary>
            <param name="props"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadObject.DisposeManagedResources">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadObject.ClearPropertyStore">
            <summary>
            Removes all references to external property modifiers such as 
            property bindings, style settings and animations.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadObject.SuspendPropertyNotifications">
            <summary>
            Allows PropertyChanging and PropertyChanged notifications to be temporary suspended.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadObject.ResumePropertyNotifications">
            <summary>
            Resumes property notifications after a previous <see cref="M:Telerik.WinControls.RadObject.SuspendPropertyNotifications">SuspendPropertyNotifications</see> call.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadObject.GetPropertyValue(Telerik.WinControls.RadProperty)">
            <summary>
            Gets the RadPropertyValue structure that holds information
            about the specified property's effective value for this instance.
            May be null if no effective value is recorded.
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadObject.SetDefaultValueOverride(Telerik.WinControls.RadProperty,System.Object)">
            <summary>
            Applies the provided value as an override
            of the Default value provided by the specified property's metadata.
            </summary>
            <param name="property"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadObject.SetPropertyValueSetAtDesignTime(Telerik.WinControls.RadProperty)">
            <summary>
            Marks the current PropertyValue entry for the specified property as "Set at design-time".
            This is used by our custom code-dom serializer to determine which properties needs to be persisted.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.SetValueAtDesignTime(Telerik.WinControls.RadProperty,System.Object)">
            <summary>
            Applies the specified value as Local for the desired property
            and raises the flag IsLocalValueSetAtDesignTime for that property.
            All design-time direct property modifications (e.g. item.Text = "Item1")
            should be done through this method for the property to be properly serialized.
            If a property is modified through a property grid, the custom property descriptor will automatically apply this logic.
            This method is used internally.
            </summary>
            <param name="property"></param>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.GetValue(Telerik.WinControls.RadProperty)">
            <summary>
            Retrieves the current value for the specified property.
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadObject.SetValue(Telerik.WinControls.RadProperty,System.Object)">
            <summary>
            Applies the provided value as Local for the specified property.
            </summary>
            <param name="property"></param>
            <param name="value"></param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadObject.ResetValue(Telerik.WinControls.RadProperty)">
            <summary>
            Resets the current value of the specified property.
            This method will remove any effective value modifier
            (such as style or animation setting) for the specified property.
            </summary>
            <param name="property">The RadProperty that should be reset.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadObject.ResetLocalValue(Telerik.WinControls.RadProperty)">
            <summary>
            Reset the local value of the property.
            </summary>
            <param name="property">The RadProperty to be reset.</param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.ResetValue(Telerik.WinControls.RadProperty,Telerik.WinControls.ValueResetFlags)">
            <summary>
            Resets the current value of the specified property using the provided flags.
            </summary>
            <param name="property">The RadProperty that should be reset.</param>
            <param name="flags">Additional flags that specify which effective modifiers should be reset.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadObject.UpdateValue(Telerik.WinControls.RadProperty)">
            <summary>
            Forces re-evaluation of the current value for the specified property.
            </summary>
            <param name="property"></param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadObject.GetValueSource(Telerik.WinControls.RadProperty)">
            <summary>
            Gets the source of the current value for the specified property.
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadObject.GetRegisteredRadProperty(System.String)">
            <summary>
            Gets the registered property with the specified name.
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadObject.UpdateValueCore(Telerik.WinControls.RadPropertyValue)">
            <summary>
            Performs the core value update logic.
            </summary>
            <param name="propVal"></param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadObject.SetValueCore(Telerik.WinControls.RadPropertyValue,System.Object,System.Object,Telerik.WinControls.ValueSource)">
            <summary>
            Performs the core logic of updating property value.
            </summary>
            <param name="propVal">The property value structure, holding property information.</param>
            <param name="propModifier">Additional modifier, like IPropertySetting</param>
            <param name="newValue">The actual new value to be set, valid for Local and DefaultValue sources.</param>
            <param name="source">Specifies the source of the provided new value.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadObject.ResetValueCore(Telerik.WinControls.RadPropertyValue,Telerik.WinControls.ValueResetFlags)">
            <summary>
            Resets the specified property value, using the provided reset flags.
            </summary>
            <param name="propVal"></param>
            <param name="flags"></param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadObject.GetDefaultValue(Telerik.WinControls.RadPropertyValue,System.Object)">
            <summary>
            Allows inheritors to provide custom default value.
            </summary>
            <param name="propVal"></param>
            <param name="baseDefaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadObject.CoerceValue(Telerik.WinControls.RadPropertyValue,System.Object)">
            <summary>
            Allows inheritors to force a coersion of the current calculated value for the given property.
            </summary>
            <param name="propVal">The property value.</param>
            <param name="baseValue">The current caluclated value of the property.</param>
            <returns>Null if no coersion is needed.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadObject.ShouldSerializeProperty(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Determines whether the property defined by the provided property descriptor should be serialized.
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadObject.ShouldSerializeProperty(Telerik.WinControls.RadProperty)">
            <summary>
            Determines whether the specified RadProperty should be serialized.
            Prevents theme and default values serialization.
            </summary>
            <param name="property">The RadProperty that is about to be serialized.</param>
            <returns>A value indicating whether to serialize the property value.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadObject.EnsurePropertySet(Telerik.WinControls.RadPropertyValue,System.Object)">
            <summary>
            Checks needed conditions to perform property update.
            </summary>
            <param name="propVal"></param>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.RaisePropertyNotifications(Telerik.WinControls.RadPropertyValue,System.Object,System.Object,Telerik.WinControls.ValueSource)">
            <summary>
            Performs the following logic:
            1. Compares oldValue and newValue and returns ValueUpdateResult.NotChanged if they are equal.
            2. Raises the PropertyChanging notification. If the event is canceled returns ValueUpdateResult.Canceled.
            3. Raises PropertyChanged notification and returns ValueUpdateResult.Updated.
            </summary>
            <param name="propVal"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
            <param name="oldSource"></param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="P:Telerik.WinControls.RadObject.PropertyValues">
            <summary>
            Gets a collection containing property values.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadObject.CanRaisePropertyChangeNotifications(Telerik.WinControls.RadPropertyValue)">
            <summary>
            Determines whether the object can raise PropertyChanging and PropertyChanged notifications.
            Current implementation checks whether the object is disposing or is already disposed of.
            </summary>
            <param name="propVal"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadObject.GetCurrentAnimation(Telerik.WinControls.RadProperty)">
            <summary>
            Gets the animation (if any) attached to the current property.
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadObject.OnAnimatedPropertyValueChanged(Telerik.WinControls.AnimatedPropertySetting)">
            <summary>
            Gets notified for a change in an animated property.
            </summary>
            <param name="setting">The property which is currently animated.</param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.BindProperty(Telerik.WinControls.RadProperty,Telerik.WinControls.RadObject,Telerik.WinControls.RadProperty,Telerik.WinControls.PropertyBindingOptions)">
            <summary>
            Binds the specified property to a property of the provided binding source object.
            </summary>
            <param name="propertyToBind">Our property that is about to be bound.</param>
            <param name="sourceObject">The object to which source property belongs.</param>
            <param name="sourceProperty">The property to which we will bind.</param>
            <param name="options">Additional options, specifying the binding operation.</param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.UnbindProperty(Telerik.WinControls.RadProperty)">
            <summary>
            Removes the binding for the specified property.
            </summary>
            <param name="boundProperty"></param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadObject.OnPropertyBoundExternally(Telerik.WinControls.PropertyBinding,Telerik.WinControls.RadObject)">
            <summary>
            Gets notified that the specified object has bound to a property of ours.
            </summary>
            <param name="boundObject">The instance that has bound the specified property.</param>
            <param name="binding"></param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.OnPropertyUnboundExternally(Telerik.WinControls.PropertyBinding,Telerik.WinControls.RadObject)">
            <summary>
            Gets notified that the specified object has unbound itself from a property of ours.
            </summary>
            <param name="boundObject"></param>
            <param name="binding"></param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.OnTwoWayBoundPropertyChanged(Telerik.WinControls.PropertyBinding,System.Object)">
            <summary>
            Notifies a binding source that a change occured in a two-way bound property.
            </summary>
            <param name="binding"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.OnBoundSourcePropertyChanged(Telerik.WinControls.RadProperty)">
            <summary>
            Gets notified for a change in an already bound external property.
            </summary>
            <param name="boundProperty"></param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.RemoveBinding(Telerik.WinControls.RadPropertyValue)">
            <summary>
            Detaches binding reference from the binding source.
            </summary>
            <param name="propVal"></param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.AddStylePropertySetting(Telerik.WinControls.IPropertySetting)">
            <summary>
            Registers a style setting for this instance.
            </summary>
            <param name="setting"></param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.RemoveStylePropertySetting(Telerik.WinControls.IPropertySetting)">
            <summary>
            Called when element style condition changes. This method is used internally.
            </summary>
            <param name="setting"></param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.RemoveStylePropertySetting(Telerik.WinControls.RadProperty)">
            <summary>
            Called when element style condition changes. This method is used internally.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.GetInheritedValue(Telerik.WinControls.RadProperty)">
            <summary>
            Searches up in the chain of InheritanceParents for a value for the specified property.
            </summary>
            <param name="property">The property to examine.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.RadObject.InheritanceParent">
            <summary>
            Gets the RadObject which is treated as the parent from which inheritable properties are composed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadObject.OnPropertyChanging(Telerik.WinControls.RadPropertyChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.WinControls.RadObject.RadPropertyChanging"/> event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.OnPropertyChanged(Telerik.WinControls.RadPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.WinControls.RadObject.PropertyChanged"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.OnNotifyPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">The name of the property.</param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.OnNotifyPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the standard .NET PropertyChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Telerik.WinControls.RadObject.IsDesignMode">
            <summary>
            Determines whether the element is in design mode.
            </summary>
            <summary>
            Gets or sets a value indicating whether design mode is active.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadObject.IsPropertyCancelable(Telerik.WinControls.RadPropertyMetadata)">
            <summary>
            Determines whether the specified property may be canceled.
            </summary>
            <param name="metadata">The metadata associated with the property change.</param>
        </member>
        <member name="P:Telerik.WinControls.RadObject.PropertyFilter">
            <summary>
            Gets or sets a <see cref="T:Telerik.WinControls.Filter">Filter</see> instance, used to filter the ICustomPropertyDescriptor.GetProperties collection.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadObject.RadObjectType">
            <summary>
            Gets the RadObjectType which is associated with this system type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadObject.BindingContext">
            <summary>
            Gets or sets the BindingContext for the object.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadPropertyValue">
            <summary>
            Stores all the information needed for composing a RadProperty's value for a given object.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValue.#ctor(Telerik.WinControls.RadPropertyValue)">
            <summary>
            Internal constructor used to store existing property state.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValue.Dispose">
            <summary>
            Resets all references - such as binding references and property modifiers.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValue.Copy(Telerik.WinControls.RadPropertyValue)">
            <summary>
            Restores the state of this property using the provided source.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValue.AddBoundObject(Telerik.WinControls.PropertyBoundObject)">
            <summary>
            Registers an object which is bound to this property value.
            </summary>
            <param name="relation"></param>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValue.GetCurrentValue(System.Boolean)">
            <summary>
            Gets the current value and optionally forces re-evaluation.
            </summary>
            <param name="composeIfNeeded"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValue.RemoveBoundObject(Telerik.WinControls.RadObject)">
            <summary>
            Removes previously registered bound object.
            </summary>
            <param name="boundObject"></param>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValue.NotifyBoundObjects">
            <summary>
            Notifies all bound objects for a change in this property.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValue.ComposeCurrentValue">
            <summary>
            Forces value composition, using default precedence order.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValue.InvalidateInheritedValue">
            <summary>
            Resets the state of the inherited value.
            </summary>
            <returns>True if the property needs re-evaluation, false otherwise.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValue.SetLocalValue(System.Object)">
            <summary>
            Applies the specified value as local and forces current value re-evaluation.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValue.SetLocalValueFromBinding(System.Object)">
            <summary>
            Applies the specified value as local and forces current value re-evaluation.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValue.SetAnimation(Telerik.WinControls.AnimatedPropertySetting)">
            <summary>
            Applies the specified animation and forces current value re-evaluation.
            </summary>
            <param name="animation"></param>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValue.SetStyle(Telerik.WinControls.IPropertySetting)">
            <summary>
            Applies the specified style setting and forces current value re-evaluation.
            </summary>
            <param name="setting"></param>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValue.SetBinding(Telerik.WinControls.PropertyBinding)">
            <summary>
            Applies the specified binding and forces current value re-evaluation.
            </summary>
            <param name="binding"></param>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValue.IsObjectBound(Telerik.WinControls.RadObject)">
            <summary>
            Determines whether the specified object is already bound.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValue.BeginUpdate(System.Boolean,System.Boolean)">
            <summary>
            Begins an update operation.
            </summary>
            <param name="lockCompose">Value composition will be locked.</param>
            <param name="lockValueUpdate">Specifies that we are currently applying new value.</param>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValue.SetDefaultValueOverride(System.Object)">
            <summary>
            Registers the provided value as a default for the property.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValue.SetCurrentValue(System.Object,Telerik.WinControls.ValueSource)">
            <summary>
            Assigns the specified value and source as current.
            Internally checks for possible coersion.
            </summary>
            <param name="value"></param>
            <param name="source"></param>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValue.GetDefaultValue">
            <summary>
            Retrieves the default value for the property.
            Custom value may be defined, using the DefaultValueCallback
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyValue.HasBoundObjects">
            <summary>
            Determines whether we have objects already bound to this property.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyValue.IsCompositionLocked">
            <summary>
            Determines whether current value composition is currently locked.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyValue.IsUpdatingValue">
            <summary>
            Determines whether we are in a process of updating a modifier.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyValue.Property">
            <summary>
            Gets the index of the associated RadProperty.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyValue.CurrentValue">
            <summary>
            Gets the current value for the property.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyValue.LocalValue">
            <summary>
            Gets the local value for this property.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyValue.BindingLocalValue">
            <summary>
            Gets the value which is set through a two-way property binding.
            This value has higher priority that the local one.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyValue.PropertyBinding">
            <summary>
            Gets the property binding relation for this property.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyValue.AnimationSetting">
            <summary>
            Gets the animation setting (if any) for this property.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyValue.StyleSetting">
            <summary>
            Gets the current style setting for the property.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyValue.AnimatedValue">
            <summary>
            Gets the current animated value.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyValue.ValueSource">
            <summary>
            Gets the source of the current value.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyValue.Metadata">
            <summary>
            Gets the Metadata associated with this property for the current owner.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyValue.IsCurrentValueCoerced">
            <summary>
            The current value is forced to some custom value by a Coerce callback.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyValue.DefaultValueOverride">
            <summary>
            Gets the custom default value associated with this property.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyValue.IsSetAtDesignTime">
            <summary>
            Determines whether the current local value (if any) is set at design-time.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyValue.StyleVersion">
            <summary>
            Gets the current style version
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValue.SetStyleVersion(System.Int32)">
            <summary>
            Sets a new style version for this property value. This method is used internally.
            </summary>
            <param name="newVersion">The new version</param>
        </member>
        <member name="T:Telerik.WinControls.MapPropertyDelegate">
            <summary>
            Allows RadObject inheritors to replace RadProperty instances with another one.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.RadPropertyValueCollection">
            <summary>
            Represents a storage for RadPropertyValue entries, which are accessed by their GlobalIndex property.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValueCollection.ResetLocalProperties">
            <summary>
            Resets all properties with local values. This method is used internally.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyValueCollection.SetLocalValuesAsDefault">
            <summary>
            This method is used internally.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadTypeResolver">
            <summary>
            Used to resolve Telerik types
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadTypeResolver.ResolveTypesInCurrentAssembly">
            <summary>
            Gets or sets value indicating whether the TypeResolver should look up types in the calling assembly only.
            This option (if set to true) is very useful particularly in the case when all the assemblies of the application, including the 
            Telerik assemblies are merged into a single assembly.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadTypeResolver.TypeResolverAssemblyName">
            <summary>
            Gets or sets value indicating the search pattern for assembly in the domain that contains the types referenced in RadControls theme files.
            <remarks>
            By default the types referenced in theme files are contained in assemblies with the name "Telerik"
            </remarks>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadTypeResolver.TypeResolverAssemblyVersion">
            <summary>
            Gets or sets value indicating the version of the assembly specified in TypeResolverAssemblyName
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadTypeResolver.Instance">
            <summary>
            Gets the only instance of the resolver.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.#ctor(Telerik.WinControls.RadItemOwnerCollection)">
            <summary>
                <para>
                  Initializes a new instance of <see cref='T:Telerik.WinControls.RadItemCollection'/> based on another <see cref='T:Telerik.WinControls.RadItemCollection'/>.
               </para>
            </summary>
            <param name='value'>
                  A <see cref='T:Telerik.WinControls.RadItemCollection'/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.#ctor(Telerik.WinControls.RadItem[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref='T:Telerik.WinControls.RadItemCollection'/> containing any array of <see cref='T:Telerik.WinControls.RadElement'/> objects.
               </para>
            </summary>
            <param name='value'>
                  A array of <see cref='T:Telerik.WinControls.RadElement'/> objects with which to intialize the collection
            </param>
        </member>
        <member name="P:Telerik.WinControls.Elements.RadItemReadOnlyCollection.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref='T:Telerik.WinControls.RadElement'/>.</para>
            </summary>
            <param name='index'><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='index'/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.Contains(Telerik.WinControls.RadItem)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref='T:Telerik.WinControls.RadItemCollection'/> contains the specified <see cref='T:Telerik.WinControls.RadElement'/>.</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.RadElement'/> to locate.</param>
            <returns>
            <para><see langword='true'/> if the <see cref='T:Telerik.WinControls.RadElement'/> is contained in the collection; 
              otherwise, <see langword='false'/>.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.CopyTo(Telerik.WinControls.RadItem[],System.Int32)">
            <summary>
            <para>Copies the <see cref='T:Telerik.WinControls.RadItemCollection'/> values to a one-dimensional <see cref='T:System.Array'/> instance at the 
               specified index.</para>
            </summary>
            <param name='array'><para>The one-dimensional <see cref='T:System.Array'/> that is the destination of the values copied from <see cref='T:Telerik.WinControls.RadItemCollection'/> .</para></param>
            <param name='index'>The index in <paramref name='array'/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref='T:System.ArgumentException'><para><paramref name='array'/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref='T:Telerik.WinControls.RadItemCollection'/> is greater than the available space between <paramref name='index'/> and the end of <paramref name='array'/>.</para></exception>
            <exception cref='T:System.ArgumentNullException'><paramref name='array'/> is <see langword='null'/>. </exception>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='index'/> is less than <paramref name='array'/>'s lowbound. </exception>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.IndexOf(Telerik.WinControls.RadItem)">
            <summary>
               <para>Returns the index of a <see cref='T:Telerik.WinControls.RadElement'/> in 
                  the <see cref='T:Telerik.WinControls.RadItemCollection'/> .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.RadElement'/> to locate.</param>
            <returns>
            <para>The index of the <see cref='T:Telerik.WinControls.RadElement'/> of <paramref name='value'/> in the 
            <see cref='T:Telerik.WinControls.RadItemCollection'/>, if found; otherwise, -1.</para>
            </returns>
        </member>
        <member name="T:Telerik.WinControls.Elements.RadItemReadOnlyCollection.RadItemReadOnlyEnumerator">
            <summary>
            Represents an element enumerator. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.RadItemReadOnlyEnumerator.#ctor(Telerik.WinControls.Elements.RadItemReadOnlyCollection)">
            <summary>
            Initializes a new instance of the RadElementEnumerator class.
            </summary>
            <param name="mappings"></param>
        </member>
        <member name="P:Telerik.WinControls.Elements.RadItemReadOnlyCollection.RadItemReadOnlyEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Elements.RadItemReadOnlyCollection.RadItemReadOnlyEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.RadItemReadOnlyEnumerator.MoveNext">
            <summary>
            Moves to the next element in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.RadItemReadOnlyEnumerator.System#Collections#IEnumerator#MoveNext">
            <summary>
            Moves to the the next element of the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.RadItemReadOnlyEnumerator.Reset">
            <summary>
            Resets the enumerator position.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.RadItemReadOnlyEnumerator.System#Collections#IEnumerator#Reset">
            <summary>
            Resets the enumerator position.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.RadItemReadOnlyEnumerator.System#IDisposable#Dispose">
            <summary>
            Disposes the enumeration.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.ToArray">
            <summary>Retrieves an array of the items in the collection.</summary>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.Sort">
            <summary>
            <para>Sorts the elements in the entire <see cref='T:Telerik.WinControls.RadElementCollection'/> using the IComparable implementation of each element.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.Sort(System.Collections.IComparer)">
            <summary>
            <para>Sorts the elements in the entire <see cref='T:Telerik.WinControls.RadElementCollection'/> using the specified comparer.</para>
            </summary>
            <param name="comparer">The IComparer implementation to use when comparing elements.</param>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            <para>Sorts the elements in a range of elements in <see cref='T:Telerik.WinControls.RadElementCollection'/> using the specified comparer.</para>
            </summary>
            <param name="index">The zero-based starting index of the range to sort. </param>
            <param name="count">The length of the range to sort. </param>
            <param name="comparer">The IComparer implementation to use when comparing elements.</param>
        </member>
        <member name="T:Telerik.WinControls.Elements.ClickCommand">
            <summary>
            Represents a click command.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Elements.IItemsOwner">
            <summary>
            Exposes the Items property for accessing a collection of the items in a
            combobox.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Elements.IItemsOwner.Items">
            <summary>
            Gets a collection representing the collection of the items contained 
            in this ComboBox. 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.MeasurementControl">
            <summary>
            Represents per-thread static instance of special RadControl, which may be used for explicit measure of RadElement instance.
            This functionality is required for example in the RadComboBox, when we need to calculate the size of the drop-down before it is displayed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.MeasurementControl.GetDesiredSize(Telerik.WinControls.RadElement,System.Drawing.SizeF)">
            <summary>
            Gets the element's desired size, using the specified available.
            </summary>
            <param name="element"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.MeasurementControl.ThreadInstance">
            <summary>
            Gets the instance of the measurement tree (valid per UI thread)
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadElementZOrderCollection">
            <summary>
            Represents a collection which stores RadElement instances
            and is sorted by ZIndex property of each element.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElementZOrderCollection.OnElementZIndexChanged(Telerik.WinControls.RadElement)">
            <summary>
            The collection gets notified for a change in the ZIndex of the specified property.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElementZOrderCollection.OnElementVisibilityChanged(Telerik.WinControls.RadElement)">
            <summary>
            The collection gets notified for a change in the Visibility property of the specified element.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElementZOrderCollection.SendToBack(Telerik.WinControls.RadElement)">
            <summary>
            Puts the specified element at the beginning of the collection
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElementZOrderCollection.BringToFront(Telerik.WinControls.RadElement)">
            <summary>
            Puts the specified element at the end of the collection
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElementZOrderCollection.FindInsertIndex(Telerik.WinControls.RadElement)">
            <summary>
            Finds the insert index for the specified element.
            Since the collection is sorted by each element's Z-index, 
            we perform a binary search to determine at which position the element should be inserted.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElementZOrderCollection.CompareElements(Telerik.WinControls.RadElement,Telerik.WinControls.RadElement)">
            <summary>
            Compares two elements by their z-index first
            and if they equals, the index in their Parent collection is used.
            </summary>
            <param name="el1"></param>
            <param name="el2"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.RadElementZOrderCollection.LayoutableCount">
            <summary>
            Gets the count of all elements, which visibility is not ElementVisibility.Collapsed.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ItemsChangeOperation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.Inserting">
            <summary>
            Indicates that an insert operation will commence.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.Inserted">
            <summary>
            Indicates that an insert operation is performed.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.Removing">
            <summary>
            Indicates that a remove operation will commence.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.Removed">
            <summary>
            Indicates that a remove operation is performed.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.Setting">
            <summary>
            Indicates that an item is going to be set
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.Set">
            <summary>
            Indicates that an item is set
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.Clearing">
            <summary>
            Indicates that the items will be cleared
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.Cleared">
            <summary>
            Indicates that the items are cleared
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.Sorting">
            <summary>
            Indicates that the items will be sorted
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.Sorted">
            <summary>
            Indicates that the items are sorted
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.BatchInsert">
            <summary>
            Indicates that a number of items were added to the collection via the AddRange method
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ItemChangedDelegate">
            <summary>
            Represents the method that will handle the %ItemChanged:ItemChanged% event.
            </summary>
            <param name="changed"></param>
            <param name="target"></param>
            <param name="operation"></param>
        </member>
        <member name="T:Telerik.WinControls.RadItemCollection">
            <summary>
                <para>
                  A collection that stores <see cref='T:Telerik.WinControls.RadItem'/> objects.
               </para>
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItemCollection.ItemsChanged">
            <summary>
            Fires when item is changed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.#ctor">
            <summary>Initializes a new instance of the RadItemCollectionBase class.</summary>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.#ctor(Telerik.WinControls.RadItemCollection)">
            <summary>
                <para>
                  Initializes a new instance of RadItemCollection based on another RadItemCollection.
               </para>
            </summary>
            <param name='value'>
                  A RadItemCollection from which the contents are copied.
            </param>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.#ctor(Telerik.WinControls.RadItem[])">
            <summary>
                <para>
                  Initializes a new instance of RadItemCollection containing any array of <see cref='T:Telerik.WinControls.RadItem'/> objects.
               </para>
            </summary>
            <param name='value'>
                  A array of <see cref='T:Telerik.WinControls.RadItem'/> objects with which to intialize the collection
            </param>
        </member>
        <member name="P:Telerik.WinControls.RadItemCollection.ItemTypes">
            <summary>
            Gets or sets an array of the items' types in the collection.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItemCollection.ExcludedTypes">
            <summary>
            Gets or sets an array of the excluded items' types for this collection.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItemCollection.SealedTypes">
            <summary>
            Gets or sets an array of the sealed items' types for this collection. 
            That are types that are allowed but not their descendants.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.GetEnumerator">
            <summary>
               <para>Returns an enumerator that can iterate through 
                  the RadItemCollection .</para>
            </summary>
            <returns><para>None.</para></returns>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.Add(Telerik.WinControls.RadItem)">
            <summary>
               <para>Adds a <see cref='T:Telerik.WinControls.RadItem'/> with the specified value to the 
               Telerik.WinControls.RadItemCollection .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.RadItem'/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.AddRange(Telerik.WinControls.RadItem[])">
            <summary>
            <para>Copies the elements of an array to the end of the RadItemCollection.</para>
            </summary>
            <param name='value'>
               An array of type <see cref='T:Telerik.WinControls.RadItem'/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.AddRange(Telerik.WinControls.RadItemCollection)">
            <summary>
                <para>
                  Adds the contents of another RadItemCollection to the end of the collection.
               </para>
            </summary>
            <param name='value'>
               A RadItemCollection containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.Insert(System.Int32,Telerik.WinControls.RadItem)">
            <summary>
            <para>Inserts a <see cref='T:Telerik.WinControls.RadItem'/> into the RadItemCollection at the specified index.</para>
            </summary>
            <param name='index'>The zero-based index where <paramref name='value'/> should be inserted.</param>
            <param name=' value'>The <see cref='T:Telerik.WinControls.RadItem'/> to insert.</param>
            <returns><para>None.</para></returns>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.Remove(Telerik.WinControls.RadItem)">
            <summary>
               <para> Removes a specific <see cref='T:Telerik.WinControls.RadItem'/> from the 
               RadItemCollection .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.RadItem'/> to remove from the RadItemCollection .</param>
            <returns><para>None.</para></returns>
            <exception cref='T:System.ArgumentException'><paramref name='value'/> is not found in the Collection. </exception>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.Sort">
            <summary>
            <para>Sorts the elements in the entire <see cref='T:Telerik.WinControls.RadElementCollection'/> using the IComparable implementation of each element.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.Sort(System.Collections.IComparer)">
            <summary>
            <para>Sorts the elements in the entire <see cref='T:Telerik.WinControls.RadElementCollection'/> using the specified comparer.</para>
            </summary>
            <param name="comparer">The IComparer implementation to use when comparing elements.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            <para>Sorts the elements in a range of elements in <see cref='T:Telerik.WinControls.RadElementCollection'/> using the specified comparer.</para>
            </summary>
            <param name="index">The zero-based starting index of the range to sort. </param>
            <param name="count">The length of the range to sort. </param>
            <param name="comparer">The IComparer implementation to use when comparing elements.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.Contains(Telerik.WinControls.RadItem)">
            <summary>
            <para>Gets a value indicating whether the 
               RadItemCollection contains the specified <see cref='T:Telerik.WinControls.RadItem'/>.</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.RadItem'/> to locate.</param>
            <returns>
            <para><see langword='true'/> if the <see cref='T:Telerik.WinControls.RadItem'/> is contained in the collection; 
              otherwise, <see langword='false'/>.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.IndexOf(Telerik.WinControls.RadItem)">
            <summary>
               <para>Returns the index of a <see cref='T:Telerik.WinControls.RadItem'/> in 
                  the RadItemCollection .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.RadItem'/> to locate.</param>
            <returns>
            <para>The index of the <see cref='T:Telerik.WinControls.RadItem'/> of <paramref name='value'/> in the 
            RadItemCollection, if found; otherwise, -1.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.CopyTo(Telerik.WinControls.RadItem[],System.Int32)">
            <summary>
            <para>Copies the RadItemCollection values to a one-dimensional <see cref='T:System.Array'/> instance at the 
               specified index.</para>
            </summary>
            <param name='array'><para>The one-dimensional <see cref='T:System.Array'/> that is the destination of the values copied from RadItemCollection .</para></param>
            <param name='index'>The index in <paramref name='array'/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref='T:System.ArgumentException'><para><paramref name='array'/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the RadItemCollection is greater than the available space between <paramref name='index'/> and the end of <paramref name='array'/>.</para></exception>
            <exception cref='T:System.ArgumentNullException'><paramref name='array'/> is <see langword='null'/>. </exception>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='index'/> is less than <paramref name='array'/>'s lowbound. </exception>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.ToArray">
            <summary>Retrieves an array of the items in the collection.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadItemCollection.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref='T:Telerik.WinControls.RadItem'/>.</para>
            </summary>
            <param name='index'><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='index'/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="P:Telerik.WinControls.RadItemCollection.Item(System.String)">
            <summary>
            Gets the first found item, with Name property equal to itemName specified, case-sensitive.
            </summary>
            <param name="itemName">item Name</param>
            <returns>RadItem if found, null (Nothing in VB.NET) otherwise</returns>
        </member>
        <member name="T:Telerik.WinControls.RadItemCollection.RadItemEnumerator">
            <summary>
            Represents an element enumerator. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.RadItemEnumerator.#ctor(Telerik.WinControls.RadItemCollection)">
            <summary>
            Initializes a new instance of the RadElementEnumerator class.
            </summary>
            <param name="mappings"></param>
        </member>
        <member name="P:Telerik.WinControls.RadItemCollection.RadItemEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItemCollection.RadItemEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.RadItemEnumerator.MoveNext">
            <summary>
            Moves to the next element in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.RadItemEnumerator.System#Collections#IEnumerator#MoveNext">
            <summary>
            Moves to the the next element of the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.RadItemEnumerator.Reset">
            <summary>
            Resets the enumerator position.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.RadItemEnumerator.System#Collections#IEnumerator#Reset">
            <summary>
            Resets the enumerator position.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.RadItemEnumerator.System#IDisposable#Dispose">
            <summary>
            Disposes the enumeration.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.BorderDrawModes">
            <summary>
            Defines the order in which border lines are drawn.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ControlHelper">
            <summary>
            Encapsulates common mothods related with Control Tree.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ControlHelper.BringToFront(System.IntPtr,System.Boolean)">
            <summary>
            Brings the window on top of the z-order.
            </summary>
            <param name="handle"></param>
            <param name="activate"></param>
        </member>
        <member name="M:Telerik.WinControls.ControlHelper.SendToBack(System.IntPtr,System.Boolean)">
            <summary>
            Sends the 
            </summary>
            <param name="handle"></param>
            <param name="activate"></param>
        </member>
        <member name="M:Telerik.WinControls.ControlHelper.InvalidateNonClient(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Forces the non-client area of the specified Control instance to be re-evaluated.
            </summary>
            <param name="frame"></param>
            <param name="activate"></param>
        </member>
        <member name="M:Telerik.WinControls.ControlHelper.IsDescendant(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            Determines whether the specified Child is contained within the specified Parent's Control Tree.
            </summary>
            <param name="parent"></param>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ControlHelper.GetFocusedControl">
            <summary>
            Gets the Control instance that currently contains the Keyboard focus.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ControlHelper.GetControlStyle(System.Windows.Forms.Control,System.Windows.Forms.ControlStyles)">
            <summary>
            Determines whether the specified ControlStyle is applied to the provided control.
            </summary>
            <param name="instance"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ControlHelper.BeginUpdate(System.Windows.Forms.Control)">
            <summary>
            Sends a WM_SETREDRAW message to the control, preventing any paint operation afterwards.
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Telerik.WinControls.ControlHelper.EndUpdate(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Resumes Control's painting, previously suspended by a BeginUpdate call.
            </summary>
            <param name="control"></param>
            <param name="invalidate"></param>
        </member>
        <member name="M:Telerik.WinControls.ControlHelper.FilterChildControls(System.Windows.Forms.Control,Telerik.WinControls.Filter,System.Boolean)">
            <summary>
            Enumerates the Control tree, starting from the provided parent as a root,
            and collects all the child controls that match the specified filter.
            </summary>
            <param name="parent"></param>
            <param name="filter"></param>
            <param name="recursive"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ControlHelper.GetNextControl``1(System.Windows.Forms.Control,``0,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets the Control of type T that is descendant of the specified parent and is anchored to the specified current T instance.
            </summary>
            <typeparam name="T">A Control of Type T.</typeparam>
            <param name="parent">The parent control, which descendants are to be examined.</param>
            <param name="curr">The current T instance to start the search from.</param>
            <param name="recursive">True to perform depth-first traversal of the Control Tree, false to look-up direct children only.</param>
            <param name="forward">True to search for a T instance that is next to the current specified one, false to search for a T instance that is previous to the current specified one.</param>
            <param name="wrap">True to start the search from the beginning when end of the search is reached.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ControlHelper.GetFirstControl``1(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Gets the first Control of Type T, which is descendant of the specified Parent.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parent"></param>
            <param name="recursive"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ControlHelper.GetLastControl``1(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Gets the last Control of Type T, which is descendant of the specified Parent.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parent"></param>
            <param name="recursive"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ControlHelper.GetChildControls``1(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Collects all child controls of given type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parent"></param>
            <param name="recursive"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ControlHelper.EnumChildControls(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Enumerates all child controls of the specified parent and optionally traverses the entire tree using Depth-first approach.
            </summary>
            <param name="parent"></param>
            <param name="recursive"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ControlHelper.EnumChildControls(System.Windows.Forms.Control,System.Boolean,System.Predicate{System.Windows.Forms.Control})">
            <summary>
            Enumerates all child controls of the specified parent and optionally traverses the entire tree using Depth-first approach.
            </summary>
            <param name="parent"></param>
            <param name="recursive"></param>
            <param name="parentFilter"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ControlHelper.FindAncestor``1(System.Windows.Forms.Control)">
            <summary>
            Searches up the parent chain of controls, looking for an ancestor of the specified type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ControlHelper.FindDescendant``1(System.Windows.Forms.Control)">
            <summary>
            Searches down the control tree, using breadth-first approach, for a descendant of the specified type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.ImageHelper">
            <summary>
            Provides common helper methods related with image manipulation.
            TODO: Should be moved to base assembly, making it accessible for all Telerik Assemblies.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ImageHelper.Crop(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Crops recatnalge from image 
            </summary>
            <param name="image">An instance of <see cref="T:System.Drawing.Bitmap"/>.</param>
            <param name="cropRectangle">An instance of <see cref="T:System.Drawing.Rectangle"/></param>
            <returns>Cropped image with the size of cropped rectangle</returns>
        </member>
        <member name="M:Telerik.WinControls.ImageHelper.GetClipboardImage">
            <summary>
            Gets image from the clipboard and preserves pixel transparency. If there is no image data in the clipboard, returns null.
            </summary>
            <returns>The image from clipboard.</returns>
        </member>
        <member name="M:Telerik.WinControls.ImageHelper.CopyImageToClipboard(System.Drawing.Image)">
            <summary>
            Copies given image to the clipboard. Different applications understand different image formats, 
            so this method applies the three most common image formats to the data object - Bitmap, PNG and DIB.
            </summary>
            <param name="image">The image to copy.</param>
        </member>
        <member name="M:Telerik.WinControls.ImageHelper.ConvertToDib(System.Drawing.Image)">
            <summary>
            Converts the image to Device Independent Bitmap format of type BITFIELDS.
            This is (wrongly) accepted by many applications as containing transparency
            </summary>
            <param name="image">Image to convert to DIB</param>
            <returns>The image converted to DIB, in bytes.</returns>
        </member>
        <member name="M:Telerik.WinControls.ImageHelper.GetClipboardImage(System.Windows.Forms.DataObject)">
            <summary>
            Retrieves an image from the given clipboard data object, in the order PNG, DIB, Bitmap, Image object.
            </summary>
            <param name="clipboardData">The clipboard data.</param>
            <returns>The extracted image, or null if no supported image type was found.</returns>
        </member>
        <member name="M:Telerik.WinControls.ImageHelper.GetImageData(System.Drawing.Bitmap,System.Int32@)">
            <summary>
            Gets the raw bytes from an image.
            </summary>
            <param name="sourceImage">The image to get the bytes from.</param>
            <param name="stride">Stride of the retrieved image data.</param>
            <returns>The raw bytes of the image</returns>
        </member>
        <member name="M:Telerik.WinControls.ImageHelper.BuildImage(System.Byte[],System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.Drawing.Color[],System.Nullable{System.Drawing.Color})">
            <summary>
            Creates a bitmap based on data, width, height, stride and pixel format.
            </summary>
            <param name="sourceData">Byte array of raw source data</param>
            <param name="width">Width of the image</param>
            <param name="height">Height of the image</param>
            <param name="stride">Scanline length inside the data</param>
            <param name="pixelFormat">Pixel format</param>
            <param name="palette">Color palette</param>
            <param name="defaultColor">Default color to fill in on the palette if the given colors don't fully fill it.</param>
            <returns>The new image</returns>
        </member>
        <member name="T:Telerik.WinControls.ReflectionHelper">
            <summary>
            Encapsulates common functionality related with reflection-based operations such as Cloning, Field Copying, etc.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ReflectionHelper.CopyFields``1(``0,``0)">
            <summary>
            Copies all the fields, which are not marked by the [NonSerialized] attribute and are not Delegate instances,
            from the source object to the target one. Reference type fields will be copied by reference rather than cloned.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="target"></param>
            <param name="source"></param>
        </member>
        <member name="M:Telerik.WinControls.ReflectionHelper.Clone``1(``0)">
            <summary>
            Creates a new instance of type T and copies its fields from the provided source instance.
            Reference type fields will be copied by reference rather than cloned.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.IRadCloneable">
            <summary>
            An extended interface that supports some additional notifications sent by the ReflectionHelper.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.IRadCloneable.OnFieldsCopied">
            <summary>
            The instance gets notified for a field copy process.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.IRadCloneable.OnCloneComplete">
            <summary>
            The instance gets notified for a clone complete process.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ResourceHelper">
            <summary>
            Defines helper methods for manipulating assembly resources.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ResourceHelper.ImageFromResource(System.Type,System.String)">
            <summary>
            Creates a new Image instance from the specified embedded resource for the specified type.
            </summary>
            <param name="type"></param>
            <param name="resourceName"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ResourceHelper.CursorFromResource(System.Type,System.String)">
            <summary>
            Creates a new Cursor instance from the specified embedded resource for the specified type.
            </summary>
            <param name="type"></param>
            <param name="resourceName"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.TelerikHelper.GetThemeName(Telerik.WinControls.RadElement)">
            <summary>
            Gets the actual theme used by the passed RadElement.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.TelerikHelper.GetThemeName(System.String)">
            <summary>
            Gets the actual theme name in use.
            The theme is set with the following priority:
            1. ThemeResolutionService.ApplicationThemeName
            2. RadControl.ThemeName - it is passed as the method parameter
            3. ThemeResolutionService.ControlDefaultThemeName
            </summary>
            <param name="controlThemeName"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.TelerikHelper.SvgImageFromString(System.String)">
            <summary>
            Creates a <see cref="T:Telerik.WinControls.RadSvgImage"/> object from XML string.
            </summary>
            <param name="svgXml">The XML representing the SVG image.</param>
            <returns>The created <see cref="T:Telerik.WinControls.RadSvgImage"/> object.</returns>
        </member>
        <member name="M:Telerik.WinControls.TelerikHelper.SvgImageToString(Telerik.WinControls.RadSvgImage)">
            <summary>
            Converts a <see cref="T:Telerik.WinControls.RadSvgImage"/> object to a XML string.
            </summary>
            <param name="svgImage">The <see cref="T:Telerik.WinControls.RadSvgImage"/> object.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.TelerikHelper.GetBoundingRect(System.Drawing.Rectangle,Telerik.WinControls.Layouts.RadMatrix)">
            <summary>
            Get bounding rectangle arround rotated one.
            </summary>
            <param name="rect">Rectangle that is to be rotated</param>
            <param name="matrix"></param>
            <returns>Returns the bounding rectangle around the rectangle
            that is rotated according to the given matrix</returns>
        </member>
        <member name="M:Telerik.WinControls.TelerikHelper.FindRadControlParent(System.Windows.Forms.Control)">
            <summary>
            Searches the control hierarchy tree and returns the first RadControl that parents the control provided. Otherwise returns null.
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.TelerikHelper.GetColorAtPoint(System.Drawing.Point)">
            <summary>
            Gets the color of the pixel at the specified location on the screen.
            </summary>
            <param name="location">The location in screen coordinates to get the color for.</param>
            <returns>The color of the pixed at the specified location.</returns>
        </member>
        <member name="M:Telerik.WinControls.TelerikHelper.KeyCodeToUnicode(System.Windows.Forms.Keys)">
            <summary>
            Converts a key to string taking into account the currently selected keyboard leyout.
            </summary>
            <param name="key">The key to convert.</param>
            <returns>The string mapped to the provided key.</returns>
        </member>
        <member name="M:Telerik.WinControls.TelerikHelper.ResizeImage(System.Drawing.Image,System.Drawing.Size)">
            <summary>
            Resizes an image to a new size.
            </summary>
            <param name="source">The source image to resize.</param>
            <param name="size">The new size which will be used to resize the image.</param>
            <returns>A new resized image.</returns>
        </member>
        <member name="T:Telerik.WinControls.CollectionResetReason">
            <summary>
            Defines possible reasons for a Reset notification from RadCollectionView.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.CollectionResetReason.Refresh">
            <summary>
            Entire data has changed.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.CollectionResetReason.FilteringChanged">
            <summary>
            Reset has been initiated by a change in collection's filtering logic.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.CollectionResetReason.GroupingChanged">
            <summary>
            Reset has been initiated by a change in collection's grouping logic.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.CollectionResetReason.SortingChanged">
            <summary>
            Reset has been initiated by a change in collection's sorting logic.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.CollectionResetReason.PagingChanged">
            <summary>
            Reset has been initiated by a change in collection's paging logic.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Interfaces.INotifyPropertyChangingEx">
            <summary>
            Notifies clients that a property value is changing.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Interfaces.INotifyPropertyChangingEx.PropertyChanging">
            <summary>
            Occurs when a property value is changing.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Interfaces.PropertyChangingEventHandlerEx">
            <summary>
            Represents the method that will handle the Telerik.WinControls.Interfaces.INotifyPropertyChanging.PropertyChanging
            event of an Telerik.WinControls.Interfaces.INotifyPropertyChanging interface.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A System.ComponentModel.PropertyChangingEventArgs that contains the event data.</param>
        </member>
        <member name="T:Telerik.WinControls.IVisualElementProvider">
            <summary>
            This interface gives the ability to create reusable providers for VisualElements
            that are in some relation with logical data objects.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:Telerik.WinControls.IVisualElementProvider.CreateElement(System.Object)">
            <summary>
            Create element using the pased data
            </summary>
            <param name="data">Logical data that will be used to initialize the element.</param>
            <returns>The newly created element if everything is OK; null on error.</returns>
        </member>
        <member name="M:Telerik.WinControls.IVisualElementProvider.CleanupElement(Telerik.WinControls.VisualElement)">
            <summary>
            Cleans up when an element that is created with CreateElement() is no longer necessary.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Telerik.WinControls.IVisualElementProvider.SetElementData(Telerik.WinControls.VisualElement,System.Object)">
            <summary>
            Initialize already created element with logical data (if possible).
            </summary>
            <param name="element">the element to  be initilaized</param>
            <param name="data">with this data the given element should be initialized</param>
            <returns>false if the element cannot be initialized with the given data</returns>
        </member>
        <member name="M:Telerik.WinControls.IVisualElementProvider.IsElementCompatible(Telerik.WinControls.VisualElement,System.Object)">
            <summary>
            Check if an element can be initialized with some logical data.
            </summary>
            <param name="element"></param>
            <param name="data"></param>
            <returns>true if the lement can be initialized with the data.</returns>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.InputBindingsCollection.#ctor(Telerik.WinControls.Keyboard.InputBindingsCollection)">
            <summary>
                <para>
                  Initializes a new instance of <see cref='T:Telerik.WinControls.Keyboard.InputBindingsCollection'/> based on another <see cref='T:Telerik.WinControls.Keyboard.InputBindingsCollection'/>.
               </para>
            </summary>
            <param name='value'>
                  A <see cref='T:Telerik.WinControls.Keyboard.InputBindingsCollection'/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.InputBindingsCollection.#ctor(Telerik.WinControls.Keyboard.InputBinding[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref='T:Telerik.WinControls.Keyboard.InputBindingsCollection'/> containing any array of <see cref='T:Telerik.WinControls.Keyboard.InputBinding'/> objects.
               </para>
            </summary>
            <param name='value'>
                  A array of <see cref='T:Telerik.WinControls.Keyboard.InputBinding'/> objects with which to intialize the collection
            </param>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.InputBindingsCollection.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref='T:Telerik.WinControls.Keyboard.InputBinding'/>.</para>
            </summary>
            <param name='index'><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='index'/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.InputBindingsCollection.Add(Telerik.WinControls.Keyboard.InputBinding)">
            <summary>
               <para>Adds a <see cref='T:Telerik.WinControls.Keyboard.InputBinding'/> with the specified value to the 
               <see cref='T:Telerik.WinControls.Keyboard.InputBindingsCollection'/> .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.Keyboard.InputBinding'/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.InputBindingsCollection.AddRange(Telerik.WinControls.Keyboard.InputBinding[])">
            <summary>
            <para>Copies the elements of an array to the end of the <see cref='T:Telerik.WinControls.Keyboard.InputBindingsCollection'/>.</para>
            </summary>
            <param name='value'>
               An array of type <see cref='T:Telerik.WinControls.Keyboard.InputBinding'/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.InputBindingsCollection.AddRange(Telerik.WinControls.Keyboard.InputBindingsCollection)">
            <summary>
                <para>
                  Adds the contents of another <see cref='T:Telerik.WinControls.Keyboard.InputBindingsCollection'/> to the end of the collection.
               </para>
            </summary>
            <param name='value'>
               A <see cref='T:Telerik.WinControls.Keyboard.InputBindingsCollection'/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.InputBindingsCollection.Contains(Telerik.WinControls.Keyboard.InputBinding)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref='T:Telerik.WinControls.Keyboard.InputBindingsCollection'/> contains the specified <see cref='T:Telerik.WinControls.Keyboard.InputBinding'/>.</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.Keyboard.InputBinding'/> to locate.</param>
            <returns>
            <para><see langword='true'/> if the <see cref='T:Telerik.WinControls.Keyboard.InputBinding'/> is contained in the collection; 
              otherwise, <see langword='false'/>.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.InputBindingsCollection.CopyTo(Telerik.WinControls.Keyboard.InputBinding[],System.Int32)">
            <summary>
            <para>Copies the <see cref='T:Telerik.WinControls.Keyboard.InputBindingsCollection'/> values to a one-dimensional <see cref='T:System.Array'/> instance at the 
               specified index.</para>
            </summary>
            <param name='array'><para>The one-dimensional <see cref='T:System.Array'/> that is the destination of the values copied from <see cref='T:Telerik.WinControls.Keyboard.InputBindingsCollection'/> .</para></param>
            <param name='index'>The index in <paramref name='array'/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref='T:System.ArgumentException'><para><paramref name='array'/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref='T:Telerik.WinControls.Keyboard.InputBindingsCollection'/> is greater than the available space between <paramref name='index'/> and the end of <paramref name='array'/>.</para></exception>
            <exception cref='T:System.ArgumentNullException'><paramref name='array'/> is <see langword='null'/>. </exception>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='index'/> is less than <paramref name='array'/>'s lowbound. </exception>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.InputBindingsCollection.IndexOf(Telerik.WinControls.Keyboard.InputBinding)">
            <summary>
               <para>Returns the index of a <see cref='T:Telerik.WinControls.Keyboard.InputBinding'/> in 
                  the <see cref='T:Telerik.WinControls.Keyboard.InputBindingsCollection'/> .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.Keyboard.InputBinding'/> to locate.</param>
            <returns>
            <para>The index of the <see cref='T:Telerik.WinControls.Keyboard.InputBinding'/> of <paramref name='value'/> in the 
            <see cref='T:Telerik.WinControls.Keyboard.InputBindingsCollection'/>, if found; otherwise, -1.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.InputBindingsCollection.Insert(System.Int32,Telerik.WinControls.Keyboard.InputBinding)">
            <summary>
            <para>Inserts a <see cref='T:Telerik.WinControls.Keyboard.InputBinding'/> into the <see cref='T:Telerik.WinControls.Keyboard.InputBindingsCollection'/> at the specified index.</para>
            </summary>
            <param name='index'>The zero-based index where <paramref name='value'/> should be inserted.</param>
            <param name=' value'>The <see cref='T:Telerik.WinControls.Keyboard.InputBinding'/> to insert.</param>
            <returns><para>None.</para></returns>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.InputBindingsCollection.Remove(Telerik.WinControls.Keyboard.InputBinding)">
            <summary>
               <para> Removes a specific <see cref='T:Telerik.WinControls.Keyboard.InputBinding'/> from the 
               <see cref='T:Telerik.WinControls.Keyboard.InputBindingsCollection'/> .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.Keyboard.InputBinding'/> to remove from the <see cref='T:Telerik.WinControls.Keyboard.InputBindingsCollection'/> .</param>
            <returns><para>None.</para></returns>
            <exception cref='T:System.ArgumentException'><paramref name='value'/> is not found in the Collection. </exception>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordMessageFilter.CreateInstance">
            <summary>
            Initializes a new instance of the ChordMessageFilter class.
            </summary>
            <returns>Instance of the ChordMessageFilter class</returns>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordMessageFilter.System#Windows#Forms#IMessageFilter#PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Filters out a message before it is dispatched. 
            </summary>
            <remarks>
            Use PreFilterMessage to filter out a message before it is dispatched to a control or form. 
            For example, to stop the Click event of a Button control from being dispatched to the control, 
            you implement the PreFilterMessage method and return a true value when the Click message occurs. 
            You can also use this method to perform code work that you might need to do before the message is
            dispatched.
            </remarks>
            <param name="msg">The message to be dispatched. You cannot modify this message. </param>
            <returns>true to filter the message and stop it from being dispatched; false to allow the message to continue to the next filter or control.</returns>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordMessageFilter.CharCodeFromKeys(System.Windows.Forms.Keys)">
            <summary>
            Calculates the character code of alphanumeric key of the Keys enum instance
            </summary>
            <param name="k">An instance of the Keys enumaration</param>
            <returns>The character code of the alphanumeric key</returns>
        </member>
        <member name="F:Telerik.WinControls.Keyboard.ChordKeysUI.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordKeysUI.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Telerik.WinControls.Keyboard.ChordModifier">
            <summary>
            Represents the state of the modifier keys (SHIFT, CTRL, and ALT) in a
            <strong>Chord</strong>.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordModifier.#ctor(System.Windows.Forms.Keys)">
            <summary>
            Initializes a new instance of the <strong>ChordModifier</strong> using data
            provided by Keys input.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordModifier.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <strong>ChordModifier</strong> using explicit
            setting for every property.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordModifier.#ctor(Telerik.WinControls.Keyboard.ChordModifier)">
            <summary>
            Initializes a new instance of the <strong>ChordModifier</strong> using data
            provided by another instance.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordModifier.#ctor">
            <summary>
            Initializes a new instance of the <b xmlns="">ChordModifier</b> class with
            default settings.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.ChordModifier.IsEmpty">
            <summary>
            Gets a value indicating if any of the modifier keys (SHIFT, CTRL, and ALT) is in a pressed state. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.ChordModifier.ShiftModifier">
            <summary>
            Gets a value indicating if the SHIFT modifier key is in a pressed state. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.ChordModifier.ControlModifier">
            <summary>
            Gets a value indicating if the CTRL modifier key is in a pressed state. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.ChordModifier.AltModifier">
            <summary>
            Gets a value indicating if the ALT modifier key is in a pressed state. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordModifier.GetModifiers(Telerik.WinControls.Keyboard.ChordModifier,System.Windows.Forms.Keys)">
            <summary>
            Updates a ChordModifier instance based on a Keys input value
            </summary>
            <param name="tempModifier">ChordModifier instance to update</param>
            <param name="pressedKey">Keys input value</param>
            <returns>ChordModifier instance with updated states</returns>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordModifier.GetModifiers(System.Windows.Forms.Keys)">
            <summary>
            Creates new ChordModifier instance based on a Keys input value
            </summary>
            <param name="pressedKey">Keys input value</param>
            <returns>ChordModifier instance</returns>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordModifier.Clear">
            <summary>
            Removes all data from the ChordModifier. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordModifier.CompareTo(System.Object)">
            <summary>
            Compares this instance to a specified object or ChordModifier and returns an indication of their relative values. 
            </summary>
            <returns>
            	<para>A signed number indicating the relative values of this instance and
                value.</para>
            	<div class="tableSection">
            		<list type="table">
            			<listheader>
            				<term>
            					<para>Return Value</para>
            				</term>
            				<description>
            					<para>Description</para>
            				</description>
            			</listheader>
            			<item>
            				<term>
            					<para>Less than zero</para>
            				</term>
            				<description>
            					<para>This instance is less than
                                <span class="parameter">value</span>.</para>
            				</description>
            			</item>
            			<item>
            				<term>
            					<para>Zero</para>
            				</term>
            				<description>
            					<para>This instance is equal to
                                <span class="parameter">value</span>.</para>
            				</description>
            			</item>
            			<item>
            				<term>
            					<para>Greater than zero</para>
            				</term>
            				<description>
            					<para>This instance is greater than
                                <span class="parameter">value</span>.</para>
            					<para>-or-</para>
            					<para><span class="parameter">value</span> is a null reference
                                (<b>Nothing</b> in Visual Basic).</para>
            				</description>
            			</item>
            		</list>
            	</div>
            	<h1 class="heading"><span onkeypress="ExpandCollapse_CheckKey(exceptionsToggle)" style="CURSOR: default" onclick="ExpandCollapse(exceptionsToggle)" tabindex="0"><img class="toggle" id="exceptionsToggle" alt="Collapse image" src="ms-help://MS.MSDNQTR.v80.en/MS.MSDN.v80/MS.WinFX4VS.1033/cpref7/local/collapse_all.gif" onload="OnLoadImage()" name="toggleSwitch"/></span>Exceptions</h1>
            </returns>
            <param name="obj">
            An object to compare, or a null reference (<strong>Nothing</strong> in Visual
            Basic).
            </param>
        </member>
        <member name="E:Telerik.WinControls.Keyboard.ChordModifier.PropertyChanged">
            <summary>
            Notifies clients that a property value has changed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordModifier.OnNotifyPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="T:Telerik.WinControls.Keyboard.ChordsEventHandler">
            <summary>
                Represents the method that will handle the
                <see cref="E:Telerik.WinControls.Keyboard.Shortcuts.Activate">Activate</see> event.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Keyboard.Chord">
            <summary>
            Represent a chord.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Chord.#ctor">
            <summary>
            Initializes a new instance of the Chord class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Chord.#ctor(System.Collections.Generic.List{System.Windows.Forms.Keys})">
            <summary>
            Initializes a new isntance of the Chord class using a list of keys.
            </summary>
            <param name="keys"></param>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Chord.#ctor(System.Collections.Generic.List{System.Windows.Forms.Keys},Telerik.WinControls.Keyboard.ChordModifier)">
            <summary>
            Initializes a new instance of the Chord class using a list of keys
            and %chord modifier:Telerik.WinControls.Keyboard.ChordModifier%.
            </summary>
            <param name="keys"></param>
            <param name="chordModifier"></param>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Chord.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Chord class using a string of keys.
            </summary>
            <param name="keys"></param>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.Chord.KeysInternal">
            <summary>Gets or sets a list of keys in this instance.</summary>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.Chord.Keys">
            <summary>Gets or sets the keys in this chord.</summary>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.Chord.ModifierKeys">
            <summary>Gets the modifier strings.</summary>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.Chord.ChordKeys">
            <summary>Gets the chord keys.</summary>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.Chord.ChordModifier">
            <summary>Gets or sets the chord modifier.</summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Chord.Clear">
            <summary>Clears the chord.</summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Chord.ToString">
            <summary>Retrieves the string representation of the instance.</summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Chord.ProccessModifiers">
            <summary>Processes the modifiers.</summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Chord.ReverseProccessModifiers">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Chord.CompareTo(System.Object)">
            <summary>
            Compares two instance for equality. 
            <returns>returns 0 if equal, a positive number if the first is greater than the 
            second, and a negative number otherwise.</returns>
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.Keyboard.Shortcuts">
            <summary>
            Represents keyboard shortcuts. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Shortcuts.#ctor">
            <summary>Initializes a new instance of the Shortcuts class.</summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Shortcuts.#ctor(System.ComponentModel.IContainer)">
            <summary>Initializes a new instance of the Shortcuts class.</summary>
        </member>
        <member name="E:Telerik.WinControls.Keyboard.Shortcuts.Activate">
            <summary>
            Fires when a shortcut is activated.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.Shortcuts.InputBindings">
            <summary>
            Gets the input bindings.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Shortcuts.AddCommandBindings(Telerik.WinControls.Keyboard.InputBinding)">
            <summary>
            Adds the command bindings.
            </summary>
            <param name="binding"></param>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Shortcuts.AddCommandBindings(System.Collections.Generic.List{Telerik.WinControls.Keyboard.InputBinding})">
            <summary>
            Adds command bindings.
            </summary>
            <param name="bindings"></param>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Shortcuts.AddCommandBindings(Telerik.WinControls.Keyboard.InputBindingsCollection)">
            <summary>
            Adds commands bindings.
            </summary>
            <param name="bindings"></param>
        </member>
        <member name="F:Telerik.WinControls.Keyboard.Shortcuts.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Shortcuts.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Shortcuts.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.IShortcutProvider.OnShortcut(Telerik.WinControls.ShortcutEventArgs)">
            <summary>
            Occurs when the complete keyboard combination for a registered RadShortcut is triggerred.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.IShortcutProvider.OnPartialShortcut(Telerik.WinControls.PartialShortcutEventArgs)">
            <summary>
            Occurs when a registered shortcut's keyboard combination is partially complete.
            E.g. if we have Ctrl+C+V and Ctrl+C is pressed the event will be raised.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Telerik.WinControls.PartialShortcutEventArgs.CollectedKeys">
            <summary>
            Gets an array with the currently collected key strokes.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadShortcut">
            <summary>
            Describes a combination of keys that may be used as a shortcut to RadItem.PerformClick method or any other arbitrary command.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadShortcut.#ctor">
            <summary>
            Default constructor. Initializes an empty <see cref="T:Telerik.WinControls.RadShortcut">RadShortcut</see> instance.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadShortcut.#ctor(System.Windows.Forms.Keys,System.Windows.Forms.Keys[])">
            <summary>
            Initializes a new <see cref="T:Telerik.WinControls.RadShortcut">RadShortcut</see> instance, using the specified modifiers and key mappings.
            </summary>
            <param name="modifiers"></param>
            <param name="mappings"></param>
        </member>
        <member name="P:Telerik.WinControls.RadShortcut.KeyMappings">
            <summary>
            Gets a list with all the Keys that form the shortcut combination.
            E.g. we may have M+O and a Modifier CTRL, then the valid shortcut will be CTRL+M+O
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadShortcut.Modifiers">
            <summary>
            Gets or sets the Keys value that describes the modifiers for the shortcut.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadShortcut.Ctrl">
            <summary>
            Determines whether the Control modifier key is applied.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadShortcut.Alt">
            <summary>
            Determines whether the Alt modifier key is applied.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadShortcut.Shift">
            <summary>
            Determines whether the Shift modifier key is applied.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadShortcut.IsShortcutCombination(System.Windows.Forms.Keys,System.Windows.Forms.Keys[])">
            <summary>
            Determines whether the specified Keys are part 
            </summary>
            <param name="modifiers"></param>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadShortcut.IsPartialShortcutCombination(System.Windows.Forms.Keys,System.Windows.Forms.Keys[])">
            <summary>
            Determines whether the specified Keys are part of a shortcut combination.
            E.g. if we have a key mapping CTRL+M+O and the provided keys are CTRL+M, the method will return true.
            </summary>
            <param name="modifiers"></param>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadShortcut.IsMappingKey(System.Windows.Forms.Keys)">
            <summary>
            Determines whether the specified key is present in the RadDockShortcut KeyMappings list.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadShortcut.GetDisplayText">
            <summary>
            Gets the human-readable represention of the current key settings.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.RadShortcutCollection.Owner">
            <summary>
            Gets the IShortcutProvider instance that owns this collection.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadShortcutCollection.GetDisplayText">
            <summary>
            Gets a human readable string representation of the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.RadShortcutManager.ProvidersCount">
            <summary>
            Gets the count of all shortcut providers currently registered with this instance.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ShortcutEventArgs">
            <summary>
            Encapsulates the data, associated with the IShortcutProvider.OnShortcut callback.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ShortcutEventArgs.FocusedControl">
            <summary>
            Gets the control that is currently focused and which will receive the keyboard event.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ShortcutEventArgs.Shortcut">
            <summary>
            Gets the shortcut that is triggerred.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ShortcutEventArgs.Handled">
            <summary>
            Determines whether the event is handled. If true, the keyboard message will not be dispatched to the focused control.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layout.IntegralScrollWrapPanel.LineCount">
            <summary>
            how many lines we have 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layout.IntegralScrollWrapPanel.MaxColumns">
            <summary>
            Gets or sets the maximum number of columns to be shown in the in-ribbon portion of the gallery. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layout.IntegralScrollWrapPanel.MaxRows">
            <summary>
            Gets or sets the maximum number of columns to be shown in the in-ribbon portion of the gallery. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layout.IntegralScrollWrapPanel.CurrentLine">
            <summary>
            which is the current line
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layout.IntegralScrollWrapPanel.ScrollToLine(System.Int32)">
            <summary>
            scrol to line
            </summary>
            <param name="lineNumber">line index to scrool - zero besed</param>
        </member>
        <member name="M:Telerik.WinControls.Layout.IntegralScrollWrapPanel.ScrollToElement(Telerik.WinControls.RadElement)">
            <summary>
            Scroll to element
            </summary>
            <param name="scrollElement"></param>
        </member>
        <member name="T:Telerik.WinControls.Localization.LocalizationProvider`1">
            <summary>
            This class is used as a base class for all Localization Provider classes 
            used in RadControls.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Localization.LocalizationProvider`1.CurrentProviderChanged">
            <summary>
            Fires when the current localization provider has changed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Localization.LocalizationProvider`1.CurrentProvider">
            <summary>
            Gets or sets the current localization provider.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Localization.LocalizationProvider`1.CreateDefaultLocalizationProvider">
            <summary>
            Creates a default localization provider.
            </summary>
            <returns>A new instance of the default localization provider.</returns>
        </member>
        <member name="P:Telerik.WinControls.Localization.LocalizationProvider`1.Culture">
            <summary>
            Gets a CultureInfo object corresponding to the current localization provider.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Localization.LocalizationProvider`1.GetLocalizedString(System.String)">
            <summary>
            Gets the string corresponding to the given ID.
            </summary>
            <param name="id">String ID</param>
            <returns>The string corresponding to the given ID.</returns>
        </member>
        <member name="T:Telerik.WinControls.Paint.ShadowSettings">
            <summary>Represents shadow settings.</summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.ShadowSettings.#ctor(System.Drawing.Point,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the ShadowSettings class using point and
            shadow color.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.ShadowSettings.#ctor">
            <summary>Initializes a new instance of the ShadowSettings class.</summary>
        </member>
        <member name="P:Telerik.WinControls.Paint.ShadowSettings.Depth">
            <summary>Gets or sets the shadow depth.</summary>
        </member>
        <member name="P:Telerik.WinControls.Paint.ShadowSettings.ShadowColor">
            <summary>Gets or sets the shadow color.</summary>
        </member>
        <member name="T:Telerik.WinControls.Paint.IGraphics">
            <summary>
            	<para>Classes that implement IGraphics interface are capable of drawing on the
                computer screen. Classes that implement this interface can use different APIs to
                perform the actual drawing: GDI+, DirectX, etc.</para>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Paint.IGraphics.ClipRectangle">
            <summary>Gets the clipping rectangle; the rectangle which needs redrawing.</summary>
        </member>
        <member name="P:Telerik.WinControls.Paint.IGraphics.UnderlayGraphics">
            <summary>Gets the current context device - graphics object.</summary>
        </member>
        <member name="P:Telerik.WinControls.Paint.IGraphics.Opacity">
            <summary>Gets or sets the opacity level of the device context.</summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.ChangeOpacity(System.Double)">
            <summary><para>Changes the opacity level of the current device context.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.RestoreOpacity">
            <summary>Restores the opacity of the current device context to the previous value.</summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.ChangeSmoothingMode(System.Drawing.Drawing2D.SmoothingMode)">
            <summary>
            Saves the current smothingMode, and changes the smoothingmode for the current device
            context.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.RestoreSmoothingMode">
            <summary>Restores the smoothing mode to the previous value.</summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRectangle(System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>Draws a rectangle specified by a rectangle structure and a color.</summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <summary>
            Draws a rectangle specified by rectangle structure, color, PenAlignment and pen
            width.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRectangle(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <summary>
            Draws a rectangle specified by rectangle structure, color, PenAlignment and pen
            width.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRectangle(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Drawing2D.PenAlignment,System.Single,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Draws a rectangle specified by rectangle structure, color, PenAlignment, pen width and DashStyle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRectangle(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Drawing2D.PenAlignment,System.Single,System.Drawing.Drawing2D.DashStyle,System.Single[])">
            <summary>
            Draws a rectangle specified by rectangle structure, color, PenAlignment, pen width and DashStyle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.ExcludeClip(System.Drawing.Rectangle)">
            <summary>
            	<para>Updates the clipping region of the current Graphics object to exclude 
                the area specified by a Rectangle structure.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawLinearGradientRectangle(System.Drawing.RectangleF,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single,System.Single)">
            <summary>
            Draws a linear gradient rectangle specified by rectangle structure, color array,
            penalignment, penWidth and angle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawLinearGradientRectangle(System.Drawing.RectangleF,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single,System.Single,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Draws a linear gradient rectangle specified by rectangle structure, color array,
            penalignment, penWidth, angle and DashStyle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawLinearGradientRectangle(System.Drawing.RectangleF,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single,System.Single,System.Drawing.Drawing2D.DashStyle,System.Single[])">
            <summary>
            Draws a linear gradient rectangle specified by rectangle structure, color array,
            penalignment, penWidth, angle and DashStyle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRadialGradientRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <summary>
            Draws a radial gradient rectangle specified by rectangle structure, color, color
            array for gradient effect, penalignment and penWidth.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRadialGradientRectangle(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <summary>
            Draws a radial gradient rectangle specified by rectangle structure, color, color
            array for gradient effect, penalignment and penWidth.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRadialGradientRectangle(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Draws a radial gradient rectangle specified by rectangle structure, color, color
            array for gradient effect, penalignment, penWidth and DashStyle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRadialGradientRectangle(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single,System.Drawing.Drawing2D.DashStyle,System.Single[])">
            <summary>
            Draws a radial gradient rectangle specified by rectangle structure, color, color
            array for gradient effect, penalignment, penWidth and DashStyle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawCustomGradientRectangle(System.Drawing.Rectangle,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <summary>
            Draws a custom gradient rectangle specified by rectangle structure, graphicsPath,
            color, color array for the gradient effect, penalignment and penwidth.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawCustomGradientRectangle(System.Drawing.RectangleF,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <summary>
            Draws a custom gradient rectangle specified by rectangle structure, graphicsPath,
            color, color array for the gradient effect, penalignment and penwidth.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawCustomGradientRectangle(System.Drawing.RectangleF,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Draws a custom gradient rectangle specified by rectangle structure, graphicsPath,
            color, color array for the gradient effect, penalignment, penwidth and DashStyle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawCustomGradientRectangle(System.Drawing.RectangleF,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single,System.Drawing.Drawing2D.DashStyle,System.Single[])">
            <summary>
            Draws a custom gradient rectangle specified by rectangle structure, graphicsPath,
            color, color array for the gradient effect, penalignment, penwidth and DashStyle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawEllipse(System.Drawing.Rectangle,System.Drawing.Color)">
            <summary><para>Draws an ellipse defined by a bounding rectangle and color.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawString(System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Color,System.Drawing.StringFormat,System.Windows.Forms.Orientation,System.Boolean)">
            <summary>
            	<para>Draws the specified text string with specified Rectangle, Font, Color,
                ContentAlignment, StringFormat and Orientation.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawString(System.String,System.Drawing.RectangleF,System.Drawing.Font,System.Drawing.Color,System.Drawing.ContentAlignment,System.Drawing.StringFormat,Telerik.WinControls.Paint.ShadowSettings,System.Drawing.Text.TextRenderingHint,System.Windows.Forms.Orientation,System.Boolean)">
            <summary>
            Obsolete. Use the overload without ContentAlignment parameter. ContentAlignment should be provided through the StringFormat parameter.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawString(System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Color,System.Drawing.ContentAlignment,System.Drawing.StringFormat,Telerik.WinControls.Paint.ShadowSettings,System.Drawing.Text.TextRenderingHint,System.Windows.Forms.Orientation,System.Boolean)">
            <summary>
            Obsolete. Use the overload without ContentAlignment parameter. ContentAlignment should be provided through the StringFormat parameter.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawImage(System.Drawing.Rectangle,System.Drawing.Image,System.Drawing.ContentAlignment,System.Boolean)">
            <summary>
            Draws the specified Image object with the specified Rectangle, Image,
            ContentAlignment and disable flag.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawImage(System.Drawing.Point,System.Drawing.Image,System.Boolean)">
            <summary>
            	<para>Draws the specified Image object with the specified Point, Image and disable
                flag.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawBitmap(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            Draws a bitmap image specified by image object and position from the left-upper
            corner of the current device context.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawBitmap(System.Drawing.Image,System.Int32,System.Int32,System.Double)">
            <summary>
            Draws a bitmap image specified by image object and position from the left-upper
            corner of the current device context and specified opacity.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawBitmap(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a bitmap image specified by image object, position from the left-upper
            corner of the current device context and specified size.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawBitmap(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Draws a bitmap image specified by image object, position from the left-upper
            corner of the current device context, opacity and specified size.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <summary>Draws a path specified by GraphicsPath, color, pen alignment and pen width.</summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Drawing2D.PenAlignment,System.Single,System.Drawing.Drawing2D.DashStyle)">
            <summary>Draws a path specified by GraphicsPath, color, pen alignment, pen width and DashStyle.</summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Drawing2D.PenAlignment,System.Single,System.Drawing.Drawing2D.DashStyle,System.Single[])">
            <summary>Draws a path specified by GraphicsPath, color, pen alignment, pen width and DashStyle.</summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawLinearGradientPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single,System.Single)">
            <summary>
            Draws a linear gradient path specified by GraphicsPath, bounding Rectangle, color
            gradient array, penalignment, penwidth and angle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawLinearGradientPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single,System.Single,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Draws a linear gradient path specified by GraphicsPath, bounding Rectangle, color
            gradient array, penalignment, penwidth, angle and DashStyle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawLinearGradientPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single,System.Single,System.Drawing.Drawing2D.DashStyle,System.Single[])">
            <summary>
            Draws a linear gradient path specified by GraphicsPath, bounding Rectangle, color
            gradient array, penalignment, penwidth, angle and DashStyle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawLine(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a line specified by color, initial x point, initial y point, final x and
            final y point.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawLine(System.Drawing.Color,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line specified by color, initial x point, initial y point, final x and
            final y point.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawLine(System.Drawing.Color,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line specified by color, initial x point, initial y point, final x, final y point and width
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawLine(System.Drawing.Color,System.Drawing.Drawing2D.DashStyle,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a line specified by color, DashStyle, initial x point, initial y point, final x
            and final y point.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawLine(System.Drawing.Color,System.Drawing.Drawing2D.DashStyle,System.Int32,System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            Draws a line specified by color, DashStyle, initial x point, initial y point, final x
            final y point and width.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRadialGradientPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <summary>
            Draws a redial gradient path specified by Graphicspath, bounding rectangle, color,
            color gradient array, penalignment and penwidth.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRadialGradientPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Draws a redial gradient path specified by Graphics path, bounding rectangle, color,
            color gradient array, pen alignment and pen width.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRadialGradientPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single,System.Drawing.Drawing2D.DashStyle,System.Single[])">
            <summary>
            Draws a redial gradient path specified by Graphics path, bounding rectangle, color,
            color gradient array, pen alignment and pen width.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawCustomGradientPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <summary>
            Draws a custom gradient path specified by GraphicsPath, GraphicsPath for the
            gradient, color, gradient color array, penalignment and penwidth.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.CreateBitmapMask(System.Drawing.Color,System.Drawing.Bitmap)">
            <summary>Creates a mask specified by color and bitmap.</summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillRectangle(System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Fills the interior of a rectangle specified by the
            borderRectangle and using for color the second argument.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillTextureRectangle(System.Drawing.Rectangle,System.Drawing.Image)">
            <summary>
            Fills a rectangle using the image as texture.
            </summary>
            <param name="rectangle">The rectangle to fill.</param>
            <param name="texture">The image to use as a texture.</param>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillTextureRectangle(System.Drawing.Rectangle,System.Drawing.Image,System.Drawing.Drawing2D.WrapMode)">
            <summary>
            Fills a rectangle using the image as texture.
            </summary>
            <param name="rectangle">The rectangle to fill.</param>
            <param name="texture">The image to use as a texture.</param>
            <param name="wrapMode">Defines the way the image is populated in the rectangle</param>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillTextureRectangle(System.Drawing.RectangleF,System.Drawing.Image)">
            <summary>
            Fills a rectangle using the image as texture.
            </summary>
            <param name="rectangle">The rectangle to fill.</param>
            <param name="texture">The image to use as a texture.</param>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillTextureRectangle(System.Drawing.RectangleF,System.Drawing.Image,System.Drawing.Drawing2D.WrapMode)">
            <summary>
            Fills a rectangle using the image as texture.
            </summary>
            <param name="rectangle">The rectangle to fill.</param>
            <param name="texture">The image to use as a texture.</param>
            <param name="wrapMode">Defines the way the image is populated in the rectangle</param>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillGradientRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,Telerik.WinControls.GradientStyles,System.Single)">
            <summary>
            Fills gradient rectangle specified by rectangle structure, color, color, color,
            color, GradientStyles, and angle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillGradientRectangle(System.Drawing.Rectangle,System.Drawing.Color[],System.Single[],Telerik.WinControls.GradientStyles,System.Single,System.Single,System.Single)">
            <summary>
            Fills the gradient rectangle specified by rectangle structure, color gradient array,
            float offset array, GradientStyles, angle, gradientPercentage, and
            gradientPercentage2.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillGradientRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)">
            <summary>
            Fills the gradient rectangle specified by rectangle structure, color gradient array,
            float offset array, GradientStyles, angle, gradientPercentage, and
            gradientPercentage2.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillGlassRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single,System.Single)">
            <summary>
            Fills the glass gradient rectangle specified by rectangle structure, color, color,
            color, color, and gradient percentage.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillOfficeGlassRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single,System.Single,System.Boolean)">
            <summary>
            Fills the office glass gradient rectangle specified by rectangle structure, color,
            color, color, color, and gradientPercentage and gradientPercentage2.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillVistaRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single,System.Single)">
            <summary>
            Fills the vista gradient rectangle specified by rectangle structure, color, color,
            color, color, gradient percentage, and gradientPercentage2.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillGellRectangle(System.Drawing.Rectangle,System.Drawing.Color[],System.Single,System.Single)">
            <summary>
            Fills the gel gradient rectangle specified by rectangle structure, color, color, and
            gradientPercentage.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillPolygon(System.Drawing.Color,System.Drawing.Point[])">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by
               <a href="T_Telerik_Windows_Diagrams_Core_Point.htm">Point</a> structures and
               color.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillPolygon(System.Drawing.Color,System.Drawing.PointF[])">
            <summary>
            Fills the interior of a polygon defined by color and an array of points specified
            by <a href="T_Telerik_Windows_Diagrams_Core_Point.htm">Point</a> structures.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
            <summary>
            Fills the interior of a polygon defined by brush and an array of points specified
            by <a href="T_Telerik_Windows_Diagrams_Core_Point.htm">Point</a> structures.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRoundRect(System.Drawing.Rectangle,System.Drawing.Color,System.Single,System.Int32)">
            <summary>
            Draws a round rectangle specified by Rectangle structure, color, float borderWidth,
            and radius in pixels.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.TranslateTransform(System.Int32,System.Int32)">
            <summary>
            	<para>Translates the local geometric transformation of this TextureBrush object by
                the specified dimensions. This method prepends the translation to the
                transformation.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.TranslateTransform(System.Single,System.Single)">
            <summary>
            Translates the local geometric transformation of this TextureBrush object by the
            specified dimensions. This method prepends the translation to the
            transformation.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.RotateTransform(System.Single)">
            <summary>
            Rotates the local geometric transformation by the specified angle. This method
            prepends the rotation to the transformation.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.ResetTransform">
            <summary>
            	<span id="ctl00_ContentPlaceHolder1_src1_resRC_ctl01_LabelAbstract">Resets the
            world transformation matrix of this Graphics to the identity matrix.</span>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.ScaleTransform(System.Drawing.SizeF)">
            <summary>
            Scales the world transformation matrix by the specified amount.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Paint.RadGdiGraphics">
            <summary>
            Implements functionality for drawing GDI+ graphics.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.#ctor(System.Drawing.Graphics)">
            <summary>
            Initializes a new instance of RadGdiGraphics class using GDI graphics context. 
            </summary>
            <param name="graphics"></param>
        </member>
        <member name="P:Telerik.WinControls.Paint.RadGdiGraphics.Graphics">
            <summary>
            Gets or sets current GDI+ graphics context.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawBorder(System.Drawing.RectangleF,Telerik.WinControls.Primitives.IBorderElement)">
            <summary>
            Draws a border specified by rectangle structure, IBorderElement.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.Destroy">
            <summary>
            Disposes the object. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.Dispose">
            <summary>
            Disposes the GDI+ graphics context.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Commands.CommandComponentBase.HandleExecute">
            <summary>
            Represents the method that will handle HandleExecute, and Execucted events.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Commands.CommandComponentBase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Commands.CommandComponentBase.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.Commands.CommandComponentBase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Commands.CommandEventHandler">
            <summary>
            Represents the method that will handle HandleExecute, and Executed events.
            </summary>
            <param name="sender">Initializes the event sender.</param>
            <param name="e">Initializes the event argument data.</param>
        </member>
        <member name="F:Telerik.WinControls.Commands.CommandListComponent.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Commands.CommandListComponent.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.Commands.CommandListComponent.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Commands.CommandBase.HandleExecute">
            <summary>
            
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Commands.CommandBase.Executed">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Commands.CommandBase.#ctor">
            <summary>
            Initializes a new instance of the CommandBase class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Commands.CommandBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CommandBase class using command name.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Telerik.WinControls.Commands.CommandBase.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the CommandBase class.
            </summary>
            <param name="name"></param>
            <param name="text"></param>
        </member>
        <member name="M:Telerik.WinControls.Commands.CommandBase.ToString">
            <summary>
            Retrieves a text representation of the instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.Commands.CommandBase.Name">
            <summary>
            Gets or sets the command name/
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Commands.CommandBase.Type">
            <summary>
            Gets or sets the command type.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Commands.CommandBase.Execute">
            <summary>
            Executes the command.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Commands.CommandBase.Execute(System.Object[])">
             <summary>
             Executes the command with the given settings.
             </summary>
             <param name="settings">
              
            </param>
        </member>
        <member name="T:Telerik.WinControls.Commands.ICommandSource">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.ArrowDirection">
            <summary>
            Specifies arrow directions for the arrow primitive: Up, Right, Down, and
            Left.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ArrowDirection.Left">
            <summary>
            Indicates left pointed arrow.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ArrowDirection.Up">
            <summary>
            Indicates up pointed arrow.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ArrowDirection.Right">
            <summary>
            Indicates right pointed arrow.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ArrowDirection.Down">
            <summary>
            Indicates down pointed arrow.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Collections.EventsCollection.AddEventHandler(System.Object,System.Delegate)">
            <summary> Adds a delegate to the list. </summary>
            <param name="eventKey">The object that owns the event.</param>
            <param name="handler">The delegate to add to the list.</param>
        </member>
        <member name="M:Telerik.WinControls.Collections.EventsCollection.RemoveEventHandler(System.Object,System.Delegate)">
            <summary> Removes a delegate from the list. </summary>
            <param name="eventKey">The object that owns the event.</param>
            <param name="handler">The delegate to remove from the list.</param>
        </member>
        <member name="M:Telerik.WinControls.Collections.EventsCollection.RaiseEvent(System.Object,System.EventArgs)">
            <summary> Raises the specified event. </summary>
            <param name="eventKey">The object that owns the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="T:Telerik.WinControls.RadControl">
            <summary>
            Represents a RadControl. RadControl is an abstract class and is base class for
            all Telerik controls.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CreateBehavior">
            <summary>
            Creates the input behavior instance. Allows inheritors to provide custom input implementations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadControl.LoadElementTree">
            <summary>
            Loads the element tree. While not loaded, no layout operations are allowed upon the tree.
            By default, the tree will be loaded when the control is displayed for the first time.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadControl.LoadElementTree(System.Drawing.Size)">
            <summary>
            Loads the element tree using the specified desired size.
            </summary>
            <param name="desiredSize"></param>
        </member>
        <member name="P:Telerik.WinControls.RadControl.EnableDpiScaling">
            <summary>
            Gets or sets a value indicating whether the RadControls scaling logic will be used when the application is run in a high DPI environment.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.EnableImageDpiScaling">
            <summary>
            Gets or sets a value indicating whether the RadControls scaling logic will be used to resize the images when the application is run in a high DPI environment.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.EnableSvgImages">
            <summary>
            Gets or sets a value indicating whether the RadControls will draw use the SvgImages in ImagePrimitive and LightVisualElement objects, or if [false] will draw the corresponding Image property if applicable.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.IsLoaded">
            <summary>
            Determines whether the control is properly loaded.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.UseCompatibleTextRenderingDefaultValue">
            <summary>
            Set or get the default value for UseCompatibleTextRendering property. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.Behavior">
            <summary>Gets the input behavior for the control.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.RootElement">
            <summary>Gets the RootElement of the control.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.Padding">
            <summary>Gets or sets padding within the control.</summary>
            <returns>A <see cref="T:System.Windows.Forms.Padding"/> representing the control's
            internal spacing characteristics.</returns>
        </member>
        <member name="P:Telerik.WinControls.RadControl.ThemeName">
            <summary>
                Gets or sets control's preferred theme name. Themes are stored and retrieved using
                APIs of <see cref="T:Telerik.WinControls.ThemeResolutionService"/>.
            </summary>
            <remarks>
            If <strong>ThemeResolutionService.ApplicatonThemeName</strong> refers to a
            non-empty string, the theme of a RadControl can differ from the one set using
            <strong>RadControls.ThemeName</strong> property. If the themes differ, the
            <strong>RadControls.ThemeName</strong> property will be overridden by
            <strong>ThemeResolutionService.ApplicatonThemeName</strong>. If no theme is registered
            with a name as <strong>ThemeResolutionService.ApplicatonThemeName</strong>, then
            control will revert to the theme specified by its <strong>ThemeName</strong> property.
            If <strong>ThemeName</strong> is assigned to a non-existing theme name, the control may
            have no visual properties assigned, which will cause it look and behave in unexpected
            manner. If <strong>ThemeName</strong> equals empty string, control's theme is set to a
            theme that is registered within <strong>ThemeResolutionService</strong> with the name
            "ControlDefault".
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadControl.EnableTheming">
            <summary>
            Gets or sets value indicating whether the control is styled through theme
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.ThemeClassName">
            <summary>
            Gets or sets the class name string that ThemeResolutionService will use to find the themes registered for the control.
            </summary>
            <remarks>
            By default the return value is RadControl's type FullName; Some controls like drop down menu has different ThemeClassName
            depending on the runtime usage of the control.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadControl.ImageList">
            <summary>
            Gets or sets the ImageList that contains the images displayed by this control.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.ImageScalingSize">
            <summary>
            Gets or sets the image scaling size.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.UseCompatibleTextRendering">
            <summary>
            Determines whether to use compatible text rendering engine (GDI+) or not (GDI). 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.AutoSize">
            <summary>
            <para>Gets or sets a value indicating whether the control is automatically resized
            to display its entire contents.</para>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.MaximumSize">
            <summary>
            Gets or sets the size that is the upper limit that GetPreferredSize can
            specify.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.MinimumSize">
            <summary>
            Gets or sets the size that is the lower limit that GetPreferredSize can
            specify
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.CausesValidation">
            <summary>
            Gets or sets a value indicating whether the control causes validation to be performed on any controls that require validation when it receives focus.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadControl.SetIsInitializing(System.Boolean)">
            <summary>
            This method is used internally!
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:Telerik.WinControls.RadControl.SmallImageList">
            <summary>
            Gets or sets the SmallImageList that contains the small images which are displayed when there's not enough space.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.SmallImageScalingSize">
            <summary>Gets or sets the small image scaling size.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.IsDisplayed">
            <summary>
            Determines whether the control is currently displayed on the screen.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.AllowShowFocusCues">
            <summary>
            Indicates focus cues display, when available, based on the corresponding control type and the current UI state.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.ShowItemToolTips">
            <summary>
            Gets or sets a value indicating whether ToolTips are shown for the RadItem objects contained in 
            the RadControl.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.EnableKeyMap">
            <summary>
            Gets or sets whether Key Map (Office 2007 like accelerator keys map)
            is used for this specific control. Currently this option is implemented for 
            the RadRibbonBar control only.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.BackColor">
            <summary>
            Gets or sets the BackColor of the control.
            This is actually the BackColor property of the root element.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadControl.ShouldSerializeBackColor">
            <summary>
            Determines whether the BackColor property should be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.RadControl.ForeColor">
            <summary>
            Gets or sets the ForeColor of the control.
            This is actually the ForeColor property of the root element.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadControl.ShouldSerializeForeColor">
            <summary>
            Determines whether the ForeColor property should be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.RadControl.Font">
            <summary>
            Gets or sets the Font of the control. This is actually the Font property of the root element.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadControl.ShouldSerializeFont">
            <summary>
            Determines whether the ForeColor property should be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="E:Telerik.WinControls.RadControl.ToolTipTextNeeded">
            <summary>
            Occurs when a RadItem instance inside the RadControl requires ToolTip text. 
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadControl.ScreenTipNeeded">
            <summary>
            Occurs prior the ScreenTip of a RadItem instance inside the RadControl is displayed.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadControl.ThemeNameChanged">
            <summary>Fires when the theme name is changed.</summary>
        </member>
        <member name="M:Telerik.WinControls.RadControl.OnLoad(System.Drawing.Size)">
            <summary>
            Notifies that the control is about to be visualized.
            </summary>
            <param name="desiredSize"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.ProcessFocusRequested(Telerik.WinControls.RadElement)">
            <summary>
            Processes a focus request from the specified element.
            </summary>
            <param name="element">The element that requested the focus.</param>
            <returns>True if focus is approved, false otherwise.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadControl.ProcessCaptureChangeRequested(Telerik.WinControls.RadElement,System.Boolean)">
            <summary>
            Processes a capture request from the specified element.
            </summary>
            <param name="element">The element which requested the capture.</param>
            <param name="capture"></param>
            <returns>True if the capture request is approved, otherwise false.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallOnMouseCaptureChanged(System.EventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallBaseOnGotFocus(System.EventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallBaseOnLostFocus(System.EventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallOnToolTipTextNeeded(System.Object,Telerik.WinControls.ToolTipTextNeededEventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallOnScreenTipNeeded(System.Object,Telerik.WinControls.ScreenTipNeededEventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallOnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallOnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallOnClick(System.EventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallOnDoubleClick(System.EventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallOnMouseEnter(System.EventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallOnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallOnMouseLeave(System.EventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallOnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallOnMouseHover(System.EventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallOnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallBaseOnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallOnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallBaseOnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallOnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallBaseOnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallOnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallOnThemeNameChanged(Telerik.WinControls.ThemeNameChangedEventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallOnVisibleChanged(System.EventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:Telerik.WinControls.RadControl.Initialized">
            <summary>Fires when the control is initialized.</summary>
        </member>
        <member name="M:Telerik.WinControls.RadControl.BeginInit">
            <summary>Suspends layout during initialization.</summary>
        </member>
        <member name="M:Telerik.WinControls.RadControl.EndInit">
            <summary>Resumes layout.</summary>
        </member>
        <member name="E:Telerik.WinControls.RadControl.PropertyChanged">
            <summary>
            Occurs when a property of an object changes change. 
            Calling the event is developer's responsibility.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadControl.OnNotifyPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="E:Telerik.WinControls.RadControl.ZoomGesture">
            <summary>
            Occurs when a zoom gesture was sent by a touch input device.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadControl.RotateGesture">
            <summary>
            Occurs when a rotate gesture was sent by a touch input device.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadControl.PanGesture">
            <summary>
            Occurs when a pan gesture was sent by a touch input device.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadControl.TwoFingerTapGesture">
            <summary>
            Occurs when a two-finger-tap gesture was sent by a touch input device.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadControl.PressAndTapGesture">
            <summary>
            Occurs when a press-and-tap gesture was sent by a touch input device.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.EnableGestures">
            <summary>
            Gets or sets a value indicating whether the Gestures functionality is enabled.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadControl.OnZoomGesture(Telerik.WinControls.ZoomGestureEventArgs)">
            <summary>
            Fires the ZoomGesture event.
            </summary>
            <param name="args">The arguments for the ZoomGesture event.</param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.OnRotateGesture(Telerik.WinControls.RotateGestureEventArgs)">
            <summary>
            Fires the RotateGesture event.
            </summary>
            <param name="args">The arguments for the RotateGesture event.</param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.OnPanGesture(Telerik.WinControls.PanGestureEventArgs)">
            <summary>
            Fires the PanGesture event.
            </summary>
            <param name="args">The arguments for the PanGesture event.</param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.OnTwoFingerTapGesture(Telerik.WinControls.GestureEventArgs)">
            <summary>
            Fires the TwoFingerTapGesture event.
            </summary>
            <param name="args">The arguments for the TwoFingerTapGesture event.</param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.OnPressAndTapGesture(Telerik.WinControls.PressAndTapGestureEventArgs)">
            <summary>
            Fires the PressAndTapGesture event.
            </summary>
            <param name="args">The arguments for the PressAndTapGesture event.</param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.EnableGesture(Telerik.WinControls.GestureType)">
            <summary>  
            Enable firing gesture events of the specified type.
            </summary>
            <param name="type">The type of gesture events to enable.</param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.DisableGesture(Telerik.WinControls.GestureType)">
            <summary>
            Disable firing gesture events of the specified type.
            </summary>
            <param name="type">The type of gesture events to disable.</param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.ControlDefinesThemeForElement(Telerik.WinControls.RadElement)">
            <summary>
            Checks whether the <paramref name="element"/>'s theme is defined by the control.
            </summary>
            <remarks>
            If true is returned the ThemeResolutionService would not not set any theme to the element 
            to avoid duplicating the style settings of the element.
            </remarks>
            <param name="element">The element to should be checked.</param>
            <returns>true if the control defines theme for this element, false otherwise.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadControl.ResolveStyleGroupForElement(Telerik.WinControls.StyleGroup,Telerik.WinControls.RadObject)">
            <summary>
            Replaces the default style group for specific element.
            </summary>
            <param name="styleGroup">The style group to replace.</param>
            <param name="element">The element on which this style should apply.</param>
            <returns>An instance of <see cref="T:Telerik.WinControls.StyleGroup"/> is successfull.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadControl.GetPlainText">
            <summary>
            Strips all html tags of the text set to the control and returns only the plain text.
            </summary>
            <returns>Plain text stripped of any html tags.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CanEditUIElement(Telerik.WinControls.RadElement)">
            <summary>
            Determines whether an element from this element tree may be displayed in the EditUIElements dialog.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadControl.GetChildAt(System.Int32)">
            <summary>
            Method used by control Code Dom serializer to access element in the collection of RootElement.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadControl.ShouldSerializeProperty(Telerik.WinControls.RadProperty)">
            <summary>
            Determines whether the specified RadProperty should be serialized.
            </summary>
            <param name="property">The RadProperty that is about to be serialized.</param>
            <returns>A value indicating whether to serialize the property value.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadControl.ShouldSerializeProperty(Telerik.WinControls.RadProperty,Telerik.WinControls.RadObject)">
            <summary>
            Determines whether the specified RadProperty should be serialized.
            Prevents theme and default values serialization.
            </summary>
            <param name="property">The RadProperty that is about to be serialized.</param>
            <param name="element">The element that owns the property.</param>
            <returns>A value indicating whether to serialize the property value.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadControl.ResetProperty(Telerik.WinControls.RadProperty,Telerik.WinControls.RadObject)">
            <summary>
            Reset the property to its default value.
            </summary>
            <param name="property">The RadProperty to be reset.</param>
            <param name="element">The RadObject owner of the property.</param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CanEditElementAtDesignTime(Telerik.WinControls.RadElement)">
            <summary>
            Determines whether an element may be edited via the EditUIElements dialog at design-time.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadControl.GetControlDefaultSize">
            <summary>
            This method is used internally!
            </summary>
            <returns>The default size for this control</returns>
        </member>
        <member name="P:Telerik.WinControls.RadControl.EnableAnalytics">
            <summary>
            Gets or sets a value indicating whether the Analytics functionality is enabled or disabled for this control.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.AnalyticsName">
            <summary>
            Gets or sets the Analytics Name associated with this control.
            By default the Control Name property is logged.
            If you want to customize the information which will be logged for this control
            set this property to a preferred value.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.EnableRadAccessibilityObjects">
            <summary>
            Gets or sets a value indicating whether the RadControls Accessible custom object is enabled.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.AccessibilityRequested">
            <summary>
            Gets or sets a value indicating whether the CodedUI Tests functionality is requested from external program such a Narrator.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.EnableCodedUITests">
            <summary>
            Gets or sets a value indicating whether the CodedUI Tests functionality is enabled.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.EnableCodedUITestsDefaultValue">
            <summary>
            Gets or sets the default value for EnableCodedUITests property.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadControl.CallAccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
            <summary>
            This method is used internally!
            </summary>
            <param name="accEvent"></param>
            <param name="childId"></param>
        </member>
        <member name="P:Telerik.WinControls.RadItemsControl.RollOverItemSelection">
            <summary>
            	Gets or sets whether the rollover items functionality of the RadItemsControl will be allowed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItemsControl.ProcessKeyboard">
            <summary>
            	Gets or sets whether the RadItemsControl processes the keyboard.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadPropertyChangedEventHandler">
            <summary>
                Represents the method that will handle the
                <see cref="E:Telerik.WinControls.RadObject.RadPropertyChanged">RadPropertyChange</see> event.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.BorderBoxStyle">
            <summary>Defines the border rendering style.</summary>
        </member>
        <member name="F:Telerik.WinControls.BorderBoxStyle.SingleBorder">
            <summary>
            All four borders share same customization, using gradient, regarding parent element's shape.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.BorderBoxStyle.FourBorders">
            <summary>
            Each of the four borders and their "shadow" colors can have disparate customization. Note that shape and gradient would NOT be applied.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.BorderBoxStyle.OuterInnerBorders">
            <summary>
            Draw inner and outer gradient borders, regarding parent element's shape. Inner and outer borders would share the specified border width.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ChildrenListOptions">
            <summary>
            Defines the options used by RadElement.GetChildren(options) method.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ChildrenListOptions.Normal">
            <summary>
            Indicates that all children are returned.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ChildrenListOptions.ZOrdered">
            <summary>
            Indicates that children are returned sorted according to their z-index.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ChildrenListOptions.ReverseOrder">
            <summary>
            Indicates that children are returned in reverse order.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ChildrenListOptions.IncludeCollapsed">
            <summary>
            Indicates that collapsed children are included.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ChildrenListOptions.IncludeOnlyVisible">
            <summary>
            Indicates that only children, which visibility is ElementVisibility.Visible, are included.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ClickMode">
            <summary>
            Defines the click modes.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ClickMode.Release">
            <summary>
            Indicates that the mouse is released.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ClickMode.Press">
            <summary>
            Indicates that the mouse is pressed.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ClickMode.Hover">
            <summary>
            Indicates that the mouse hovers.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadDropDownStyle">
            <summary>
            Defines the drop down style used by RadComboBox.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadDropDownStyle.DropDown">
            <summary>
            Indicates that the text area is editable.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadDropDownStyle.DropDownList">
            <summary>
            Indicates that the text area cannot be edited. 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ElementVisibility">
            <summary>
            Defines element's visibility.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementVisibility.Visible">
            <summary>
            Indicates that the element is visible.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementVisibility.Hidden">
            <summary>
            Indicates that the element is hidden.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementVisibility.Collapsed">
            <summary>
            Indicates that the element is collapsed.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.PerformLayoutType">
            <summary>
             
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ProgressOrientation">
            <summary>Defines the progress bar orientation.</summary>
        </member>
        <member name="F:Telerik.WinControls.ProgressOrientation.Top">
            <summary>
            Indicates top orientation.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ProgressOrientation.Bottom">
            <summary>
            Indicates bottom orientation.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ProgressOrientation.Left">
            <summary>
            Indicates left orientation.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ProgressOrientation.Right">
            <summary>
            Indicates right orientation.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadAutoSizeMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadAutoSizeMode.FitToAvailableSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadAutoSizeMode.WrapAroundChildren">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadAutoSizeMode.Auto">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadDesignCategory">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.ElementState">
            <summary>
            Defines the life cycle of a RadElement instance.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementState.Initial">
            <summary>
            The element is in its initial state.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementState.Constructing">
            <summary>
            The element is in a process of being constructed.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementState.Constructed">
            <summary>
            The element is already constructed but not loaded yet.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementState.Loading">
            <summary>
            The element is loading. That is it is initializing on the owning control.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementState.Loaded">
            <summary>
            The element is prepared for visualizing.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementState.Unloaded">
            <summary>
            Special state, indicating that the element has been loaded once and removed from the element tree.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementState.Disposing">
            <summary>
            The element is in a process of being disposed of.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementState.Disposed">
            <summary>
            The element is already disposed of.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.SepOrientation">
            <summary>
            Defines separators orientation. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.SepOrientation.Vertical">
            <summary>
            Indicates Verical separators orientation.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.SepOrientation.Horizontal">
            <summary>
            Indicates Horizontal separators orientation. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.SepOrientation.Custom">
            <summary>
            Indicates Custom separators orientation. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Formatter.#ctor">
            <summary>
            Initializes a new instance of the Formatter class.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.IHierarchicalItem">
            <summary>
            Exposes methods and properties for e hierarchical items such as 
            RadMenuItem. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IHierarchicalItem.Owner">
            <summary>
            Gets or sets the item's owner.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IHierarchicalItem.HasChildren">
            <summary>
            Gets a value indicating whether the item has children.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IHierarchicalItem.IsRootItem">
            <summary>
            Gets a value indicating whether the item is the root element if the
            hierarchy.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IHierarchicalItem.HierarchyParent">
            <summary>
            Gets or sets the item's parent. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IHierarchicalItem.RootItem">
            <summary>
            Gets the root item of this item's hierarchy.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IHierarchicalItem.Next">
            <summary>
            Gets the next item.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IHierarchicalItem.Previous">
            <summary>
            Gets the previous item.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Containers.ContainerControlBase">
            <summary>
            Represents a base class for all container controls - 
            controls that contain other controls. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.#ctor">
            <summary>
            Initializes a new instance of the ContainerControlBase class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.AddEventHandler(System.Object,System.Delegate)">
            <summary> Adds a delegate to the list. </summary>
            <param name="eventKey">The object that owns the event.</param>
            <param name="handler">The delegate to add to the list.</param>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.RemoveEventHandler(System.Object,System.Delegate)">
            <summary> Removes a delegate from the list. </summary>
            <param name="eventKey">The object that owns the event.</param>
            <param name="handler">The delegate to remove from the list.</param>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.RaiseEvent(System.Object,System.EventArgs)">
            <summary> Raises the specified event. </summary>
            <param name="eventKey">The object that owns the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="E:Telerik.WinControls.Containers.ContainerControlBase.BorderStyleChanged">
            <summary>
            Occurs when the value of the BorderStyle property has changed. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.OnBorderStyleChanged(System.EventArgs)">
            <summary>
            Raises the BorderStyleChanged event. 
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="P:Telerik.WinControls.Containers.ContainerControlBase.CreateParams">
            <summary>
            Encapsulates the information needed when creating a control.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Containers.ContainerControlBase.BorderStyle">
            <summary>
            Specifies the border style for a control. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Containers.ContainerControlBase.DefaultMargin">
            <summary>
            Gets the space, in pixels, that is specified by default between controls.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Containers.ContainerControlBase.DefaultPadding">
            <summary>
            Gets the internal spacing, in pixels, of the contents of a control. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Containers.ContainerControlBase.SizeWeight">
            <summary>
            this is the statistical weight of the container which is taken into account
            when the contaner participates in a layout chain.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.CreateControlsInstance">
            <summary>
            Overrides Control.CreateControlsInstance. 
            </summary>
            <returns>A new instance of ContainerControlBase.ContainerTypedControlCollection assigned to the control.</returns>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary> Raises the <see cref="E:System.Windows.Forms.Control.Layout"></see> event. </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.LayoutEventArgs"></see> containing the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.SetPropertyValue(System.Object,System.Object)">
            <summary> Sets the value of the specified property. </summary>
            <param name="key">The property whose value to set.</param>
            <param name="value">An object representing the value to assign to the property.</param>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.GetPropertyValue(System.Object)">
            <summary> Retrieves the value of the specified property. </summary>
            <param name="key">The property whose value to retrieve.</param>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.RemovePropertyValue(System.Object)">
            <summary> Removes the specified property from the properties collection. </summary>
            <param name="key">The property to remove.</param>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.IsPropertyDefined(System.Object)">
            <summary> Retrieves a boolean value indicating if the specified property has been explicitly set. </summary>
            <param name="key">The property to evaluate.</param>
        </member>
        <member name="T:Telerik.WinControls.MouseHoverTimer">
            <summary>
            Represents a mouse timer.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadProperty">
            <summary>
            Represents a property. Supports telerik dependency properties system by
            encapsulating a property of a certain RadElement instance. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadProperty.NameHash">
            <summary>
            Gets the hashcode of the Name string. Pre-computed for faster dictionary operations.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.PropertyBindingOptions.OneWay">
            <summary>
            One-way binding
            </summary>
        </member>
        <member name="F:Telerik.WinControls.PropertyBindingOptions.TwoWay">
            <summary>
            Two-way binding. Both source and target objects can modify the current value.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.PropertyBindingOptions.NoChangeNotify">
            <summary>
            No notifications are raised for the bound object.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.PropertyBindingOptions.PreserveAsLocalValue">
            <summary>
            Binding value is preserved as local upon unbind.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.IPropertyBinding">
            <summary>
            Supports methods for bound properties of two <see cref="T:Telerik.WinControls.RadObject"/> instances.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadPropertyBinding">
            <summary>
            Supports methods for general binding of properties of two
            <see cref="T:Telerik.WinControls.RadObject"/> instances.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyBinding.#ctor(Telerik.WinControls.RadObject,Telerik.WinControls.RadProperty,Telerik.WinControls.RadProperty,Telerik.WinControls.PropertyBindingOptions)">
            <summary>
            Initializes a new instance of the RadPropertyBinding class.
            </summary>
            <param name="bindingSourceObject"></param>
            <param name="fromProperty"></param>
            <param name="bindingSourceProperty"></param>
            <param name="options"></param>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyBinding.BindingSourceObject">
            <summary>
            Gets the binding source.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyBinding.CanGetValueForProperty(Telerik.WinControls.RadProperty)">
            <summary>
            
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyBinding.GetValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyBinding.ResetValue">
            <summary>
            Reset the bound properties
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyBinding.UpdateBindingSourceProperty(Telerik.WinControls.RadProperty,System.Object)">
            <summary>
            Updates the binding source property.
            </summary>
            <param name="boundProperty"></param>
            <param name="newValue"></param>
        </member>
        <member name="T:Telerik.WinControls.RadObjectType">
            <summary>
            Supports metadata for each class inherited from <see cref="T:Telerik.WinControls.RadObject"/>
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadPropertyKey">
            <summary>
            Represents a property key.   
            </summary>
        </member>
        <member name="T:Telerik.WinControls.DefaultValueOptions">
            <summary>
            Singleton.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadPropertyMetadata">
            <summary>
            Represents metadata for a RadProperty. RadPropertyMetadata describes the property. 
            For example, through DefaultValue property you can get or set the default value 
            for the property.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyMetadata.#ctor">
            <summary>Initializes a new instance of the RadPropertyMetadata class.</summary>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyMetadata.#ctor(System.Object)">
            <summary>Initializes a new instance of the RadPropertyMetadata class using the default value of the property.</summary>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyMetadata.#ctor(Telerik.WinControls.PropertyChangedCallback)">
            <summary>
            Initializes a new instance of the RadPropertyMetadata class using a property 
            changed callback.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyMetadata.#ctor(System.Object,Telerik.WinControls.PropertyChangedCallback)">
            <summary>
            Initializes a new instance of the RadPropertyMetadata class using an object 
            and a property changed callback.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyMetadata.ReadOnly">
            <summary>Gets a value indicating whether the property is read-only.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyMetadata.DefaultValue">
            <summary>Gets or sets the default value of the property.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyMetadata.IsInherited">
            <summary>Gets or sets a value indicating whether the property is inherited.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyMetadata.PropertyChangedCallback">
            <summary>
            Gets or sets the PropertyChangedCallback
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ElementLayoutData">
            <summary>
            Represents element's layout data. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ElementLayoutData.Element">
            <summary>
            Gets or sets the element. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ElementLayoutData.PerformLayoutType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ElementLayoutData.Performed">
             <summary>
            
             </summary>
        </member>
        <member name="M:Telerik.WinControls.ElementLayoutData.#ctor(Telerik.WinControls.RadElement,Telerik.WinControls.PerformLayoutType)">
            <summary>
            Initializes a new instance of the ElementLayoutData class from 
            the element and its PerformLayoutType.
            </summary>
            <param name="element"></param>
            <param name="performLayoutType"></param>
        </member>
        <member name="T:Telerik.WinControls.RadHostItem">
            <summary>
            Represents an item that contains external control. There is no limitation for the control type - could
            be any descendant of the class Control.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadHostItem.RadHostItemLastStateKey">
            <summary>
            This constant is used internally.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadHostItem.HostedControl">
            <summary>
            Gets the instance of the hosted control.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadHostItem.RouteMessages">
            <summary>
            	<para>Gets or sets whether the mouse and keyboard messages from the hosted control
                can be routed to the owner control.</para>
            </summary>
            <remarks>
            	<para>
                    You can use <see cref="P:Telerik.WinControls.RadElementTree.Control">ElementTree.Control</see> to get
                    the owner control.
                </para>
            	<para>
                    To get the hosted control use <see cref="P:Telerik.WinControls.RadHostItem.HostedControl">HostedControl</see>
                    property.
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadHostItem.CausesValidation">
            <summary>
            Gets or sets the <strong>CausesValidation</strong> property of the hosted
            control.
            </summary>
            <remarks>
                Using this property is equivalent to using
                <see cref="P:Telerik.WinControls.RadHostItem.HostedControl">HostedControl</see>.CausesValidation
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadHostItem.ClipControl">
            <summary>
            Gets or sets a value that determines whether the control should be clipped when it requires more space than available.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadHostItem.Validated">
            <summary>
            Corresponds to the hosted control's Validated event
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadHostItem.Validating">
            <summary>
            Corresponds to the hosted control's Validating event
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadHostItem.GotFocus">
            <summary>
            Occurs when the element recieves focus.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadHostItem.LostFocus">
            <summary>
            Occurs when the element loses focus.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadHostItem.UpdateControlVisibility">
            <summary>
            Updates the visibility, which is bound to the item's current IsVisible state, of the hosted control.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.DisplayStyle">
            <summary>
            Defines the display style of an item. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.DisplayStyle.None">
            <summary>
            Specifies that neither image nor text is rendered.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.DisplayStyle.Text">
                Specifies that only text is rendered.
        </member>
        <member name="F:Telerik.WinControls.DisplayStyle.Image">
            <summary>
             Specifies that only an image is rendered.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.DisplayStyle.ImageAndText">
            <summary>
             Specifies that both an image and text are to be rendered.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.GradientStyles">
            <summary>
            Defines the gradient effects: Solid, Linear,
            Radial, Glass, OfficeGlass, Gel, and Vista.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.GradientStyles.Solid">
            <summary>
            Indicates that no gradient effect is used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.GradientStyles.Linear">
            <summary>
            Indicates that linear gradient effect is used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.GradientStyles.Radial">
            <summary>
            Indicates that radial gradient effect is used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.GradientStyles.Glass">
            <summary>
            Indicates that glass gradient effect is used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.GradientStyles.OfficeGlass">
            <summary>
            Indicates that OfficeGlass gradient effect is used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.GradientStyles.OfficeGlassRect">
            <summary>
            Indicates that OfficeGlassRect gradient effect is used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.GradientStyles.Gel">
            <summary>
            Indicates that gel gradient effect is used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.GradientStyles.Vista">
            <summary>
            Indicates that vista gradient effect is used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.EvaluationForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.EvaluationForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.EvaluationForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.FillRepository">
            <summary>
            This class supports the TPF internal infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.FormattedText.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.FormattedText.#ctor(Telerik.WinControls.TextPrimitiveUtils.FormattedText)">
            <summary>
            Copy constructor
            </summary>
            <param name="prototypeFormattedText"></param>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.HtmlTag">
            <summary>
            Get or sets HTML tag of the current text block.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.FontSize">
            <summary>
            Get or sets size of the font.
            Note: recreate the font
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.Image">
            <summary>
            Get or sets Image for the current text block
            Current block should be named Image block
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.BlockSize">
            <summary>
            Get or sets the Size of current text block
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.ContentAlignment">
            <summary>
            Gets or sets the content alignment.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.FontStyle">
            <summary>
            Gets or sets the font style.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.FontColor">
            <summary>
            Gets or sets the font color.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.FontName">
            <summary>
            Gets or sets the font name.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.BgColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.Text">
            <summary>
            Get or set the text.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.Link">
            <summary>
            Gets or sets the link that is opened when the item is clicked.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.Offset">
            <summary>
            Gets or sets the offset of the text.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.OffsetSize">
            <summary>
            Gest the offset size of the text.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.Number">
            <summary>
            Gets or sets the number used in ordered list with numbering.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.ShouldDisplayBullet">
            <summary>
            Gets or sets a value indicating whether to display a bullet.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.BulletFontName">
            <summary>
            Gets or sets the font name of the bullets.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.BulletFontStyle">
            <summary>
            Gets or sets the font style of the bullets.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.BulletFontSize">
            <summary>
            Gets or sets the font size of the bullets.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.ListType">
            <summary>
            Gets or sets the list type. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.StartNewLine">
            <summary>
            Gets or sets a value indicating whether to start a new line.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.BulletSize">
            <summary>
            Gets the size of bullets.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.IsClosingTag">
            <summary>
            Gets or sets a value indicating whether is closing tag.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.DrawingRectangle">
            <summary>
            Gets the drawing rectangle.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.BaseLine">
            <summary>
            Gets or sets the baseline.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.FormattedText.GetTextBlockSize(System.Boolean,System.Windows.Forms.TextFormatFlags)">
            <summary>
            Gets the size of the text block.
            </summary>
            <param name="useCompatibleTextRendering"></param>
            <param name="textFormatFlags"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.FormattedText.GetBaseLineFromFont(System.Drawing.Font)">
            <summary>
            GetBaseLineFromFont Method
            </summary>
            <param name="font">A Font</param>
            <returns>A float</returns>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.FormattedTextBlock.ArrangeLines(System.Boolean,System.Drawing.SizeF)">
            <summary>
            Move text blocks to next line if there is not avaible space for the current line
            </summary>
            <param name="textWrap"></param>
            <param name="proposedSize"></param>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.FormattedTextBlock.GetTextSize(System.Drawing.SizeF,System.Boolean,System.Drawing.StringFormat,System.Windows.Forms.TextFormatFlags,System.Boolean)">
            <summary>
            Calculate Size of the whole FormattedTextBlock
            </summary>
            <param name="proposedSize"></param>
            <param name="useCompatibleTextRendering"></param>
            <param name="sf"></param>
            <param name="textFormatFlags"></param>
            <param name="textWrap"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.FormattedTextBlock.GetTextLineSize(Telerik.WinControls.TextPrimitiveUtils.TextLine)">
            <summary>
            Calculate text size of the Single Text Line
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.FormattedTextBlock.PaintFormatTextBlock(Telerik.WinControls.Paint.IGraphics,System.Drawing.RectangleF,System.Boolean,System.Drawing.StringFormat,System.Windows.Forms.TextFormatFlags,System.Boolean,System.Boolean)">
            <summary>
            Draw whole FormattedTextBlock
            </summary>
            <param name="graphics"></param>
            <param name="paintingRectangleParam"></param>
            <param name="useCompatibleTextRendering"></param>
            <param name="format"></param>
            <param name="flags"></param>
            <param name="textWrap"></param>
            <param name="clipText"></param>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.FormattedTextBlock.MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse is up the element.
            </summary>        
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.FormattedTextBlock.MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is moved over the element.
            </summary>        
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.TextLine.BaseLine">
            <summary>
            BaseLine Property
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.LinkColor">
            <summary>
            Gets or sets the color used to display a non-visited hyperlink.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.LinkClickedColor">
            <summary>
            Gets or sets the color used to display a visited hyperlink.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.IsHTMLMode(System.String)">
            <summary>
            check is the Text contains html command
            </summary>
            <param name="text">text to be checked</param>
            <returns>text to check</returns>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.Parse(System.String,System.Drawing.Color,System.String,System.Single,System.Drawing.ContentAlignment)">
            <summary>
            Main function for parsing process
            </summary>
            <param name="text">text to parse</param>
            <param name="baseForeColor">base Font color</param>
            <param name="baseFont">base font</param>
            <param name="fontSize">base font size</param>
            <param name="aligment">base textaligment</param>
            <returns>Formatted text block that contains the whole structure</returns>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.Parse(System.String,System.Drawing.Color,System.String,System.Single,System.Drawing.FontStyle,System.Drawing.ContentAlignment)">
            <summary>
            Main function for parsing process
            </summary>
            <param name="text">text to parse</param>
            <param name="baseForeColor">base Font color</param>
            <param name="baseFont">base font</param>
            <param name="fontSize">base font size</param>
            <param name="aligment">base textaligment</param>
            <param name="fontStyle"> base font style etc. Regular, Bold</param>
            <returns>Formatted text block that contains the whole structure</returns>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.ApplyHTMLSettingsFromTag(Telerik.WinControls.TextPrimitiveUtils.FormattedText@,Telerik.WinControls.TextPrimitiveUtils.FormattedText,System.String,Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.TinyHTMLParsersData,System.Boolean@,System.String@)">
            <summary>
            Parse single HTML tag and apply settings
            </summary>
            <param name="currentFormattedText"></param>
            <param name="prevText"></param>
            <param name="htmlTag"></param>
            <param name="parserData"></param>
            <param name="shouldProduceNewLine"></param>
            <param name="text"></param>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.ProcessToken(Telerik.WinControls.TextPrimitiveUtils.FormattedText@,Telerik.WinControls.UI.StringTokenizer,System.Boolean,Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.TinyHTMLParsersData,System.Boolean@)">
            <summary>
            process single token from Html string
            </summary>
            <param name="prevItem"></param>
            <param name="tokenizer"></param>
            <param name="hasOpenTag"></param>
            <param name="parserData"></param>
            <param name="shouldProduceNewLine"></param>
            <returns>a FormattedText object</returns>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.ProcessFontStyle(System.Drawing.FontStyle,System.Drawing.FontStyle,System.Boolean)">
            <summary>
            Handles &lt;u&gt;&lt;i&gt;&lt;b&gt; tags
            </summary>
            <param name="currentStyle"></param>
            <param name="newStyle"></param>
            <param name="removeNewStyle"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.ParseColor(System.String,System.Nullable{System.Drawing.Color})">
            <summary>
            Handles &lt;color=value&gt;
            </summary>
            <param name="tag"></param>
            <param name="oldColor"></param>        
            <returns></returns>        
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.ParseSize(System.String,System.Single)">
            <summary>
            Handles &lt;size=[+|-] valie&gt;
            </summary>
            <param name="htmlTag"></param>
            <param name="startValue"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.ParseFont(System.String)">
            <summary>
            Handles &lt;font=value&gt;
            </summary>
            <param name="htmlTag"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.Awesome_Brands_Regular">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.Awesome_Regular">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.Awesome_Solid">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.extToFit">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.FitBounds">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.FitShape">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.imageClosed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.imageOpened">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.MenuIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.ProgressIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.RadControls">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.Roboto_Medium">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.Roboto_Regular">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.snapToCtrlBtn">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.snapToCurveBtn">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.snapToExtBtn">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.snapToGridBtn">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.TelerikWebUI">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.WebComponentsIcons">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.WinFormsIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.WinFormsLogo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.IRadServiceProvider">
            <summary>
            Interface provides methods for registering and accessing <see cref="T:Telerik.WinControls.RadService"/>.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.IRadServiceProvider.GetService``1">
            <summary>
            Retrieves currently registered <see cref="T:Telerik.WinControls.RadService">Service</see> by the specified type.
            </summary>
            <typeparam name="T">A type derived from <see cref="T:Telerik.WinControls.RadService"/></typeparam>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.IRadServiceProvider.RegisterService(Telerik.WinControls.RadService)">
            <summary>
            Registers the specified service with ourselves.
            </summary>
            <param name="service">An instance of type derived from <see cref="T:Telerik.WinControls.RadService"/>.</param>
        </member>
        <member name="T:Telerik.WinControls.RadService">
            <summary>
            Represents abstact class that provides service capabilities.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadService.#ctor">
            <summary>
            Initializes a new instance of the RadService class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadService.CanOperate">
            <summary>
            Determines whether the service is operational and may perform actions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadService.Start(System.Object)">
            <summary>
            Starts the Service.
            If the service was previously paused, it should be re-started with the Resume method.
            </summary>
            <param name="context">A context passed to the service.</param>
        </member>
        <member name="M:Telerik.WinControls.RadService.Stop(System.Boolean)">
            <summary>
            Stops currently working or previously stopped service.
            </summary>
            <param name="commit">True to indicate that current operation ended successfully, false otherwise.</param>
        </member>
        <member name="M:Telerik.WinControls.RadService.Pause">
            <summary>
            Pauses a currently running operation.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadService.Resume">
            <summary>
            Resumes previously paused operation.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadService.CanStart(System.Object)">
            <summary>
            Determines whether the service may be started.
            Validation is as follows:
            1. Check whether Enabled is true.
            2. Check the context through IsContextValid method. An exception is thrown if context is invalid.
            3. Checks the current state - it should be Initial or Stopped.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadService.OnStarted">
            <summary>
            Notifies that the service has been successfully started.
            Allows inheritors to perform some additional logic upon start.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadService.OnStarting(Telerik.WinControls.RadServiceStartingEventArgs)">
            <summary>
            Notifies that a start request has occured. Cancelable.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadService.OnStopped">
            <summary>
            Notifies that a running operation has stopped.
            Allows inheritors to perform some additional logic upon stop.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadService.OnStopping(Telerik.WinControls.RadServiceStoppingEventArgs)">
            <summary>
            Notifies that a stop request has occured. Cancelable.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadService.IsContextValid(System.Object)">
            <summary>
            Evaluates the provided context. Some services may not operate without certain context provided.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadService.PerformStart">
            <summary>
            Performs the core Start logic.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadService.PerformStop">
            <summary>
            Stops the service. Performs the core logic.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadService.Abort">
            <summary>
            Aborts the current operation without applying any changes.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadService.Commit">
            <summary>
            Ends the current operation and applies all changes.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadService.PerformResume">
            <summary>
            Performs the core Resume logic.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadService.PerformPause">
            <summary>
            Performs the core Pause logic.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadService.SetContext(System.Object)">
            <summary>
            Sets the provided object as the current context.
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:Telerik.WinControls.RadService.Context">
            <summary>
            Gets the context associated with the current operation.
            This member is valid only while the Service is started or paused.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadService.Starting">
            <summary>
            Raised when the service is about to be started.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadService.Started">
            <summary>
            Raised right after the service is started.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadService.Stopping">
            <summary>
            Raised when the service is about to be stopped.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadService.Stopped">
            <summary>
            Raised when the service is stopped.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadService.AvailableAtDesignTime">
            <summary>
            Determines whether the service is available at design-time. False by default.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadService.State">
            <summary>
            Gets the current state of the service.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadService.Name">
            <summary>
            Gets the name of the service.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadService.Enabled">
            <summary>
            Determines whether the Service is enabled (may be started).
            If the Service is working and its is disabled, it will end its current operation.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadService.OnEnabledChanged">
            <summary>
            Notifies for a change in the Enabled state.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadServiceStartingEventArgs">
            <summary>
            Represents event data when RadService is starting.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadServiceStartingEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.RadServiceStartingEventArgs">RadServiceStartingEventArgs</see> class.
            </summary>
            <param name="context">The context that is passed prior to the Start request.</param>
        </member>
        <member name="P:Telerik.WinControls.RadServiceStartingEventArgs.Context">
            <summary>
            Gets the Context, passed to the service as a start parameter.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadServiceState">
            <summary>
            Represents the states of <see cref="T:Telerik.WinControls.RadService"/>
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadServiceState.Initial">
            <summary>
            The state of <see cref="T:Telerik.WinControls.RadService"/>, when is created.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadServiceState.Stopped">
            <summary>
            The state of <see cref="T:Telerik.WinControls.RadService"/>, when is stopped.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadServiceState.Working">
            <summary>
            The state of <see cref="T:Telerik.WinControls.RadService"/>, when is working.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadServiceState.Paused">
            <summary>
            The state of <see cref="T:Telerik.WinControls.RadService"/>, when is paused.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadServiceStoppingEventArgs">
            <summary>
            Represents event data when RadService is stopping.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadServiceStoppingEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.RadServiceStoppingEventArgs">RadServiceStoppingEventArgs</see> class.
            </summary>
            <param name="commit"></param>
        </member>
        <member name="P:Telerik.WinControls.RadServiceStoppingEventArgs.Commit">
            <summary>
            Gets or sets the Commit parameter of the Stop request.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.PreviewDragHintEventArgs.UseDefaultHint">
            <summary>
            Determines whether a default hint will be generated. Usually this is a snapshot of the dragged item.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadDragEventArgs.DragInstance">
            <summary>
            Gets the currently dragged instance.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.PreviewDragContextEventArgs.Context">
            <summary>
            Gets or sets the context associated with a drag operation.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.PreviewDragStartEventArgs.CanStart">
            <summary>
            Determines whether a drag operation may start.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.PreviewDropTargetEventArgs.DropTarget">
            <summary>
            Gets or sets the drop target for the operation.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadDragDropService">
            <summary>
            Represents a service that manages drag and drop actions.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadDragDropService.#ctor">
            <summary>
            Initializes a new instance of the DragDropService class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadDragDropService.CanCommit">
            <summary>
            Determines whether a drop operation will be committed (a valid drop target is found).
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadDragDropService.ValidCursor">
            <summary>
            Gets or sets the cursor to be used when a valid drop target is hit-tested.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadDragDropService.InvalidCursor">
            <summary>
            Gets or sets the cursor to be used when a valid drop target is hit-tested.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadDragDropService.UseDefaultPreview">
            <summary>
            Determines whether a default preview is generated for a ISupportDrag instance if its GetPreview method returns null.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadDragDropService.DropTarget">
            <summary>
            Gets current drop target, where the mouse cursor points.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadDragDropService.DropLocation">
            <summary>
            Gets the current drop location in the context of the current target.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadDragDropService.HintWindow">
            <summary>
            Gets the Hint window.
            </summary>
            <value>The hint window.</value>
        </member>
        <member name="M:Telerik.WinControls.RadDragDropService.BeginDrag(System.Drawing.Point,Telerik.WinControls.ISupportDrag)">
            <summary>
            Begins a drag pass. Allows for service automation.
            </summary>
            <param name="mouseBeginPoint">The position of the mouse cursor in screen coordinates.</param>
            <param name="draggedObject">An instance of IDraggable that is dragged.</param>
        </member>
        <member name="M:Telerik.WinControls.RadDragDropService.EndDrag(System.Drawing.Point,Telerik.WinControls.RadControl)">
            <summary>
            Ends a drag pass. Allows for service automation.
            </summary>
            <param name="mouseEndPoint">The end position of the mouse cursor in screen coordinates.</param>
            <param name="targetControl">An instance of <see cref="T:Telerik.WinControls.RadControl"/>.</param>
        </member>
        <member name="M:Telerik.WinControls.RadDragDropService.EndDrag">
            <summary>
            Ends a drag pass. Allows for service automation.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadDragDropService.DoMouseMove(System.Drawing.Point)">
            <summary>
            Mocks a mouse move to a specific point. Allows for service automation.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ISupportDrag">
            <summary>
            Exposes methods and properties for draggable elements.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ISupportDrag.CanDrag(System.Drawing.Point)">
            <summary>
            Determines that the element is availble for dragging.
            </summary>
            <param name="dragStartPoint">An instance of <see cref="T:System.Drawing.Point"/> which represents a dragging start location.</param>
            <returns>True if the object can be dragged, otherwise false.</returns>
        </member>
        <member name="M:Telerik.WinControls.ISupportDrag.GetDataContext">
            <summary>
            Gets the assosiated with dragged element data context.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ISupportDrag.GetDragHint">
            <summary>
            Gets the image used by the DragDropService to indicate that the element is being dragged.
            Usually this is a snapshot of the element itself.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.ISupportDrag.AllowDrag">
            <summary>
            Determines whether this instance may enter drag operation.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ISupportDrop">
            <summary>
            Exposes methods for drop targets
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ISupportDrop.AllowDrop">
            <summary>
            Determines whether the instance allows for drop operations.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ISupportDrop.DragDrop(System.Drawing.Point,Telerik.WinControls.ISupportDrag)">
            <summary>
            Completes drag-drop operation of instance of the IDraggable over the specified target.
            </summary>
            <param name="dropLocation">An instance of <see cref="T:System.Drawing.Point"/> which represents a drop location.</param>
            <param name="dragObject">An instance of the IDraggable which is dragged over the target.</param>
        </member>
        <member name="M:Telerik.WinControls.ISupportDrop.DragOver(System.Drawing.Point,Telerik.WinControls.ISupportDrag)">
            <summary>
            
            </summary>
            <param name="currentMouseLocation">The current position of the mouse cursor</param>
            <param name="dragObject">An instance of the IDraggable which is dragged over the specified target.</param>
            <returns>True if the operation finished successfully, otherwise false.</returns>
        </member>
        <member name="M:Telerik.WinControls.ISupportDrop.DragEnter(System.Drawing.Point,Telerik.WinControls.ISupportDrag)">
            <summary>
            Drop operations to occur in the drop target. Called when the cursor first enters the specified target.
            </summary>
            <param name="currentMouseLocation">The current position of the mouse cursor</param>
            <param name="dragObject">An instance of the IDraggable which is dragged over the target.</param>
        </member>
        <member name="M:Telerik.WinControls.ISupportDrop.DragLeave(System.Drawing.Point,Telerik.WinControls.ISupportDrag)">
            <summary>
            Special behavior when the drag operation leaves the specified target.
            </summary>
            <param name="oldMouseLocation">The old position of the mouse cursor</param>
            <param name="dragObject">An instance of the IDraggable which is dragged over the target.</param>
        </member>
        <member name="P:Telerik.WinControls.RadDragDropFeedbackEventArgs.PreviewImage">
            <summary>
            Gets or sets the image to be used as a preview while dragging.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadDragDropFeedbackEventArgs.Cursor">
            <summary>
            Gets or sets the cursor to be used while dragging.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ElementPropertyOptions">
            <summary>
            Defines the element's property options.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.None">
            <summary>
            Indicates that there are no property options.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.CanInheritValue">
            <summary>
            Indicates that the property can inherit a value.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.InvalidatesLayout">
            <summary>
            Indicates that the property invalidates the layout.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.AffectsLayout">
            <summary>
            Indicates that the property affects the layout.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.AffectsMeasure">
            <summary>
            Invalidates measure
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.AffectsArrange">
            <summary>
            Invalidates arrange
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.AffectsParentMeasure">
            <summary>
            Invalidates parent's measure
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.AffectsParentArrange">
            <summary>
            Invalidates parent's arrange
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.AffectsDisplay">
            <summary>
            Indicates that the property affects the display.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.AffectsTheme">
            <summary>
            Indicates that the property affects the theme.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.Cancelable">
            <summary>
            The property supports cancellation.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadItemOwnerCollection">
            <summary>
                <para>
                  A collection that stores <see cref='T:Telerik.WinControls.RadItem'/> objects.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItemOwnerCollection.#ctor(Telerik.WinControls.RadElement)">
            <summary>
                <para>
                  Initializes a new instance of <see cref='T:Telerik.WinControls.RadItemCollection'/>.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItemOwnerCollection.#ctor">
            <summary>Initializes a new instance of the RadItemCollection class.</summary>
        </member>
        <member name="M:Telerik.WinControls.RadItemOwnerCollection.#ctor(Telerik.WinControls.RadItemOwnerCollection)">
            <summary>
                <para>
                  Initializes a new instance of <see cref='T:Telerik.WinControls.RadItemCollection'/> based on another <see cref='T:Telerik.WinControls.RadItemCollection'/>.
               </para>
            </summary>
            <param name='value'>
                  A <see cref='T:Telerik.WinControls.RadItemCollection'/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.WinControls.RadItemOwnerCollection.#ctor(Telerik.WinControls.RadItem[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref='T:Telerik.WinControls.RadItemCollection'/> containing any array of <see cref='T:Telerik.WinControls.RadItem'/> objects.
               </para>
            </summary>
            <param name='value'>
                  A array of <see cref='T:Telerik.WinControls.RadItem'/> objects with which to intialize the collection
            </param>
        </member>
        <member name="P:Telerik.WinControls.RadItemOwnerCollection.Owner">
            <summary>
            Gets or sets the owner of the collection.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.TextChangingEventHandler">
            <summary>
            Represents the method that will handle the TextChanging event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Telerik.WinControls.RadItem">
            <summary>
            	Represents the item which could be added to an ItemsCollection and can be selected, deleted or moved during VS design time.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadItem.RadItemLastStateKey">
            <summary>
            This constant is used internally.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.TextChanging">
            <summary>
            	Occurs when the Text property value is about to be changed.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.TextChanged">
            <summary>
            	Occurs when the Text property value changes.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.TextOrientationChanged">
            <summary>
            	Occurs when the TextOrientation property value changes.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.FlipTextChanged">
            <summary>
            	Occurs when the FlipText property value changes.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.UseDefaultDisabledPaint">
            <summary>
            	Gets or sets whether the item should use the default way for painting the item when disabled (making it gray) or whether
            	the disabled appearance should be controlled by the theme.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.TextOrientation">
            <summary>
            	Specifies the orientation of the text associated with this item. Whether it should appear horizontal or vertical.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.FlipText">
            <summary>
            	Specifies the text associated with this item will be flipped.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.Text">
            <summary>
            	Gets or sets the text associated with this item. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.Selectable">
            <summary>
            Gets a value indicating whether the item can be selected.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.DesignTimeAllowDrop">
            <summary>
            This property is used internally.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.DesignTimeAllowDrag">
            <summary>
            This property is used internally.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.KeyDown">
            <summary>
            Occurs when the RadItem has focus and the user presses a key down
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.KeyPress">
            <summary>
            Occurs when the RadItem has focus and the user presses a key
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.KeyUp">
            <summary>
            Occurs when the RadItem has focus and the user releases the pressed key up
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.ZoomGesture">
            <summary>
            Occurs when a zoom gesture was sent by a touch input device.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.RotateGesture">
            <summary>
            Occurs when a rotate gesture was sent by a touch input device.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.PanGesture">
            <summary>
            Occurs when a pan gesture was sent by a touch input device.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.TwoFingerTapGesture">
            <summary>
            Occurs when a two-finger-tap gesture was sent by a touch input device.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.PressAndTapGesture">
            <summary>
            Occurs when a press-and-tap gesture was sent by a touch input device.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyDown event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the KeyPress event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyUp event.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnTextChanging(Telerik.WinControls.TextChangingEventArgs)">
            <summary>
            	Raises the <see cref="E:Telerik.WinControls.RadItem.TextChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Telerik.WinControls.TextChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnTextChanged(System.EventArgs)">
            <summary>
            	Raises the <see cref="E:Telerik.WinControls.RadItem.TextChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnTextOrientationChanged(System.EventArgs)">
            <summary>
            	Raises the <see cref="E:Telerik.WinControls.RadItem.TextOrientationChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnFlipTextChanged(System.EventArgs)">
            <summary>
            	Raises the <see cref="E:Telerik.WinControls.RadItem.FlipTextChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.PaintBorderHighlight(Telerik.WinControls.Paint.IGraphics)">
            <summary>
            Paints the border highlight.
            </summary>
            <param name="screenRadGraphics">The screen RAD graphics.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.ContainsText">
            <summary>
            	Determines if the item displays any text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadItem.ProcessMnemonic(System.Char)">
            <summary>
            This method is used internally!
            </summary>
            <param name="charCode"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadItem.CallRaiseKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.CallRaiseKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.CallRaiseKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Telerik.WinControls.RadItem.VisualState">
            <summary>
            Gets or sets string representing the current visual state of the Item which is used by themes to determine the appearance of the item and its child elements
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItem.ReplaceDefaultDescriptors(System.ComponentModel.PropertyDescriptorCollection)">
            <summary>
            Add the VisualState property if we are in the context of RadControlSpy.
            </summary>
            <param name="props"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnGesture(Telerik.WinControls.GestureEventArgs)">
            <summary>
            Calls the appropriate gesture event according to the GestureType property of the event arguments.
            </summary>
            <param name="args">The event arguments.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnTwoFingerTapGesture(Telerik.WinControls.GestureEventArgs)">
            <summary>
            Fires the TwoFingerTapGesture event.
            </summary>
            <param name="args">The arguments for the TwoFingerTapGesture event.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnPressAndTapGesture(Telerik.WinControls.PressAndTapGestureEventArgs)">
            <summary>
            Fires the PressAndTapGesture event.
            </summary>
            <param name="args">The arguments for the PressAndTapGesture event.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnPanGesture(Telerik.WinControls.PanGestureEventArgs)">
            <summary>
            Fires the PanGesture event.
            </summary>
            <param name="args">The arguments for the PanGesture event.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnRotateGesture(Telerik.WinControls.RotateGestureEventArgs)">
            <summary>
            Fires the RotateGesture event.
            </summary>
            <param name="args">The arguments for the RotateGesture event.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnZoomGesture(Telerik.WinControls.ZoomGestureEventArgs)">
            <summary>
            Fires the ZoomGesture event.
            </summary>
            <param name="args">The arguments for the ZoomGesture event.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.CanDragCore(System.Drawing.Point)">
            <summary>
            Determines whether the element may be dragged.
            </summary>
            <param name="dragStartPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadItem.GetDragContextCore">
            <summary>
            Gets the context, associated with a drag operation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadItem.GetDragHintCore">
            <summary>
            Gets the image to be used as a hint when this element is being dragged.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.RadItem.AllowDrag">
            <summary>
            Determines whether the element may be dragged by a RadDragDropService instance.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItem.ProcessDragDrop(System.Drawing.Point,Telerik.WinControls.ISupportDrag)">
            <summary>
            Core logic when a drag-drop is performed over this element.
            Allows inheritors to provide their own implementations.
            </summary>
            <param name="dropLocation"></param>
            <param name="dragObject"></param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.ProcessDragOver(System.Drawing.Point,Telerik.WinControls.ISupportDrag)">
            <summary>
            Determines whether the element may be treated as a drop target during drag-and-drop operation.
            </summary>
            <param name="mousePosition"></param>
            <param name="dragObject"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadItem.ProcessDragEnter(System.Drawing.Point,Telerik.WinControls.ISupportDrag)">
            <summary>
            Allows the element to perform additional action upon mouse entering its bounds upon a drag-and-drop operation.
            </summary>
            <param name="mousePosition"></param>
            <param name="dragObject"></param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.ProcessDragLeave(System.Drawing.Point,Telerik.WinControls.ISupportDrag)">
            <summary>
            Allows the element to perform additional action upon mouse leaving its bounds upon a drag-and-drop operation.
            </summary>
            <param name="oldMousePosition"></param>
            <param name="dragObject"></param>
        </member>
        <member name="P:Telerik.WinControls.RadItem.AllowDrop">
            <summary>
            Determines whether the element may accept a drop operation.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.Shortcuts">
            <summary>
            Gets the collection of all <see cref="T:Telerik.WinControls.RadShortcut">RadShortcut</see> instances registered with this item.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.AccessibleDescription">
            <summary>
            Gets or sets the description that will be reported to accessibility client applications.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.AccessibleName">
            <summary>
            Gets or sets the name of the control for use by accessibility client applications.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.AccessibleRole">
            <summary>
            Gets or sets the accessible role of the item, which specifies the type of user interface element 
            of the item.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItem.SetThemeValueOverride(Telerik.WinControls.RadProperty,System.Object,System.String)">
            <summary>
            Applies the provided value as an override of the theme setting 
            for the specified property in the specified state.
            </summary>
            <param name="property">The property to override.</param>
            <param name="value">The value to override the theme setting with.</param>
            <param name="state">The VisualState of the item for which the setting will be applied.
            States can be combined using "." (dot). To see a list of the available states for this
            element, use the GetAvailableVisualStates method.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.SetThemeValueOverride(Telerik.WinControls.RadProperty,System.Object,System.String,System.String)">
            <summary>
            Applies the provided value as an override of the theme setting 
            for the specified property in the specified state.
            </summary>
            <param name="property">The property to override.</param>
            <param name="value">The value to override the theme setting with.</param>
            <param name="state">The VisualState of the item for which the setting will be applied.
            States can be combined using "." (dot). To see a list of the available states for this
            element, use the GetAvailableVisualStates method.</param>        
            <param name="childElementClass">The value of the Class property of the child element for which
            the override stands. (e.g. ButtonFill, ButtonBorder, etc.)</param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.SetThemeValueOverride(Telerik.WinControls.RadProperty,System.Object,System.String,System.Type)">
            <summary>
            Applies the provided value as an override of the theme setting 
            for the specified property in the specified state.
            </summary>
            <param name="property">The property to override.</param>
            <param name="value">The value to override the theme setting with.</param>
            <param name="state">The VisualState of the item for which the setting will be applied.
            States can be combined using "." (dot). To see a list of the available states for this
            element, use the GetAvailableVisualStates method.</param>       
            <param name="childElementType">The type of the child element for which
            the override stands. (e.g. typeof(FillPrimitive), typeof(BorderPrimitive), etc.)</param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.ResetThemeValueOverride(Telerik.WinControls.RadProperty)">
            <summary>
            Resets all overrides for the theme settings of a given property.
            </summary>
            <param name="property">The property to reset overrides for.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.ResetThemeValueOverride(Telerik.WinControls.RadProperty,System.String)">
            <summary>
            Resets all overrides for the theme settings of a given property and a given state.
            </summary>
            <param name="property">The property to reset overrides for.</param>
            <param name="state">The state to reset.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.ResetThemeValueOverrides">
            <summary>
            Resets all theme override settings for this element.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItem.SuspendApplyOfThemeSettings">
            <summary>
            Suspends the apply of theme settings.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItem.ResumeApplyOfThemeSettings">
            <summary>
            Resumes the apply of theme settings.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItem.GetAvailableVisualStates">
            <summary>
            Gets the available visual states for this item. Visual states can be combined using "." (dot).
            </summary>
            <returns>A list with the available visual states for this element.</returns>
        </member>
        <member name="P:Telerik.WinControls.RadItem.ContainsMnemonic">
            <summary>
            This property is used internally!
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.EnableAnalytics">
            <summary>
            Gets or sets a value indicating whether the Analytics functionality is enable or disbale for this item.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadElementZOrderComparer">
            <summary>
            Represents a Z-order comparer. The Z-Order determines the overlapping of the 
            RadElements.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElementZOrderComparer.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the RadElementZOrderComparer class.
            </summary>
            <param name="reverse"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElementZOrderComparer.Compare(Telerik.WinControls.RadElement,Telerik.WinControls.RadElement)">
            <summary>
            Compares the Z-order of the two RadElement arguments. Retrieves 0 if the
            two elements are equal, positive number if the first element has a greater 
            Z-Order than the second argument, and a negative number otherwise. 
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.ReadOnlyControlCollection">
            <exclude/>
        </member>
        <member name="F:Telerik.WinControls.RootRadElement.AutoSizeChangedEvent">
            <summary>
            Tunnels when the AutoSize property of RadControl changes in order to notify any children that should take special actions.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RootRadElement.StretchChangedEvent">
            <summary>
            Tunnels when some of the stretch properties (horizontal or vertical) has changed in order to notify any children that should take special actions.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RootRadElement.RootLayoutSuspendedEvent">
            <summary>
            Tunnels when the layout has been suspended in order to notify any children that should take special actions in this case - like RadHostItem.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RootRadElement.RootLayoutResumedEvent">
            <summary>
            Tunnels when the layout has been resumed in order to notify any children that should take special actions in this case - like RadHostItem.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RootRadElement.ForeColor">
            <summary>
            Gets or sets the forecolor. Color type represents an ARGB color.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RootRadElement.UseCompatibleTextRendering">
            <summary>
            Determines whether to use compatible text rendering engine (GDI+) or not (GDI). 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RootRadElement.ControlBounds">
            <summary>
                Gets or sets a value corresponding to the bounding rectangle of the owning Control.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RootRadElement.ApplyShapeToControl">
            <summary>
            Gets or sets value indicating whether the shape set to the root element would be applied as a region to 
            the RadControl that contains the element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RootRadElement.DisableControlSizeSet">
            <summary>
            This property is used internally!
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RootRadElement.ControlDefaultSize">
            <summary>
            When set, replaces the default control size.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RootRadElement.SaveCurrentStretchModeAsDefault">
            <summary>
            This method is used internally.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RootRadElement.NotifyControlImageListChanged">
            <summary>
            This method is used internally.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RootRadElement.Paint(Telerik.WinControls.Paint.IGraphics,System.Drawing.Rectangle)">
            <summary>
            Paints the RootElement and its element tree. Intended for use by RadControl inheritors.
            </summary>
            <param name="graphics">IGrpahics object to be used to paint elements</param>
            <param name="clipRectangle">Clipping rectangle to be painted. Only those elements from the tree which intersect with this rectangle will be painted.</param>
        </member>
        <member name="M:Telerik.WinControls.RootRadElement.Paint(Telerik.WinControls.Paint.IGraphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Paints the RootElement and its element tree. Intended for use by RadControl inheritors.
            </summary>
            <param name="graphics">IGrpahics object to be used to paint elements</param>
            <param name="clipRectangle">Clipping rectangle to be painted. Only those elements from the tree which intersect with this rectangle will be painted.</param>
            <param name="useRelativeTransformation"></param>
        </member>
        <member name="T:Telerik.WinControls.AttachedPropertyUsage">
            <summary>
            Defines the usage of a given attached property.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.AttachedPropertyUsage.Self">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.AttachedPropertyUsage.Children">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.AttachedPropertyUsage.Descendants">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.AttachedPropertyUsage.Anywhere">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AlternativeExpressionStorageCallback">
            <summary>
            Represents the method that will be an alternative expression storage callback.
            </summary>
            <param name="d"></param>
            <param name="dp"></param>
            <param name="metadata"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.CoerceValueCallback">
            <summary>
            Represents the method that will be a coerce value callback.
            </summary>
            <param name="d"></param>
            <param name="baseValue"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.PropertyChangedCallback">
            <summary>
            Represents the method that will be a property changed callback.
            </summary>
            <param name="d">
            
            </param>
            <param name="e">
            Initializes the property change arguments.
            </param>
        </member>
        <member name="T:Telerik.WinControls.ValueSource">
            <summary>
            Defines the source of current property value. See also
            %RadObject.GetValueSource:<br/>
            Telerik.WinControls.RadObject.GetValueSource%.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueSource.Unknown">
            <summary>
            Indicates that the reason is unknown.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueSource.DefaultValue">
            <summary>
            Indicates that the default value is set.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueSource.Inherited">
            <summary>
            Indicates that the property changed is inherited.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueSource.DefaultValueOverride">
            <summary>
            An overriden default value, has higher priority than Default and Inherited source.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueSource.Style">
            <summary>
            Indicates that the reason for the property change is an applied theme.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueSource.Local">
            <summary>
            Value is set locally through a CLR property setter.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueSource.PropertyBinding">
            <summary>
            Indicates that the reason for the property change is data binding.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueSource.LocalFromBinding">
            <summary>
            A value is applied through two-way binding.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueSource.Animation">
            <summary>
            Indicates that the reason for the property change is an animation effect.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ValueResetFlags">
            <summary>
            Defines a mask enumeration which is used when updating rad properties' values.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ValueUpdateResult">
            <summary>
            Defines the possible results for a property value update operation.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueUpdateResult.Updating">
            <summary>
            A composite value update is still running.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueUpdateResult.NotUpdated">
            <summary>
            There was no need of updating the property.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueUpdateResult.UpdatedChanged">
            <summary>
            The property has been successfully updated and its value has changed.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueUpdateResult.UpdatedNotChanged">
            <summary>
            The property has been successfully updated but its value has not changed.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueUpdateResult.Canceled">
            <summary>
            Update operation was canceled.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.IImageListProvider">
            <summary>
            Exposes the ImageList property. All classes that implement this interface 
            provide an image list.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IImageListProvider.ImageList">
            <summary>
            Gets the image list.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ComplexCondition">
            <summary>
            ComplexCondition evaluates two conditions related with a binary operator.
            Inherits Condition
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComplexCondition.Condition1">
            <summary>
            Gets or sets the first condition.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComplexCondition.BinaryOperator">
            <summary>
            Gets or sets the binary operator to be used for evaluating the condition.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComplexCondition.Condition2">
            <summary>
            Gets or sets the second condition.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ComplexCondition.#ctor">
            <summary>
            Initializes a new instance of the ComplexCondition class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ComplexCondition.#ctor(Telerik.WinControls.Condition,Telerik.WinControls.BinaryOperator,Telerik.WinControls.Condition)">
            <summary>
            Initializes a new instance of the ComplexCondition class from the first condition, 
            binary operator, and second condition.
            </summary>
            <param name="condition1"></param>
            <param name="binaryOperator"></param>
            <param name="condition2"></param>
        </member>
        <member name="M:Telerik.WinControls.ComplexCondition.Evaluate(Telerik.WinControls.RadObject)">
            <summary>
            Evaluates the complex condition.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ComplexCondition.ToString">
            <summary>
            Retrives a string representation of the ComplexCondition class.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.Condition">
             <summary>
            Defines a base abstract class that describes a condition which checks when to apply 
            a style rule. SimpleCondition evaluates when a property of an Element equals a
            certain value. RoutedEventCondition evaluates if a routed event is currently 
            tunneling/bubbling through an Element. ComplexCondition evaluates two conditions 
            related with a binary operator.
             </summary>
        </member>
        <member name="M:Telerik.WinControls.Condition.Evaluate(Telerik.WinControls.RadObject)">
            <summary>
            Retrieves a value indicating whether to apply a style rule.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.Condition.AffectedProperties">
            <summary>
            Retrieves a list of the affected properties of the current condition.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Condition.AffectedEvents">
            <summary>
            Retrieves a list of the affected events of the current condition.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.BinaryOperator">
            <summary>
            A binary opeartor used by the CompolexCondition class.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.BinaryOperator.AndOperator">
            <summary>
            Indicates conjunction.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.BinaryOperator.OrOperator">
            <summary>
            Indicates disjunction.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.BinaryOperator.XorOperator">
            <summary>
            Indicates exclusive or.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UnaryOperator">
            <summary>
                See <see cref="T:Telerik.WinControls.BinaryOperator">BinaryOperator</see>,
                <see cref="T:Telerik.WinControls.Condition">Condition</see>
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UnaryOperator.None">
            <summary>
                  
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UnaryOperator.NotOperator">
            <summary>
                 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.SimpleCondition">
            <summary>
            SimpleCondition evaluates when a property of an Element equals a certain value.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.SimpleCondition.UnaryOperator">
            <summary>
            Gets or sets the unary operator of the simple condition.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.SimpleCondition.#ctor(Telerik.WinControls.IPropertySetting)">
            <summary>
            Initializes a new instance of the SimpleCondition class.
            </summary>
            <param name="settingToCheck"></param>
        </member>
        <member name="M:Telerik.WinControls.SimpleCondition.#ctor(Telerik.WinControls.IPropertySetting,Telerik.WinControls.UnaryOperator)">
            <summary>
            Initializes a new instance of the SimpleCondition class from the setting to check, and the
            unary operator to use.
            </summary>
            <param name="settingToCheck"></param>
            <param name="unaryOperator"></param>
        </member>
        <member name="M:Telerik.WinControls.SimpleCondition.#ctor(Telerik.WinControls.RadProperty,System.Object,Telerik.WinControls.UnaryOperator)">
            <summary>
            Initializes a new instance of the SimpleCondition class from the property, value and unary operator
            </summary>        
        </member>
        <member name="M:Telerik.WinControls.SimpleCondition.#ctor(Telerik.WinControls.RadProperty,System.Object)">
            <summary>
            Initializes a new instance of the SimpleCondition class from the property and value
            </summary>        
        </member>
        <member name="P:Telerik.WinControls.SimpleCondition.Setting">
            <summary>
            Gets or sets the setting of the current property.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.SimpleCondition.Evaluate(Telerik.WinControls.RadObject)">
            <summary>
            Evaluates the target RadElement using the unary operator.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.SimpleCondition.ToString">
            <summary>
            Retrieves the string representation of the current instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.ClassSelector">
            <summary>
            Represents a class selector. Class selectors are used to apply the same
            customization to all elements that belong to the same class. This 
            behavior is very similar to that of the CSS class selectors.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ClassSelector.ElementClass">
            <summary>Gets or sets a value indicating the class name.</summary>
        </member>
        <member name="M:Telerik.WinControls.ClassSelector.#ctor">
            <summary>Initializes a new instance of the class selector class.</summary>
        </member>
        <member name="M:Telerik.WinControls.ClassSelector.#ctor(System.String)">
            <summary>
            Initializes a new instance of the class selector class using string for the class
            name.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.HierarchicalSelector">
            <summary>
            Represents a base class for other selectors. telerik presentation framework
            selectors are similar to CSS selectors.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.HierarchicalSelector.GetSelectedElements(Telerik.WinControls.RadObject)">
            <summary>Retrieves the selected elements of the given element.</summary>
        </member>
        <member name="T:Telerik.WinControls.IElementSelector">
            <summary>Exposes methods and properties required for a general selector. 
            Selectors in telerik presentation framework are like CSS selectors.</summary>
        </member>
        <member name="M:Telerik.WinControls.IElementSelector.CanSelect(Telerik.WinControls.RadObject)">
            <summary>
            Gets value indicating whether the selector applies to the specified element
            </summary>
            <param name="targetElement"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.IElementSelector.CanSelectIgnoringConditions(Telerik.WinControls.RadObject)">
            <summary>
            Gets value indicating whether the selector applies to the specified element, without checking conditions that apply to properties of the element.
            </summary>
            <param name="targetElement"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.IElementSelector.GetSelectedElements(Telerik.WinControls.RadObject)">
            <summary>Retrieves an array of selected elements of the element given as an 
            argument.</summary>
        </member>
        <member name="M:Telerik.WinControls.IElementSelector.GetBehaviors(Telerik.WinControls.PropertySettingGroup)">
            <summary>
            Method supports obsolete theming infrastructure
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.IElementSelector.HasApplyCondition">
            <summary>Gets a value indicating whether a condition has been applied.</summary>
        </member>
        <member name="M:Telerik.WinControls.IElementSelector.Apply(Telerik.WinControls.RadObject,System.Collections.Generic.List{Telerik.WinControls.IPropertySetting})">
            <summary>Applies the property settings to the given element. Method supports obsolete theming infrastructure. </summary>
        </member>
        <member name="P:Telerik.WinControls.IElementSelector.ChildSelector">
            <summary>
            Gets or sets the child selector.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.IElementSelector.Equals(Telerik.WinControls.IElementSelector)">
            <summary>
            Gets value indicating whether the selector Equals to the specified selector
            </summary>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.IElementSelector.Key">
            <summary>
            Selector Key
            </summary>
        </member>
        <member name="M:Telerik.WinControls.IElementSelector.AddConditionPropertiesToList(System.Collections.Generic.List{Telerik.WinControls.RadProperty})">
            <summary>
            Method supports obsolete theming infrastructure.
            If HasApplyCondition returns true, this method should add the RadProperties that the selector depends, so style manager 
            can refresh afected element by the selector selector, when property changes
            </summary>
            <param name="list"></param>
        </member>
        <member name="T:Telerik.WinControls.NameSelector">
            <summary>
            Represents a name selector. Name selectors are used to apply customization to the
            element having the specified name. This behavior is very similar to that of CSS id
            selectors.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.NameSelector.ElementName">
            <summary>
            Gets or sets the element's name. Customization is applied only to the element
            having this name.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.NameSelector.#ctor">
            <summary>Initializes a new instance of the NameSelector class.</summary>
        </member>
        <member name="M:Telerik.WinControls.NameSelector.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NameSelector class using the name of the
            element.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.SelectorBase">
            <summary>Represents a base class for the HierarchicalSelector class.
            Selectors in telerik presentation framework are very similar to CSS 
            selectors.</summary>
        </member>
        <member name="P:Telerik.WinControls.SelectorBase.Condition">
            <summary>Gets or sets the Condition upon which to apply the customization.</summary>
        </member>
        <member name="P:Telerik.WinControls.SelectorBase.UnapplyCondition">
            <summary>Gets or sets the condition upon which to un-apply the customization.</summary>
        </member>
        <member name="P:Telerik.WinControls.SelectorBase.AutoUnapply">
            <summary>Gets or sets a value indicating whether auto-un-apply is on or off.</summary>
        </member>
        <member name="P:Telerik.WinControls.SelectorBase.IsActiveSelectorInStyleBuilder">
            <summary> Gets or sets a value indicating whether the current selector is the active one in style builder</summary>
        </member>
        <member name="M:Telerik.WinControls.SelectorBase.ShouldUnapply(Telerik.WinControls.RadObject)">
            <summary>Retrieves a value indicating whether the customization should be 
            un-applied to the given element..</summary>
        </member>
        <member name="P:Telerik.WinControls.SelectorBase.HasApplyCondition">
            <summary>Gets a value indicating whether the an apply condition is set.</summary>
        </member>
        <member name="M:Telerik.WinControls.SelectorBase.IsValueApplied(Telerik.WinControls.RadObject)">
            <summary>Retrieves a value indicating whether value is set for the element.</summary>
        </member>
        <member name="M:Telerik.WinControls.SelectorCollection.#ctor">
            <summary>
            Initializes a new instance of the SelectorCollection class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.SelectorCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the SelectorCollection class.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.TypeSelector">
            <summary>
            Represents a type selector. Type selectors are used to apply the same
            customization to all elements of the same type. Behavior is very similar to that 
            of the CSS type selectors.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.TypeSelector.#ctor">
            <summary>Initializes a new instance of the TypeSelector class.</summary>
        </member>
        <member name="M:Telerik.WinControls.TypeSelector.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the TypeSelector class using the type that will be
            affected.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TypeSelector.ElementType">
            <summary>Gets or sets the element type that will be affected by the Type selector.</summary>
        </member>
        <member name="P:Telerik.WinControls.Styles.VisualStateSelector.VisualState">
            <summary>
            Gets or sets value corresponding to the VisualState of the item that the selector targets
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Styles.XmlRepositoryItem.Key">
            <summary>
            Gets or sets value indicating the key of the group uised to identfy the group when referenced 
            by other groups when basedOn is specified.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Styles.ItemStateManagerBase.SetItemState(Telerik.WinControls.RadObject,System.String[])">
            <summary>
            Combines ThemeRoleName with state names using "." as delimiter and sets the result to AttachedElement.Class
            </summary>
            <param name="item"></param>
            <param name="stateNames"></param>
        </member>
        <member name="M:Telerik.WinControls.Styles.ItemStateManagerBase.CombineStateNames(System.String,System.String)">
            <summary>
            Combines state names, using stateDelimiter Character.
            </summary>
            <remarks>
            Egg. combining "Selected" and "MouseOver" gives "Selected.MouseOver";
            combining "" and "MouseOver" gives "MouseOver"
            </remarks>
            <param name="stateName"></param>
            <param name="stateName1"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Styles.ItemStateManagerFactory.CreateDefaultStates">
            <summary>
            Creates default states.
            </summary>
            <returns>The created <see cref="T:Telerik.WinControls.Styles.StateNodeBase"/> instance.</returns>
        </member>
        <member name="T:Telerik.WinControls.ISupportSystemSkin">
            <summary>
            Defines a visual element which may be displayed using system skins (UxTheme semantic).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ISupportSystemSkin.GetXPVisualStyle">
            <summary>
            Gets the VisualStyleElement which represents the current state of this instance for Windows XP.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ISupportSystemSkin.GetVistaVisualStyle">
            <summary>
            Gets the VisualStyleElement which represents the current state of this instance for Windows Vista.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.ISupportSystemSkin.UseSystemSkin">
            <summary>
            Determines whether to use system skins or not.
            If this is false, the default TPF rendering will be used.
            If this is true and there is no system skin enabled, TPF rendering will be used.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.SystemSkinManager.GetThemeColor(System.Windows.Forms.VisualStyles.ColorProperty)">
            <summary>
            Gets the Color defined for the current element.
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.SystemSkinManager.SetCurrentElement(System.Windows.Forms.VisualStyles.VisualStyleElement)">
            <summary>
            Sets the specified element as the "Current" for painting.
            </summary>
            <param name="element"></param>
            <returns>True if the element may be painted (there is a theme part defined for it), false otherwise.</returns>
        </member>
        <member name="M:Telerik.WinControls.SystemSkinManager.PaintCurrentElement(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints the current element (previously specified by the SetCurrentElement method)
            on the provided graphics surface, within the desired bounds.
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:Telerik.WinControls.SystemSkinManager.NotifyChange">
            <summary>
            Invalidates all opened forms upon a user-triggered change in this class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.SystemSkinManager.CloseAllHandles">
            <summary>
            closes all currently opened HTheme handles
            </summary>
        </member>
        <member name="M:Telerik.WinControls.SystemSkinManager.GetHTheme(System.String)">
            <summary>
            Looks-up a HTheme handle.
            </summary>
            <param name="windowClass"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.SystemSkinManager.CurrentElement">
            <summary>
            Gets the currently attached element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.SystemSkinManager.IsVistaOrLater">
            <value>
            Returns true on Windows Vista or newer operating systems; otherwise, false.
            </value>
        </member>
        <member name="P:Telerik.WinControls.SystemSkinManager.UseSystemSkin">
            <summary>
            Determines whether system skins will be applied on RadControls
            </summary>
        </member>
        <member name="P:Telerik.WinControls.SystemSkinManager.Instance">
            <summary>
            Gets the only instance of this manager.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.SystemSkinManager.EmptyElement">
            <summary>
            Used internally by the framework to determine whether we just want to skip TPF's drawing.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.SystemSkinManager.DefaultElement">
            <summary>
            Used to instruct the system skin painting mechanism that a custom painting will be performed
            in the PaintElementSkin method.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UseSystemSkinMode.Inherit">
            <summary>
            Mode is inherited by the parent chain.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UseSystemSkinMode.YesLocal">
            <summary>
            Only direct element can use skins, value cannot be used for inheritance
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UseSystemSkinMode.YesInheritable">
            <summary>
            The element and all its descendants may use skins.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UseSystemSkinMode.NoLocal">
            <summary>
            Only direct element is forbidden to use skins, its children can compose this value up from the parent chain.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UseSystemSkinMode.NoInheritable">
            <summary>
            Element and all its descendants are forbidden to use system skins.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.VistaAeroTheme">
            <summary>
            Contains definitions for the MS Windows Vista Aero theme.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.VistaAeroTheme.ComboBox">
            <summary>
            Vista comboboxes
            </summary>
        </member>
        <member name="T:Telerik.WinControls.VistaAeroTheme.DatePicker">
            <summary>
            Vista DateTimePickers
            </summary>
        </member>
        <member name="T:Telerik.WinControls.VistaAeroTheme.TextBox">
            <summary>
            Vista TextBoxes
            </summary>
        </member>
        <member name="T:Telerik.WinControls.VistaAeroTheme.Header">
            <summary>
            Vista Headers
            </summary>
        </member>
        <member name="T:Telerik.WinControls.VistaAeroTheme.ListBox">
            <summary>
            Vista Listboxes
            </summary>
        </member>
        <member name="T:Telerik.WinControls.VistaAeroTheme.ListView">
            <summary>
            Vista ListViews
            </summary>
        </member>
        <member name="T:Telerik.WinControls.VistaAeroTheme.FlyOut">
            <summary>
            Vista Flyout
            </summary>
        </member>
        <member name="T:Telerik.WinControls.VistaAeroTheme.Menu">
            <summary>
            Vista Flyout
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Serialization.PackageFormat">
            <summary>
            Defines the possible formats used when serializing an archive package.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Serialization.PackageFormat.Binary">
            <summary>
            Binary format.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Serialization.PackageFormat.XML">
            <summary>
            XML format.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Serialization.RadArchivePackage.DefaultFormat">
            <summary>
            Gets the default format for this package.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Serialization.RadArchivePackage.Format">
            <summary>
            Gets or sets the format used to persist the package.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Serialization.RadArchivePackage.Streams">
            <summary>
            Gets the list which contains the streams of this package.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Serialization.RadArchivePackage.Decompress(System.IO.Stream)">
            <summary>
            Decompresses the stream using Binary format.
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Serialization.RadArchivePackage.Decompress(System.String)">
            <summary>
            Decompresses the stream in the provided file using Binary format.
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.Serialization.RadArchiveStream">
            <summary>
            Encapsulates information for a single stream within a zipped stream.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Serialization.RadArchiveStream.Context">
            <summary>
            Gets or sets the context associated with the archive.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Serialization.RadArchiveStream.RawBytes">
            <summary>
            Gets the raw bytes of the underlying stream.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Serialization.RadArchiveStream.ZippedBytes">
            <summary>
            Gets or sets the already zipped raw bytes of the underlying stream.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Serialization.RadArchiveStream.ByteCount">
            <summary>
            Gets the count of the raw bytes that form the stream.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Serialization.RadArchiveStream.Name">
            <summary>
            Gets or sets the name of this archive.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Serialization.RadArchiveStream.Format">
            <summary>
            Gets the information about the format of the underlying stream.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Serialization.RadThemePackage">
            <summary>
            Represents an archive package where each stream is a compressed XmlTheme.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Serialization.RadThemePackage.DecompressThemes">
            <summary>
            Gets all the themes that reside within this package.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.Serialization.RadXmlThemeArchiveStream">
            <summary>
            An archived stream, which persists a XmlTheme instance.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.BuilderRegistrationType">
            <summary>
            Defines the types of registrations of a StyleSheet in the ThemeResolutionService.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ISerializationValidatable">
            <summary>
            Implements whether an instances of a class need validation after theme 
            deserialization.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadStylesheetRelation.#ctor">
            <summary>
            Initializes a new instance of the RadStylesheetRelation class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadStylesheetRelation.Equals(Telerik.WinControls.RadStylesheetRelation)">
            <summary>
            Determines whether the specified relation is equal to this one.
            </summary>
            <param name="relation"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.RadStylesheetRelation.RegistrationType">
            <summary>
            Gets or sets a value indicating the builder registration type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadStylesheetRelation.ControlType">
            <summary>
            Gets or sets a string value indicating the control type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadStylesheetRelation.ElementType">
            <summary>
            Gets or sets a string value indicating the element type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadStylesheetRelation.ControlName">
            <summary>
            Gets or sets a value indicating the control name.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadStylesheetRelation.ElementName">
            <summary>
            Gets or sets a string value indicating the element name.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XmlBuilderData">
            <summary>
            Represents 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XmlClassSelector">
            <summary>
            Represents a class selector that can be serialized and deserialized. 
            Telerik class selectors are very similar to CSS class selectors.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlClassSelector.#ctor">
            <summary>
            Initializes a new instance of the XmlClassSelector class. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlClassSelector.#ctor(System.String)">
            <summary>
            Initializes a new instance of the XmlClassSelector class using an element 
            given as a string.
            </summary>
            <param name="elementClass"></param>
        </member>
        <member name="P:Telerik.WinControls.XmlClassSelector.ElementClass">
            <summary>
            Gets or sets a string value indicating the class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlClassSelector.ToString">
            <summary>
            Retrieves the string representation of the class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlClassSelector.Equals(System.Object)">
            <summary>
            Retrieves a boolean value indicating whether <em>this</em> and the argument are equal.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlClassSelector.GetHashCode">
            <summary>
            Serves as a hash function for the XmlClassSelector type.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.XmlComplexCondition">
            <summary>
            Represents a serializable correspodence to the ComplexCondtion class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlComplexCondition.Condition1">
            <summary>
            Gets or sets a value indicating the first condition.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlComplexCondition.BinaryOperator">
            <summary>
            Gets or sets a value indicating the binary operator for the condition.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlComplexCondition.Condition2">
            <summary>
            Gets or sets a value indicating the second condition.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlComplexCondition.Equals(System.Object)">
            <summary>
            Compares two XmlComplexCondtion(s) for equality.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlComplexCondition.GetHashCode">
            <summary>
            Retrieves a hash code for the current instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.XmlCondition">
            <summary>
            Represents a serializable condition. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlCondition.BuildExpressionString">
            <summary>
            Build the expression string. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlCondition.Deserialize">
            <summary>
            Deserializes the condition.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlCondition.DeserializeProperties(Telerik.WinControls.Condition)">
            <summary>
            Deserializes the properties for a given condition.
            </summary>
            <param name="selector"></param>
        </member>
        <member name="M:Telerik.WinControls.XmlCondition.CreateInstance">
            <summary>
            Creates a new instance of the Condition class.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.XmlPropertySetting">
            <summary>
            Represents a property setting. Each property of Telerik controls can be 
            serialized and deserialized through an instance of this class. The 
            XMLPropertySetting instance describes the affected control, its property, and
            the current value. XmlPropertySetting is very similar to CSS style properties.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlPropertySetting.Property">
            <summary>
            Gets or sets a string value indicating the property. 
            For example, Telerik.WinControls.VisualElement.ForeColor.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlPropertySetting.Value">
            <summary>
            Gets or sets an object value indicating the value of the property. For example,
            the value of Telerik.WinControls.VisualElement.ForeColor property 
            could be "navy" or "128, 0, 255, 63".
            </summary>
            <remarks>
            Here is how XmlPropertySetting determines whether to serialize Value or ValueString property when used in 
            ThemeComponent with CodeDom serialization.
            
            If the property belongs to an object from System, Telerik.WinControl or Telerik.WinCotnrols.UI assembly
            then Value will be serialized (the actual object). For values that are defined in other assemblies ValueString 
            will be serialized. Tthis is Value, serialized as string using the TypeConverter specified by the corresponing RadProperty.
            This is important for late-binding for types declared in different assemblies: egg. Docking
            Otherwise a problem will occur when adding a ThemeComponent on the Form in a project which does not 
            reference Docking or Grid, etc, or custom controls assembly.
            
            For xml serializtion, property serialize always as string using the TypeConverter specified by the corresponing RadProperty.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.XmlPropertySetting.ValueString">
            <summary>
            Gets or sets the value serialized to string using the corresponding property TypeConverter. Generally used in rear cases by CodeDom 
            Serializer, if theme is serializaed to CodeDom
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySetting.DeserializeProperty(System.String)">
            <summary>
            Deserializes the property given as a string. For example, 
            Telerik.WinControls.VisualElement.ForeColor.
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySetting.DeserializePropertySafe(System.String)">
            <summary>
            Deserializes the property given as a string. For example, 
            Telerik.WinControls.VisualElement.ForeColor.
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySetting.SerializeValue(Telerik.WinControls.RadProperty,System.Object)">
            <summary>
            Serializes the given dependency property with the given value. 
            </summary>
            <param name="property"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySetting.DeserializeValue(Telerik.WinControls.RadProperty,System.String)">
            <summary>
            Deserializes the given dependency property with the given value.
            </summary>
            <param name="property"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySetting.ToString">
            <summary>
            Retrieves a string representation of the class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySetting.GetPropertyName">
            <summary>
            Retrieves the name of the property.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySetting.GetDeserializedProperty">
            <summary>
            Retrieves the deserialized property.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.XmlPropertySettingCollection">
            <summary>
                <para>
                  A collection that stores <see cref='T:Telerik.WinControls.XmlPropertySetting'/> objects.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.#ctor">
            <summary>
                <para>
                  Initializes a new instance of <see cref='T:Telerik.WinControls.XmlPropertySettingCollection'/>.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.#ctor(Telerik.WinControls.XmlPropertySettingCollection)">
            <summary>
                <para>
                  Initializes a new instance of <see cref='T:Telerik.WinControls.XmlPropertySettingCollection'/> based on another <see cref='T:Telerik.WinControls.XmlPropertySettingCollection'/>.
               </para>
            </summary>
            <param name='value'>
                  A <see cref='T:Telerik.WinControls.XmlPropertySettingCollection'/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.#ctor(Telerik.WinControls.XmlPropertySetting[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref='T:Telerik.WinControls.XmlPropertySettingCollection'/> containing any array of <see cref='T:Telerik.WinControls.XmlPropertySetting'/> objects.
               </para>
            </summary>
            <param name='value'>
                  A array of <see cref='T:Telerik.WinControls.XmlPropertySetting'/> objects with which to intialize the collection
            </param>
        </member>
        <member name="P:Telerik.WinControls.XmlPropertySettingCollection.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref='T:Telerik.WinControls.XmlPropertySetting'/>.</para>
            </summary>
            <param name='index'><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='index'/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.Add(Telerik.WinControls.XmlPropertySetting)">
            <summary>
               <para>Adds a <see cref='T:Telerik.WinControls.XmlPropertySetting'/> with the specified value to the 
               <see cref='T:Telerik.WinControls.XmlPropertySettingCollection'/> .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.XmlPropertySetting'/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.AddRange(Telerik.WinControls.XmlPropertySetting[])">
            <summary>
            <para>Copies the elements of an array to the end of the <see cref='T:Telerik.WinControls.XmlPropertySettingCollection'/>.</para>
            </summary>
            <param name='value'>
               An array of type <see cref='T:Telerik.WinControls.XmlPropertySetting'/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.AddRange(Telerik.WinControls.XmlPropertySettingCollection)">
            <summary>
                <para>
                  Adds the contents of another <see cref='T:Telerik.WinControls.XmlPropertySettingCollection'/> to the end of the collection.
               </para>
            </summary>
            <param name='value'>
               A <see cref='T:Telerik.WinControls.XmlPropertySettingCollection'/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.Contains(Telerik.WinControls.XmlPropertySetting)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref='T:Telerik.WinControls.XmlPropertySettingCollection'/> contains the specified <see cref='T:Telerik.WinControls.XmlPropertySetting'/>.</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.XmlPropertySetting'/> to locate.</param>
            <returns>
            <para><see langword='true'/> if the <see cref='T:Telerik.WinControls.XmlPropertySetting'/> is contained in the collection; 
              otherwise, <see langword='false'/>.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.CopyTo(Telerik.WinControls.XmlPropertySetting[],System.Int32)">
            <summary>
            <para>Copies the <see cref='T:Telerik.WinControls.XmlPropertySettingCollection'/> values to a one-dimensional <see cref='T:System.Array'/> instance at the 
               specified index.</para>
            </summary>
            <param name='array'><para>The one-dimensional <see cref='T:System.Array'/> that is the destination of the values copied from <see cref='T:Telerik.WinControls.XmlPropertySettingCollection'/> .</para></param>
            <param name='index'>The index in <paramref name='array'/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref='T:System.ArgumentException'><para><paramref name='array'/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref='T:Telerik.WinControls.XmlPropertySettingCollection'/> is greater than the available space between <paramref name='index'/> and the end of <paramref name='array'/>.</para></exception>
            <exception cref='T:System.ArgumentNullException'><paramref name='array'/> is <see langword='null'/>. </exception>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='index'/> is less than <paramref name='array'/>'s lowbound. </exception>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.IndexOf(Telerik.WinControls.XmlPropertySetting)">
            <summary>
               <para>Returns the index of a <see cref='T:Telerik.WinControls.XmlPropertySetting'/> in 
                  the <see cref='T:Telerik.WinControls.XmlPropertySettingCollection'/> .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.XmlPropertySetting'/> to locate.</param>
            <returns>
            <para>The index of the <see cref='T:Telerik.WinControls.XmlPropertySetting'/> of <paramref name='value'/> in the 
            <see cref='T:Telerik.WinControls.XmlPropertySettingCollection'/>, if found; otherwise, -1.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.Insert(System.Int32,Telerik.WinControls.XmlPropertySetting)">
            <summary>
            <para>Inserts a <see cref='T:Telerik.WinControls.XmlPropertySetting'/> into the <see cref='T:Telerik.WinControls.XmlPropertySettingCollection'/> at the specified index.</para>
            </summary>
            <param name='index'>The zero-based index where <paramref name='value'/> should be inserted.</param>
            <param name=' value'>The <see cref='T:Telerik.WinControls.XmlPropertySetting'/> to insert.</param>
            <returns><para>None.</para></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.GetEnumerator">
            <summary>
               <para>Returns an enumerator that can iterate through 
                  the <see cref='T:Telerik.WinControls.XmlPropertySettingCollection'/> .</para>
            </summary>
            <returns><para>None.</para></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.Remove(Telerik.WinControls.XmlPropertySetting)">
            <summary>
               <para> Removes a specific <see cref='T:Telerik.WinControls.XmlPropertySetting'/> from the 
               <see cref='T:Telerik.WinControls.XmlPropertySettingCollection'/> .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.XmlPropertySetting'/> to remove from the <see cref='T:Telerik.WinControls.XmlPropertySettingCollection'/> .</param>
            <returns><para>None.</para></returns>
            <exception cref='T:System.ArgumentException'><paramref name='value'/> is not found in the Collection. </exception>
        </member>
        <member name="T:Telerik.WinControls.XmlPropertySettingGroup">
            <summary>
            Represents a group of property settings.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlPropertySettingGroup.PropertySettings">
            <summary>
            Gets or sets the collection of properties.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlPropertySettingGroup.Selectors">
            <summary>
            Gets or sets the collection of selectors.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroup.ToString">
            <summary>
            Retrieves the string representation of the instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.XmlPropertySettingGroup.GroupName">
            <summary>
            Retrieve the name of the group.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlPropertySettingGroup.BasedOn">
            <summary>
            Gets or sets value indicating the key of a repository item which this group is based on.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroup.ShouldSerializeBasedOn">
            <summary>
            Determines whether the BasedOn property should be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.XmlPropertySettingGroupCollection">
            <summary>
                <para>
                  A collection that stores <see cref='T:Telerik.WinControls.XmlPropertySettingGroup'/> objects.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.#ctor">
            <summary>
                <para>
                  Initializes a new instance of <see cref='T:Telerik.WinControls.XmlPropertySettingGroupCollection'/>.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.#ctor(Telerik.WinControls.XmlPropertySettingGroupCollection)">
            <summary>
                <para>
                  Initializes a new instance of <see cref='T:Telerik.WinControls.XmlPropertySettingGroupCollection'/> based on another <see cref='T:Telerik.WinControls.XmlPropertySettingGroupCollection'/>.
               </para>
            </summary>
            <param name='value'>
                  A <see cref='T:Telerik.WinControls.XmlPropertySettingGroupCollection'/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.#ctor(Telerik.WinControls.XmlPropertySettingGroup[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref='T:Telerik.WinControls.XmlPropertySettingGroupCollection'/> containing any array of <see cref='T:Telerik.WinControls.XmlPropertySettingGroup'/> objects.
               </para>
            </summary>
            <param name='value'>
                  A array of <see cref='T:Telerik.WinControls.XmlPropertySettingGroup'/> objects with which to intialize the collection
            </param>
        </member>
        <member name="P:Telerik.WinControls.XmlPropertySettingGroupCollection.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref='T:Telerik.WinControls.XmlPropertySettingGroup'/>.</para>
            </summary>
            <param name='index'><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='index'/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.Add(Telerik.WinControls.XmlPropertySettingGroup)">
            <summary>
               <para>Adds a <see cref='T:Telerik.WinControls.XmlPropertySettingGroup'/> with the specified value to the 
               <see cref='T:Telerik.WinControls.XmlPropertySettingGroupCollection'/> .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.XmlPropertySettingGroup'/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.AddRange(Telerik.WinControls.XmlPropertySettingGroup[])">
            <summary>
            <para>Copies the elements of an array to the end of the <see cref='T:Telerik.WinControls.XmlPropertySettingGroupCollection'/>.</para>
            </summary>
            <param name='value'>
               An array of type <see cref='T:Telerik.WinControls.XmlPropertySettingGroup'/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.AddRange(Telerik.WinControls.XmlPropertySettingGroupCollection)">
            <summary>
                <para>
                  Adds the contents of another <see cref='T:Telerik.WinControls.XmlPropertySettingGroupCollection'/> to the end of the collection.
               </para>
            </summary>
            <param name='value'>
               A <see cref='T:Telerik.WinControls.XmlPropertySettingGroupCollection'/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.Contains(Telerik.WinControls.XmlPropertySettingGroup)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref='T:Telerik.WinControls.XmlPropertySettingGroupCollection'/> contains the specified <see cref='T:Telerik.WinControls.XmlPropertySettingGroup'/>.</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.XmlPropertySettingGroup'/> to locate.</param>
            <returns>
            <para><see langword='true'/> if the <see cref='T:Telerik.WinControls.XmlPropertySettingGroup'/> is contained in the collection; 
              otherwise, <see langword='false'/>.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.CopyTo(Telerik.WinControls.XmlPropertySettingGroup[],System.Int32)">
            <summary>
            <para>Copies the <see cref='T:Telerik.WinControls.XmlPropertySettingGroupCollection'/> values to a one-dimensional <see cref='T:System.Array'/> instance at the 
               specified index.</para>
            </summary>
            <param name='array'><para>The one-dimensional <see cref='T:System.Array'/> that is the destination of the values copied from <see cref='T:Telerik.WinControls.XmlPropertySettingGroupCollection'/> .</para></param>
            <param name='index'>The index in <paramref name='array'/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref='T:System.ArgumentException'><para><paramref name='array'/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref='T:Telerik.WinControls.XmlPropertySettingGroupCollection'/> is greater than the available space between <paramref name='index'/> and the end of <paramref name='array'/>.</para></exception>
            <exception cref='T:System.ArgumentNullException'><paramref name='array'/> is <see langword='null'/>. </exception>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='index'/> is less than <paramref name='array'/>'s lowbound. </exception>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.IndexOf(Telerik.WinControls.XmlPropertySettingGroup)">
            <summary>
               <para>Returns the index of a <see cref='T:Telerik.WinControls.XmlPropertySettingGroup'/> in 
                  the <see cref='T:Telerik.WinControls.XmlPropertySettingGroupCollection'/> .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.XmlPropertySettingGroup'/> to locate.</param>
            <returns>
            <para>The index of the <see cref='T:Telerik.WinControls.XmlPropertySettingGroup'/> of <paramref name='value'/> in the 
            <see cref='T:Telerik.WinControls.XmlPropertySettingGroupCollection'/>, if found; otherwise, -1.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.Insert(System.Int32,Telerik.WinControls.XmlPropertySettingGroup)">
            <summary>
            <para>Inserts a <see cref='T:Telerik.WinControls.XmlPropertySettingGroup'/> into the <see cref='T:Telerik.WinControls.XmlPropertySettingGroupCollection'/> at the specified index.</para>
            </summary>
            <param name='index'>The zero-based index where <paramref name='value'/> should be inserted.</param>
            <param name=' value'>The <see cref='T:Telerik.WinControls.XmlPropertySettingGroup'/> to insert.</param>
            <returns><para>None.</para></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.GetEnumerator">
            <summary>
               <para>Returns an enumerator that can iterate through 
                  the <see cref='T:Telerik.WinControls.XmlPropertySettingGroupCollection'/> .</para>
            </summary>
            <returns><para>None.</para></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.Remove(Telerik.WinControls.XmlPropertySettingGroup)">
            <summary>
               <para> Removes a specific <see cref='T:Telerik.WinControls.XmlPropertySettingGroup'/> from the 
               <see cref='T:Telerik.WinControls.XmlPropertySettingGroupCollection'/> .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.XmlPropertySettingGroup'/> to remove from the <see cref='T:Telerik.WinControls.XmlPropertySettingGroupCollection'/> .</param>
            <returns><para>None.</para></returns>
            <exception cref='T:System.ArgumentException'><paramref name='value'/> is not found in the Collection. </exception>
        </member>
        <member name="T:Telerik.WinControls.XmlSelectorCollection">
            <summary>
                <para>
                  A collection that stores <see cref='T:Telerik.WinControls.XmlElementSelector'/> objects.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.#ctor">
            <summary>
                <para>
                  Initializes a new instance of <see cref='T:Telerik.WinControls.XmlSelectorCollection'/>.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.#ctor(System.Int32)">
            <summary>
                <para>
                  Initializes a new instance of <see cref='T:Telerik.WinControls.XmlSelectorCollection'/>.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.#ctor(Telerik.WinControls.XmlSelectorCollection)">
            <summary>
                <para>
                  Initializes a new instance of <see cref='T:Telerik.WinControls.XmlSelectorCollection'/> based on another <see cref='T:Telerik.WinControls.XmlSelectorCollection'/>.
               </para>
            </summary>
            <param name='value'>
                  A <see cref='T:Telerik.WinControls.XmlSelectorCollection'/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.#ctor(Telerik.WinControls.XmlElementSelector[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref='T:Telerik.WinControls.XmlSelectorCollection'/> containing any array of <see cref='T:Telerik.WinControls.XmlElementSelector'/> objects.
               </para>
            </summary>
            <param name='value'>
                  A array of <see cref='T:Telerik.WinControls.XmlElementSelector'/> objects with which to intialize the collection
            </param>
        </member>
        <member name="P:Telerik.WinControls.XmlSelectorCollection.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref='T:Telerik.WinControls.XmlElementSelector'/>.</para>
            </summary>
            <param name='index'><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='index'/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.Add(Telerik.WinControls.XmlElementSelector)">
            <summary>
               <para>Adds a <see cref='T:Telerik.WinControls.XmlElementSelector'/> with the specified value to the 
               <see cref='T:Telerik.WinControls.XmlSelectorCollection'/> .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.XmlElementSelector'/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.AddRange(Telerik.WinControls.XmlElementSelector[])">
            <summary>
            <para>Copies the elements of an array to the end of the <see cref='T:Telerik.WinControls.XmlSelectorCollection'/>.</para>
            </summary>
            <param name='value'>
               An array of type <see cref='T:Telerik.WinControls.XmlElementSelector'/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.AddRange(Telerik.WinControls.XmlSelectorCollection)">
            <summary>
                <para>
                  Adds the contents of another <see cref='T:Telerik.WinControls.XmlSelectorCollection'/> to the end of the collection.
               </para>
            </summary>
            <param name='value'>
               A <see cref='T:Telerik.WinControls.XmlSelectorCollection'/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.Contains(Telerik.WinControls.XmlElementSelector)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref='T:Telerik.WinControls.XmlSelectorCollection'/> contains the specified <see cref='T:Telerik.WinControls.XmlElementSelector'/>.</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.XmlElementSelector'/> to locate.</param>
            <returns>
            <para><see langword='true'/> if the <see cref='T:Telerik.WinControls.XmlElementSelector'/> is contained in the collection; 
              otherwise, <see langword='false'/>.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.CopyTo(Telerik.WinControls.XmlElementSelector[],System.Int32)">
            <summary>
            <para>Copies the <see cref='T:Telerik.WinControls.XmlSelectorCollection'/> values to a one-dimensional <see cref='T:System.Array'/> instance at the 
               specified index.</para>
            </summary>
            <param name='array'><para>The one-dimensional <see cref='T:System.Array'/> that is the destination of the values copied from <see cref='T:Telerik.WinControls.XmlSelectorCollection'/> .</para></param>
            <param name='index'>The index in <paramref name='array'/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref='T:System.ArgumentException'><para><paramref name='array'/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref='T:Telerik.WinControls.XmlSelectorCollection'/> is greater than the available space between <paramref name='index'/> and the end of <paramref name='array'/>.</para></exception>
            <exception cref='T:System.ArgumentNullException'><paramref name='array'/> is <see langword='null'/>. </exception>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='index'/> is less than <paramref name='array'/>'s lowbound. </exception>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.IndexOf(Telerik.WinControls.XmlElementSelector)">
            <summary>
               <para>Returns the index of a <see cref='T:Telerik.WinControls.XmlElementSelector'/> in 
                  the <see cref='T:Telerik.WinControls.XmlSelectorCollection'/> .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.XmlElementSelector'/> to locate.</param>
            <returns>
            <para>The index of the <see cref='T:Telerik.WinControls.XmlElementSelector'/> of <paramref name='value'/> in the 
            <see cref='T:Telerik.WinControls.XmlSelectorCollection'/>, if found; otherwise, -1.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.Insert(System.Int32,Telerik.WinControls.XmlElementSelector)">
            <summary>
            <para>Inserts a <see cref='T:Telerik.WinControls.XmlElementSelector'/> into the <see cref='T:Telerik.WinControls.XmlSelectorCollection'/> at the specified index.</para>
            </summary>
            <param name='index'>The zero-based index where <paramref name='value'/> should be inserted.</param>
            <param name='value'>The <see cref='T:Telerik.WinControls.XmlElementSelector'/> to insert.</param>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.GetEnumerator">
            <summary>
               <para>Returns an enumerator that can iterate through 
                  the <see cref='T:Telerik.WinControls.XmlSelectorCollection'/> .</para>
            </summary>
            <returns><para>None.</para></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.Remove(Telerik.WinControls.XmlElementSelector)">
            <summary>
               <para> Removes a specific <see cref='T:Telerik.WinControls.XmlElementSelector'/> from the 
               <see cref='T:Telerik.WinControls.XmlSelectorCollection'/> .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.XmlElementSelector'/> to remove from the <see cref='T:Telerik.WinControls.XmlSelectorCollection'/> .</param>
            <returns><para>None.</para></returns>
            <exception cref='T:System.ArgumentException'><paramref name='value'/> is not found in the Collection. </exception>
        </member>
        <member name="T:Telerik.WinControls.XmlSimpleCondition">
            <summary>
            Represents a serializable correspondence to the SimpleCondtion class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlSimpleCondition.UnaryOperator">
            <summary>
            Gets or sets a value indicating the UnaryOperator used in the condition.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlSimpleCondition.Setting">
            <summary>
            Gets or sets the XML property setting for the instance.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlSimpleCondition.Equals(System.Object)">
            <summary>
            Compares two instances for equality.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.XmlStyleSheet.ThemeLocation">
            <summary>
            Gets value indicating the location of the theme file that the XmlStyleSheet has been loaded from.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XmlStyleBuilderRegistration">
            <summary>
            Represents a registration for the Style Builder. The class is responsible 
            for the serialization and deserialization of a group of <em>t</em>elerik controls.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlStyleBuilderRegistration.#ctor">
            <summary>
            Initializes a new instance of the XmlStyleBuilderRegistration class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlStyleBuilderRegistration.#ctor(Telerik.WinControls.XmlStyleSheet,System.String,System.String)">
            <summary>
            Initializes a new instance of the XmlStyleBuilderRegistration class
            from xml style sheet, control type, and element type.
            </summary>
            <param name="style"></param>
            <param name="controlType"></param>
            <param name="elementType"></param>
        </member>
        <member name="P:Telerik.WinControls.XmlStyleBuilderRegistration.BuilderType">
            <summary>
            Gets or sets a string value indicating the builder type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlStyleBuilderRegistration.BuilderData">
            <summary>
            Gets or sets a value indicating the xml builder data.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlStyleBuilderRegistration.GetRegistration">
            <summary>
            Retrieves the style builder registration.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.XmlTheme">
             <summary>
             Represents a theme for a telerik control. Themes can be serialized and 
             deserialized, thus saving and loading the theme for a given control.
             XmlTheme implements IXmlSerializable which provides custom formatting for 
             XML serialization and deserialization.
             </summary>
             Removed the Serializable attribute since many of the classes used in this class are also not serializable.
             This causes the deserialization of the theme to fail when requested in the Visual Studio designer from the
             theme components context menu.
            [Serializable]
        </member>
        <member name="M:Telerik.WinControls.XmlTheme.#ctor">
            <summary>
            Initializes a new instance of the XmlTheme class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlTheme.#ctor(Telerik.WinControls.XmlStyleSheet,System.String,System.String)">
            <summary>
            Initializes a new instance of the XmlTheme class from XmlStyleSheet, 
            control type, and element type.
            </summary>
            <param name="style"></param>
            <param name="controlType"></param>
            <param name="elementType"></param>
        </member>
        <member name="P:Telerik.WinControls.XmlTheme.StyleRepository">
            <summary>
            Get the StyleRepository associated with this theme.
            <remarks>
            StyleReposity contains named lists of PropertySettings, reffered by Key property, that can be inherited by the PropertySettingGroups of this theme.
            This is done by associating BsedOn property of the property setting group with PropertySettings list key.
            Since each theme can have only one repository, when different XmlTheme are registered with repositories <see cref="T:Telerik.WinControls.ThemeResolutionService"/> for the same theme 
            the repositories are merged. If a PropertySettings list with the same Key is defined in several XmlTheme repository instances, the last laoded one overrides 
            any existing list.
            </remarks>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlTheme.HasRepository">
            <summary>
            Gets value indicating whether this XmlTheme defines StyleRepository
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlTheme.ThemeName">
            <summary>
            Gets or sets a string value indicating the theme name.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlTheme.BuilderRegistrations">
            <summary>
            Gets or sets the Builder Registration for the theme. Each builder registration
            corresponds to a theme for single telerik control.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlTheme.LoadFromStram(System.IO.Stream)">
            <summary>
            Loads a theme from a System.IO.Stream instance. 
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlTheme.LoadFromReader(System.IO.TextReader)">
            <summary>
            Load a XML theme from a TextReader.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlTheme.LoadFromReader(System.Xml.XmlReader)">
            <summary>
            Loads a theme from a XML reader.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlTheme.SaveToWriter(System.Xml.XmlWriter)">
            <summary>
            Saves the theme to a XMLWriter.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Telerik.WinControls.XmlTheme.SerializeType(System.Type)">
            <summary>
            Retrieves the serialization string of the given type.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlTheme.DeserializeType(System.String)">
            <summary>
            Deserializes the provided deserialization string.
            </summary>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.XmlVisualStateSelector.VisualState">
            <summary>
            Gets or sets value corresponding to the VisualState of the item that the selector targets
            </summary>        
        </member>
        <member name="T:Telerik.WinControls.RadThemeComponentBase">
            <summary>
            Class used by RadThemeManager to recognize classes that load themes from resources in a class library
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadThemeComponentBase.ThemeName">
            <summary>
            Gets the ThemeName of the theme component
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadThemeComponentBase.CreateContext(System.Windows.Forms.Control)">
            <summary>
            This method is used internally.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadThemeComponentBase.ThemeContext">
            <summary>
            this class is used internally.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ThemeSettingsService.AllThemes">
            <summary>
            Gets a dictionary with all the themes, where the key
            is the theme name and the value is the theme assembly.
            Does not include ControlDefault.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ThemeChangedEventArgs">
            <summary>
            Represents event data for the 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ThemeChangedHandler">
            <summary>
            Represents the method that will handle a ThemeChanged event.
            </summary>
            <param name="sender">
            Initializes the event sender.  
            </param>
            <param name="args">
            Initializes the %event argument:ThemeChangedEventArgs%.
            </param>
        </member>
        <member name="T:Telerik.WinControls.ThemeResolutionService">
            <summary>
            A Class that represents storage for themes in an application that contains
            RadControls.
            </summary>
            <remarks>
            	<para>
                    A theme consists of one or more
                    <strong>StyleSheet</strong> objects, and one or more
                    <strong>StyleSheetRelation</strong> objects.
                </para>
            	<para>
            		The style sheet object defines the appearance
                    and/or certain aspects of behavior of one <strong>RadControl</strong> or
                    <strong>RadItem</strong>.
                </para>
            	<para><strong>StyleSheetRelation</strong> objects contain data that maps a control
                and a certain <strong>StyleSheet</strong>.</para>
            	<para><strong>Theme.ThemeName</strong> is used by <strong>RadControl</strong> to
                automatically query <strong>ThemeResolutionService</strong>, upon
                <strong>Initialize</strong> and retrieve its <strong>StyleSheet</strong>. Use the
                API of this class to register, un-register, query themes storage for specific
                themes by attributes like Name, certain relations, etc.</para>
            </remarks>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.GetFont(System.String,System.Single,System.Drawing.FontStyle)">
            <summary>
            Returns a font by given font name. The font can be custom(loaded in memory) or installed on the machine. 
            </summary>
            <param name="fontName">The name of the font or custom font.</param>
            <param name="fontSize">The size of the font.</param>
            <param name="fontStyle"></param>
            <returns>The Font or the default font if font with given name is not valid.</returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.GetFontFamily(System.String)">
            <summary>
            Returns a FontFamily instance based on a given font name. If the name is not custom loaded font or installed one, this method will return a default one.
            </summary>
            <param name="fontName">The name of the font.</param>
            <returns>The font family.</returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.GetCustomFont(System.String)">
            <summary>
            Returns a previously loaded font by given font name.
            </summary>
            <param name="fontName">The name of font.</param>
            <returns>The FontFamily or null if font with given name is not loaded.</returns>
        </member>
        <member name="P:Telerik.WinControls.ThemeResolutionService.ApplicationThemeName">
            <summary>
            Gets or sets value indicating the theme name that will be used by all controls in the application.
            </summary>
            <remarks>
            If the value of this property is null or empty each control will be assigned a theme, corresponding on the 
            <see cref="P:Telerik.WinControls.RadControl.ThemeName"/> property of the control. Otherwise the ThemeName property will be disregarded.
            If a specific control in the application has no theme registered with the name specified by ApplicationThemeName, it will be
            assigned its ControlDefault theme name.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.ThemeResolutionService.DarkThemeNames">
            <summary>
            Gets a list with all registered dark themes.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ThemeResolutionService.AllowAnimations">
            <summary>
            Determines whether animations are allowed across entire application.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ThemeResolutionService.ControlDefaultThemeName">
            <summary>
            "ControlDefault" theme name
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.RegisterDarkTheme(System.String)">
            <summary>
            Registers a theme as dark, by its theme name. 
            </summary>
            <param name="themeName">The name of the theme.</param>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.SubscribeForThemeChanged(Telerik.WinControls.IThemeChangeListener)">
            <summary>
            Call to subscribe for theme change event, for the specified control theme class name. Note the event may be fired from another thread
            </summary>
            <param name="listener"></param>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.UnsubscribeFromThemeChanged(Telerik.WinControls.IThemeChangeListener)">
            <summary>
            Call to unsubscribe for theme change event.
            </summary>
            <param name="listener"></param>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.GetAvailableThemes">
            <summary>
            Gets a list of all registered themes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.GetAvailableThemes(Telerik.WinControls.IComponentTreeHandler)">
            <summary>
            Gets any themes registered for a specific control by control type name or control name.
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.GetTheme(System.String)">
            <summary>
            Get previously registered theme by theme name.
            </summary>
            <param name="themeName"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.ApplyThemeToControlTree(System.Windows.Forms.Control,System.String)">
            <summary>
            Applies the specified ThemeName to all RadControls that are children of the specified Control and its child Controls
            </summary>
            <param name="control"></param>
            <param name="themeName"></param>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.LoadPackageFile(System.String)">
            <summary>
            Loads a theme package, stored in the provided file.
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.LoadPackageFile(System.String,System.Boolean)">
            <summary>
            Loads a theme package stored in the provided file.
            </summary>
            <param name="filePath"></param>
            <param name="throwOnError">True to throw an exception if it occurs, false otherwise.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.LoadPackageResource(System.String)">
            <summary>
            Loads a theme package, stored in the provided embedded resource.
            The calling assembly is used to read the manifest resource stream.
            </summary>
            <param name="resourcePath"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.LoadPackageResource(System.Reflection.Assembly,System.String)">
            <summary>
            Loads a theme package from an embedded resource in the specified assembly.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.LoadPackageResource(Telerik.WinControls.ThemeResolutionService.ResourceParams,System.Boolean)">
            <summary>
            Loads a theme package stored in the provided embedded resource.
            </summary>
            <param name="resourceParams"></param>
            <param name="throwOnError">True to throw an exception if it occurs, false otherwise.</param>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.RegisterThemeFromStorage(Telerik.WinControls.ThemeStorageType,System.String)">
            <summary>
            Registers theme from a file or resource that contains a XML-serialized Theme object.
            The Visual Style Builder application for example is capable of designing and serializing
            themes. Theme files generally contain Theme with one or several style sheets each assigned a 
            registration that defines which RadControl and/or RadElment the style sheet applies.
            </summary>
            <param name="storageType"></param>
            <param name="themeLocation"></param>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.RegisterThemeFromStorage(Telerik.WinControls.ThemeStorageType,System.Reflection.Assembly,System.String)">
            <summary>
            Registers theme from a file or resource that contains a XML-serialized Theme object.
            The Visual Style Builder application for example is capable of designing and serializing
            themes. Theme files generally contain Theme with one or several style sheets each assigned a 
            registration that defines which RadControl and/or RadElment the style sheet applies.
            </summary>
            <param name="storageType"></param>
            <param name="assembly"></param>
            <param name="themeLocation"></param>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.RegisterThemeFromStorage(Telerik.WinControls.ThemeStorageType,Telerik.WinControls.ThemeResolutionService.ResourceParams)">
            <summary>
            Registers theme from a file or resource that contains a XML-serialized Theme object.
            The Visual Style Builder application for example is capable of designing and serializing
            themes. Theme files generally contain Theme with one or several style sheets each assigned a 
            registration that defines which RadControl and/or RadElment the style sheet applies.
            </summary>
            <param name="storageType"></param>
            <param name="resourceParams"></param>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.SuspendThemeChange">
            <summary>
            Suspends the ThemeChange event. This method is used internally.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.ResumeThemeChange">
            <summary>
            Resumes the ThemeChange event. This method is used internally.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.ResumeThemeChange(System.Boolean)">
            <summary>
            Resumes the ThemeChange event. This method is used internally.
            </summary>
            <param name="raiseChanged">Determines whether to fire the ThemeChanged event.</param>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.EnsureThemeRegistered(System.String)">
            <summary>
            Creates and registers an empty Theme if one is not already registered.
            </summary>
            <param name="themeName"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.ClearTheme(System.String)">
            <summary>
             Clears all stylesheets registered previously with the themeName specified.
            </summary>
            <param name="themeName"></param>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.GetStyleSheetBuilders(System.String)">
            <summary>
            Gets all StyleSheets registered under a theme name.
            </summary>
            <param name="themeName"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.RegisterStyleBuilder(Telerik.WinControls.StyleGroup,System.String)">
            <summary>
            Registers a StyleSheet found in styleBuilderRegistration using also the registration details specified under the theme name specified.
            </summary>
            <param name="styleBuilderRegistration"></param>
            <param name="themeName"></param>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.RegisterControlStyleBuilder(System.String,System.String,Telerik.WinControls.StyleGroup,System.String)">
            <summary>
            Registers a StyleBuilder for specific type of controls and specific type of elements under the name given.
            </summary>
            <param name="controlTypeName"></param>
            <param name="elementTypeName"></param>
            <param name="builder"></param>
            <param name="themeName"></param>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.UnregisterStyleSheetBuilder(Telerik.WinControls.StyleGroup)">
            <summary>
            Removes an instance of the <see cref="T:Telerik.WinControls.StyleGroup"/> class
            from the dictionaries with registered style builders.
            </summary>
            <param name="builder">The instance to remove.</param>
        </member>
        <member name="T:Telerik.WinControls.PropertySettingCollection">
            <summary>
            Represents a property settings collection. Property settings are very
            similar to CSS style properties.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ResolveStyleBuilderEventArgs.Builder">
            <summary>
            Gets or sets the StyleBuilder instance.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ResolveStyleBuilderEventArgs.ThemeName">
            <summary>
            Gets the name of the theme for which StyleBuilder is required.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadElement">
            <summary>
            RadElement class represents the smallest unit in a RadControl that can be painted or that has a layout slot in a RadControl.
            Generally each RadCotnrol is composed of a tree of RadElements. The tree has as a root the <see cref="P:Telerik.WinControls.RadControl.RootElement"/> and
            children <see cref="P:Telerik.WinControls.RadElement.Children"/> property.
            </summary>
            <remarks>
                Elements nesting also represents the visual nesting. Elements are painted starting
                from the root to the leaves of the tree. the leaves are most often primitive
                elements like, text, fills, borders and so on. Elements that are descendants of 
                LayoutPanel are responsible for arranging their children in the available space
                and/or for notifying the parent that the layout space is not enough to expand.
                Layout behavior of each element can be adjusted using the properties:
                <see cref="P:Telerik.WinControls.RadElement.AutoSize"/>, <see cref="P:Telerik.WinControls.RadElement.Size"/>,
                <see cref="P:Telerik.WinControls.RadElement.AutoSizeMode"/> (old layouts), and <see cref="P:Telerik.WinControls.RadElement.StretchHorizontally"/> and <see cref="P:Telerik.WinControls.RadElement.StretchVertically"/> for
            	the new layouts. 
            	RadElement is the base class of all elements that need to take advantage of TPF features, like 
            	property inheritance, layouts, styling
                with the Visual Style Builder application. Each property change of a RadElement or
                of its inheritance parent would result in calling the method OnPropertyChange,
                which can be overridden in order to customize the response to changes of any
                RadPoperty.
            </remarks>
        </member>
        <member name="M:Telerik.WinControls.RadElement.CallCreateChildElements">
            <summary>
            Creates the child elements and sets their locally applied values as Default
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.SuspendReferenceUpdate">
            <summary>
            Temporary suspends UpdateReferences method.
            Useful when modifying the element tree without changing the actual element's references.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.ResumeReferenceUpdate">
            <summary>
            Resumes previously suspended UpdateReference method.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.InitializeFields">
            <summary>
            Initializes member fields to their default values.
            This method is called prior the CreateChildItems one and allows for initialization of members on which child elements depend.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.CreateChildElements">
            <summary>
            Called by the element when constructed. Allows inheritors to build the element tree.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.OnLoad(System.Boolean)">
            <summary>
            A callback used by the owning RadControl to notify the element for a first-time screen visualization.
            </summary>
            <param name="recursive">True to notify entire subtree for the load process, false otherwise.</param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.CallOnLoad(System.Boolean)">
            <summary>
            This method is used internally.
            </summary>
            <param name="recursive"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.LoadCore">
            <summary>
            Allows inheritors to provide custom load logic.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.OnLoaded">
            <summary>
            Called when the element has been successfully loaded. That includes loading of all its children as well.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.OnUnload(Telerik.WinControls.ComponentThemableElementTree,System.Boolean)">
            <summary>
            Unloads the element if it was previously loaded on an element tree.
            </summary>
            <param name="oldTree">Reference to the element tree from which we are in a process of unload.</param>
            <param name="recursive"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.UnloadCore(Telerik.WinControls.ComponentThemableElementTree)">
            <summary>
            Executes the core unload logic. Allows inheritors to perform additional action while the element is unloading itself.
            </summary>
            <param name="oldTree">Reference to the element tree from which we are in a process of unload.</param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.OnUnloaded(Telerik.WinControls.ComponentThemableElementTree)">
            <summary>
            Notifies that the element has been successfully unloaded from an element tree.
            Allows inheritors to provide custom logic at this stage.
            </summary>
            <param name="oldTree">Reference to the element tree from which the element has been unloaded.</param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.OnElementTreeChanged(Telerik.WinControls.ComponentThemableElementTree)">
            <summary>
            The element gets notified for a change in its current ElementTree member.
            </summary>
            <param name="previousTree"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.OnBeginDispose">
            <summary>
            A callback used by the owning RadControl to notify the element for the beginning of a disposing process.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ElementState">
            <summary>
            Gets the current state of the element.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.SetParent(Telerik.WinControls.RadElement)">
            <summary>
            Applies the specified <see cref="T:Telerik.WinControls.RadElement">RadElement</see> instance as parent of the current instance.
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.OnParentChanged(Telerik.WinControls.RadElement)">
            <summary>
            Notifies for a change in the Parent value.
            </summary>
            <param name="previousParent">The previous parent element (if any)</param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.UpdateReferences(Telerik.WinControls.ComponentThemableElementTree,System.Boolean,System.Boolean)">
            <summary>
            Updates the local references using the provided element tree.
            </summary>
            <param name="tree"></param>
            <param name="updateInheritance">True to update inheritance chain, false otherwise.</param>
            <param name="recursive">True to update children also, false otherwise.</param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.SetIsDesignMode(System.Boolean,System.Boolean)">
            <summary>
             This method is used internally!
            </summary>
            <param name="value"></param>
            <param name="recursive"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.UpdateState(Telerik.WinControls.ComponentThemableElementTree)">
            <summary>
            Updates the state of the element when reference update is suspended and we have a change in our parent.
            </summary>
            <param name="tree"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.ChangeCollection(Telerik.WinControls.RadElement,Telerik.WinControls.ItemsChangeOperation)">
            <summary>
            Performs an update after a change in the Children collection.
            </summary>
            <param name="child">The element associated with the change.</param>
            <param name="changeOperation"></param>        
        </member>
        <member name="M:Telerik.WinControls.RadElement.ResetLayout(System.Boolean)">
            <summary>
            Resets all layout related fields and puts the element in its initial layout state.
            </summary>
            <param name="recursive"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.HasInvisibleAncestor">
            <summary>
            Determines whether there is an ancestor in this element tree that is not visible.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.SetAllLocalValuesAsDefault(System.Boolean)">
            <summary>
            This method is used internally.
            </summary>
            <param name="recursive"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.SuspendLayout">
            <summary>
            Temporary suspends layout operations upon this element.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.SuspendLayout(System.Boolean)">
            <summary>
            Temporary suspends layout operations upon this element.
            </summary>
            <param name="recursive">True to suspend children also, false otherwise.</param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.SetBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the bounds of the element to the specified rectangle (locating and
            size).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the bounds of the element to the specified rectangle (X, Y, width and
            height).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetBoundingRectangle(System.Drawing.Size)">
            <summary>
            Gets the rectangle which surrounds the rotated element (if having AngleTransform property set).
            </summary>
            <param name="size">The size of the element which is accepted as a parameter (for example when returned from GetPreferredSize).</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.PointToScreen(System.Drawing.Point)">
            <summary>
            Retrieves a point in screen coordinates taking as a parameter a point which is in
            element coordinates (this means that the top left corner of the element is with
            coordinates 0, 0).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.PointFromScreen(System.Drawing.Point)">
            <summary>
            Retrieves a point in control coordinates taking as a parameter a point which is in
            screen coordinates.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.PointToControl(System.Drawing.Point)">
            <summary>
            Retrieves a point in control coordinates taking as a parameter a point which is in
            element coordinates. The method does not take into consideration the AngleTransform property applied
            on the element.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.PointFromControl(System.Drawing.Point)">
            <summary>
            Retrieves a point in control coordinates taking as a parameter a point which is in
            element coordinates. The method takes into consideration the AngleTransform property applied
            on the element and rotates back the transformation. This means that the top left corner of
            the element is with coordinates (0, 0) no matter what is AngleTransform value.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.RectangleToScreen(System.Drawing.Rectangle)">
            <summary>
            Retrieves a rectangle in screen coordinates taking as a parameter a rectangle
            which is in element coordinates (this means that the top left corner of the element is
            with coordinates 0, 0).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.CallOnRenderSizeChanged(Telerik.WinControls.Layouts.SizeChangedInfo)">
            <summary>
            This method is used internally.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.ShouldArrangeChild(Telerik.WinControls.RadElement)">
            <summary>
            Gets a value indicating, whether a child will be arranged during the ArrangeOverride.
            </summary>
            <param name="child">The child.</param>
            <returns>Whether the child will be arranged in ArrangeOverride.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.ArrangeOverride(System.Drawing.SizeF)">
            <summary>
            Arranges the <see cref="T:Telerik.WinControls.RadElement"/> to its final location.
            The element must call the Arrange method of each of its children.
            </summary>
            <param name="finalSize">The size that is available for element.</param>
            <returns>The rectangle occupied by the element. Usually <paramref name="finalSize"/>. Should you return different size, the Layout system will restart measuring and rearranging the items. That could lead to infinite recursion.</returns>
            <remarks>In this method call to the Arrange method of each child must be made.</remarks>
        </member>
        <member name="M:Telerik.WinControls.RadElement.MeasureOverride(System.Drawing.SizeF)">
            <summary>
            Measures the space required by the <see cref="T:Telerik.WinControls.RadElement"/>
            
            Used by the layout system.
            </summary>
            <param name="availableSize">The size that is available to the <see cref="T:Telerik.WinControls.RadElement"/>. The available size can be infinity (to take the full size of the element)</param>
            <returns>The minimum size required by the element to be completely visible. Cannot be infinity.</returns>
            <remarks>In this method call to the Measure method of each child must be made.</remarks>
        </member>
        <member name="M:Telerik.WinControls.RadElement.ShouldMeasureChild(Telerik.WinControls.RadElement)">
            <summary>
            Gets a value indicating, whether a child will be measured during the MeasureOverride.
            </summary>
            <param name="child">The child.</param>
            <returns>Whether the child will be measured in MeasureOverride.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetArrangeRect(System.Drawing.RectangleF)">
            <summary>
            Gets the arrange rectangle, valid for this element.
            </summary>
            <param name="proposed"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.CanExecuteLayoutOperation">
            <summary>
            Determines whether the element can perform layout operation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.IsInValidState(System.Boolean)">
            <summary>
            Determines whether the element is currently in valid state.
            That is having a valid RadElementTree reference and being in either Constructed or Loaded state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetScrollingOffset">
            <summary>
            Gets the offset that is caused by scrolling. The difference between this method and
            PositionOffset property is that GetScrollingOffset() takes into account RightToLeft.
            </summary>
            <returns>The scrolling offset for this element.</returns>
        </member>
        <member name="P:Telerik.WinControls.RadElement.LayoutManager">
            <summary>
            Gets the layout manager of the element. Will be null until the element is loaded on a visual scene.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.DesiredSize">
            <summary>
            Gets the element desired size.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.IsLayoutSuspended">
            <summary>
            Gets a value indicating whether the layout is suspended or not.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.BoundingRectangle">
            <summary>
            	Represents the rectangle which surrounds the element bounds after the rotation caused by setting the AngleTransform property to some degree. The rectangle is in parent element's coordinates.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ControlBoundingRectangle">
            <summary>
            	Represents the rectangle which surrounds the element bounds after the rotation caused by setting the AngleTransform property to some degree. The rectangle is in control coordinates.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.PreviousArrangeRect">
            <summary>
            This property is used internally.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.TreeLevel">
            <summary>
            Gets the level of this element in the ElementTree it currently resides.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetInvalidateBounds">
            <summary>
            Returns the bounds of the area that should be invalidated when the element is invalidated.
            </summary>
            <returns>The bounds to invalidate.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.OnTransformationInvalidated">
            <summary>
            This method is executed when a property which affects the absolute position of the element has been changed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.InvalidateTransformations">
            <summary>
            This method is used internally.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.PaintElementSkin(Telerik.WinControls.Paint.IGraphics)">
            <summary>
            Provides a routine to paint element's content when system skin appearance is desired.
            </summary>
            <param name="graphics"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.PaintOverride(Telerik.WinControls.Paint.IGraphics,System.Drawing.Rectangle,System.Single,System.Drawing.SizeF,System.Boolean)">
            <summary>
            Virtual layer between PaintChildren() and Paint().
            Can be overridden to fully customize element hierarchy paint.
            Used for painting disabled items.
            </summary>
            <param name="graphics">The graphics object.</param>
            <param name="clipRectangle">The rectangle which has been invalidated.</param>
            <param name="angle">The angle (in degrees) to which the current element is rotated. This angle is a sum of all AngleTransform properties of this element's parents.</param>
            <param name="scale"></param>
            <param name="useRelativeTransformation"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.Paint(Telerik.WinControls.Paint.IGraphics,System.Drawing.Rectangle,System.Single,System.Drawing.SizeF,System.Boolean)">
            <summary>
            This method is used internally.
            </summary>
            <param name="graphics"></param>
            <param name="clipRectangle"></param>
            <param name="angle"></param>
            <param name="scale"></param>
            <param name="useRelativeTransformation"></param>
        </member>
        <member name="E:Telerik.WinControls.RadElement.ElementPainted">
            <summary>
            This event occurs after printing the element. It is used internally.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetXPVisualStyle">
            <summary>
            Gets the VisualStyleElement instance that describes the skin appearance for the element when the current OS is Windows XP.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetVistaVisualStyle">
            <summary>
            Gets the VisualStyleElement instance that describes the skin appearance for the element when the current OS is Windows Vista.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.RadElement.UseSystemSkin">
            <summary>
            Gets or sets the mode that describes the usage of system skinning (if available).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.InitializeSystemSkinPaint">
            <summary>
            Performs initialization when the element is first-time painted using system skin.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetSystemSkinPaintBounds">
            <summary>
            Gets the rectangle where skin background should be painted.
            Defaults to BoundingRectangle.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.OnUseSystemSkinChanged(System.EventArgs)">
            <summary>
            The element gets notified for a change in the <see cref="P:Telerik.WinControls.RadElement.UseSystemSkin">UseSystemSkin</see> property.
            This method will recursively notify all descendants for the change.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.ShouldPaintSystemSkin">
            <summary>
            Determines whether we should paint system skin.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.ComposeShouldPaintSystemSkin">
            <summary>
            Composes a value which determines whether the element should use system skins when painting.
            This method will traverse the element and control tree and will end with the global <see cref="P:Telerik.WinControls.SystemSkinManager.UseSystemSkin">UseSystemSkin</see> property.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.MapStyleProperty(Telerik.WinControls.RadProperty,System.String)">
            <summary>
            Maps a style property to another property. This method is used
            to map corresponding properties of LightVisualElement
            instances and <see cref="T:Telerik.WinControls.Primitives.BasePrimitive"/> instances.
            </summary>
            <param name="propertyToMap">An instance of the <see cref="T:Telerik.WinControls.RadProperty"/>
            class that represents the property to map.</param>
            <param name="settingType"></param>
            <returns>An instance of the <see cref="T:Telerik.WinControls.RadProperty"/>
            class which represents the mapped property. If no property is found,
            the method returns null</returns>
        </member>
        <member name="P:Telerik.WinControls.RadElement.VsbVisible">
            <summary>
            Determines whether the element may be added associated with metadata in the Visual Style Builder.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetStylablePropertiesFilter">
            <summary>
            Gets the IFilter instance that may be used to filter the properties, treated as Stylable for this element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.ResetStyleSettings(System.Boolean)">
            <summary>
            Resets the Style modifier of each registered property.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.ResetStyleSettings(System.Boolean,Telerik.WinControls.RadProperty)">
            <summary>
            Resets the Style modifier for the specified property. Will reset all properties if null is passed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.AddBehavior(Telerik.WinControls.PropertyChangeBehavior)">
            <summary>
            Adds a property change behavior to the list of behaviors of the element.
            </summary>
            <remarks>
            Behaviors can be used to specify how an element should respond when a certain element property changes.
            Behaviors are used internally by stylesheets when applying to an hierarchy of elements.
            </remarks>
            <param name="behavior">behavior instance - should not be null (or Nothing in VB.NET)</param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.AddRangeBehavior(Telerik.WinControls.PropertyChangeBehaviorCollection)">
            <summary>
            <see cref="M:Telerik.WinControls.RadElement.AddBehavior(Telerik.WinControls.PropertyChangeBehavior)"/>
            </summary>
            <param name="behaviors">list of behaviors</param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.SetThemeApplied(System.Boolean)">
            <summary>
            Used internally to support RadControl infrastructure. This method is not intended for use directly from your code.
            </summary>
            <param name="newValue"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.SuspendThemeRefresh">
            <summary>
            This method is used internally.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.ResumeThemeRefresh">
            <summary>
            This method is used internally.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.CanHaveOwnStyle">
            <summary>
            Gets a value indicating whether the element can have its own style with style conditions.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.PropagateStyleToChildren">
            <summary>
            Defines whether stylesheet rules should be applied for this element and its children, or only for this element
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ElementTree">
            <summary>
            Gets a reference to the tree object, that contains information about the scene where the element is currently visualized.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Children">
            <summary>
            Gets the collection of elements that are child elements in the element
            tree.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ChildrenHierarchy">
            <summary>
            Enumerates entire subtree of elements (using depth-first approach), 
            starting from this one as a root.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetChildrenByType(System.Type)">
            <summary>
            Gets a list of child elements using the type to filter the results.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.FindAncestorByThemeEffectiveType(System.Type)">
            <summary>
            Searches up the parent chain and returns the first parent with the provided ThemeEffectiveType.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.FindAncestor``1">
            <summary>
            Searches up the parent chain and returns the first parent of type T.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.IsAncestorOf(Telerik.WinControls.RadElement)">
            <summary>
            Gets a boolean value that determines whether a given element
            resides in the element hierarchy of this element.
            </summary>
            <param name="element">An instance of the <see cref="T:Telerik.WinControls.RadElement"/>
            class which is checked.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.FindDescendant``1">
            <summary>
            Searches down the subtree of elements, using breadth-first approach, and returns the first descendant of type T.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.FindDescendant(System.Predicate{Telerik.WinControls.RadElement})">
            <summary>
            Searches down the subtree of elements, using breadth-first approach, and returns the first descendant of type T.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.FindDescendant(System.Type)">
            <summary>
            Searches down the subtree of elements, using breadth-first approach, and returns the first descendant of the specified Type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.EnumDescendants(Telerik.WinControls.TreeTraversalMode)">
            <summary>
            Provides flexible routine for traversing all descendants of this instance that match the provided predicate.
            </summary>
            <param name="traverseMode">The mode used to traverse the subtree.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.EnumDescendants(System.Predicate{Telerik.WinControls.RadElement},Telerik.WinControls.TreeTraversalMode)">
            <summary>
            Provides flexible routine for traversing all descendants of this instance that match the provided predicate.
            </summary>
            <param name="predicate">The filter that defines the match criteria.</param>
            <param name="traverseMode">The mode used to traverse the subtree.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.EnumDescendants(Telerik.WinControls.Filter,Telerik.WinControls.TreeTraversalMode)">
            <summary>
            Provides flexible routine for traversing all descendants of this instance that match the provided filter.
            </summary>
            <param name="filter">The filter that defines the match criteria.</param>
            <param name="traverseMode">The mode used to traverse the subtree.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetDescendants(System.Predicate{Telerik.WinControls.RadElement},Telerik.WinControls.TreeTraversalMode)">
            <summary>
            Gets a list with all the descendants that match the provided filter.
            </summary>
            <param name="predicate"></param>
            <param name="traverseMode"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetDescendants(Telerik.WinControls.Filter,Telerik.WinControls.TreeTraversalMode)">
            <summary>
            Gets a list with all the descendants that match the provided filter.
            </summary>
            <param name="filter"></param>
            <param name="traverseMode"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetAncestors(Telerik.WinControls.Filter)">
            <summary>
            Provides a routine which enumerates all ancestors up in the parent chain of this element, which match the provided Filter.
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetAncestors(System.Predicate{Telerik.WinControls.RadElement})">
            <summary>
            Provides a routine which enumerates all ancestors up in the parent chain of this element, which match the provided predicate.
            </summary>
            <param name="predicate">The predicate used to filter parents.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Parent">
            <summary>Gets a reference to the parent element in the visual element tree.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.RoutedEventBehaviors">
            <exclude/>
        </member>
        <member name="M:Telerik.WinControls.RadElement.UpdateZOrderedCollection(Telerik.WinControls.RadElement,Telerik.WinControls.ItemsChangeOperation)">
            <summary>
            Forces an update in the z-ordered collection after a change in the Children collection.
            </summary>
            <param name="child"></param>
            <param name="change"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetChildren(Telerik.WinControls.ChildrenListOptions)">
            <summary>
            Allows enumerating of this element's children, using the specified options.
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.RadElement.LayoutableChildrenCount">
            <summary>
            Gets the count of all elements, which visibility is not ElementVisibility.Collapsed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.SendToBack">
            <summary>
            Sends this element to the beginning of its parent's z-ordered collection.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.BringToFront">
            <summary>
            Sends this element at the end of its parent's z-ordered collection.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetChildAt(System.Int32)">
            <summary>
            Method used by control Code Dom serializer to access items in the collection
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.IsChildOf(Telerik.WinControls.RadElement)">
            <summary>
            Get a value indicating whether the element is a direct or indirect child of specified parent element
            </summary>
            <param name="parent">Parent to test</param>
            <returns>true if the element is child of parent, false otherwise</returns>
        </member>
        <member name="E:Telerik.WinControls.RadElement.MouseHover">
            <summary>
            Occurs when the mouse pointer rests on the element. 
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadElement.MouseMove">
            <summary>
            Occurs when the mouse pointer is moved over the element.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadElement.MouseDown">
            <summary>
            Occurs when the mouse pointer is over the element and a mouse button is pressed.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadElement.MouseUp">
            <summary>
            Occurs when the mouse pointer is over the element and a mouse button is released.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadElement.Click">
            <summary>
            Occurs when the element is clicked. 
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadElement.DoubleClick">
            <summary>
            Occurs when the element is double-clicked.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadElement.MouseEnter">
            <summary>
            Occurs when the mouse pointer enters the element.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadElement.MouseWheel">
            <summary>
            Occurs when the RadItem has focus and the user scrolls up or down the mouse wheel
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadElement.EnabledChanged">
            <summary>
            Occurs when the mouse pointer leaves the element.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadElement.ChildrenChanged">
            <summary>
            Occurs when the children collection of the element is changed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ContainsFocus">
            <summary>
            Determines whether the element or one of its descendants currently contains the keyboard focus.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.SetElementFocused(System.Boolean)">
            <summary>
            This method sets the focused state of an element. It is used internally.
            </summary>
            <param name="isFocused">The new focused state.</param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.SetFocus">
            <summary>
            This method is used internally!
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.OnDoubleClick(System.EventArgs)">
            <summary>
            Raises the DoubleClick event.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseWheel event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.CallDoMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
             This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ShouldHandleMouseInput">
            <summary>
            Specifies whether the Item should handle MouseOver, MouseMove and related mouse events.
            </summary>
            <remarks>
            By default only elements that inherit RadItem can process mouse input.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadElement.NotifyParentOnMouseInput">
            <summary>
                Gets or sets a value indicating whether the element should pass the handled mouse
                event to the first parent element which has the
                <see cref="P:Telerik.WinControls.RadElement.ShouldHandleMouseInput"/> property set to true.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.OnShowScreenTip(Telerik.WinControls.ComponentInputBehavior)">
            <summary>
            Shows a screen tip.
            </summary>
            <param name="inputBehavior">The input behavior.</param>
            <returns>A value indicating whether a screen tip is shown.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.UpdateContainsMouse">
            <summary>
            Updates the ContainsMouse property. The notification may be received from a child whose IsMouseOver property has changed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.UpdateContainsFocus(System.Boolean)">
            <summary>
            Updates the ContainsFocus property. The notification may be received from a child whose IsFocused property has changed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.CallDoMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.CallDoMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.CallDoMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.CallDoMouseHover(System.EventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.CallDoMouseEnter(System.EventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.CallDoMouseLeave(System.EventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.CallDoClick(System.EventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.CallDoDoubleClick(System.EventArgs)">
            <summary>
            This method is used internally!
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.UpdateInheritanceChain(System.Boolean)">
            <summary>
            Invalidates all Ambient (inherited) properties down in the parent chain.
            Called when the parent for this element changes.
            </summary>
            <param name="recursive">True to update children also, false otherwise.</param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.OnParentPropertyChanged(Telerik.WinControls.RadPropertyChangedEventArgs)">
            <summary>
            The object gets notified for a parent property change.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.ReplaceDefaultDescriptors(System.ComponentModel.PropertyDescriptorCollection)">
            <summary>
            Add the ElementTree property if we are in the context of RadControlSpy.
            </summary>
            <param name="props"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.RadElement.AutoSize">
            <summary>
            Gets or sets a value indicating whether the element size will be calculated
            automatically by the layout system. Value of false indicates that the element's size
            will not be changed when calculating the layout.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Bounds">
            <summary>
                Gets or sets a value corresponding to the bounding rectangle of the element.
                Location and/or Size portions of the bounds may be calculated automatically based
                on the current <see cref="P:Telerik.WinControls.RadElement.AutoSize"/> and <see cref="P:Telerik.WinControls.RadElement.AutoSizeMode"/>
                settings.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Location">
            <summary>
                Gets or sets the location of the element based on the element parent rectangle.
                Corresponds to <see cref="P:Telerik.WinControls.RadElement.Bounds"/>.Location
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Size">
            <summary>
                Gets or sets the size of the element which is the height and width of the visual
                rectangle that would contain the graphics of the element. Size corresponds to
                element's Bounds.Size. When the <see cref="P:Telerik.WinControls.RadElement.AutoSize">AutoSize</see> property is set
                to true setting the Size property to some value has no effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.BorderThickness">
            <summary>
            Gets or sets the border thickness of the element. This thickness is included into the
            element's bounding rectangle.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Padding">
            <summary>
            Gets or sets the padding sizes of the element. The paddings are included into the
            element's bounding rectangle.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Margin">
            <summary>
            Gets or sets a value corresponding to the margins of the element. Margins are not
            included into the element's bounding rectangle.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Alignment">
            <summary>
            Gets or sets the preferred location of the element if its size is less than its
            parent size.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.AutoSizeMode">
            <summary>
                Gets or sets the way the element should calculate its <see cref="P:Telerik.WinControls.RadElement.Size"/>, when
                the <see cref="P:Telerik.WinControls.RadElement.AutoSize"/> property is set to true.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.FitToSizeMode">
            <summary>
            Gets or sets a value indicating the way element will fill its available size when
            parent element is calculating element size and location.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Enabled">
            <summary>
            Gets or sets a value indicating whether the element can respond to user
            interaction.
            </summary>
            <remarks> 
            By default, if element is currently selected when Enabled set to false, next element would be selected.
            Values inherits from Parent.Enabled.
            When a scrollable control is disabled, the scroll bars are also disabled. 
            For example, a disabled multiline textbox is unable to scroll to display all the lines of text.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadElement.CanFocus">
            <summary>
            Gets or sets a value indicating whether the element can receive input
            focus.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.IsFocused">
            <summary>
            Gets a value indicating whether the element has input focus.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.IsMouseOver">
            <summary>
            Gets or sets a value indicating whether the mouse has entered the bounds of the
            element or any of its sibling elements in the parent RadItem.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.IsMouseOverElement">
            <summary>
            Gets or sets a value indicating whether the mouse has entered the bounds of the
            element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.IsMouseDown">
            <summary>
            Gets or sets a value indicating whether the mouse button has been pressed when
            inside the bounds of the element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.InvalidateChildrenOnChildChanged">
            <summary>
            Provide for use within TelerikLayoutEngine.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ShouldPaint">
            <summary>Gets or sets a value indicating whether the element should be painted.</summary>
            <remarks>
            Children visibility is not be affected.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Visibility">
            <summary>Gets or sets a value indicating element visibility.</summary>
            <remarks>
            Setting this property affects also the children of the element. Collapsed means the element and its children would not be painted and would not be 
            calculated in the layout.
            This property has no effect in design-time on <c ref="RadItem"/> objects.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadElement.IsElementVisible">
            <summary>Gets a value indicating if the element is visible.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Name">
            <summary>Represents the element unique name.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Class">
            <summary>
                Gets or sets a string value indicating the element visual class name. It's used
                when a stylesheet has been applied to this element.
            </summary>
            <remarks>
            Style sheets contain groups of property settings categorized by element type and/or class, thus 
            element "class" is used to determine whether certain style rule would be applied over an element.
            Generally this property is assigned by the control developer but it can be changed design time or runtime if 
            certain element is decided to have different style class.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ClipDrawing">
            <summary>
            Indicates whether the painting of the element and its children should be
            restricted to its bounds.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Shape">
            <summary>
            Gets or sets an instance of the Shape object of an element. The shape of the
            element is both responsible for clipping the element's children and for providing its'
            border(s) with custom shape.
            </summary>
            <remarks>
            Value of null (or Nothing in VisualBasic.Net) indicates that element has rectangular (or no) shape.
            Shape is an object that defines the bounding graphics path of an element. Graphics clip is always applied when an element has shape.
            Shape is considered when painting the border element, and when hit-testing an element.
            Some predefined shapes are available, like <see cref="T:Telerik.WinControls.RoundRectShape"/> or <see cref="T:Telerik.WinControls.EllipseShape"/>.
            <see cref="T:Telerik.WinControls.CustomShape"/> offers a way to specify element's shape with a sequence of points and curves using code 
            or the design time <see cref="T:Telerik.WinControls.ElementShapeEditor"/>
            	<see cref="T:System.Drawing.Design.UITypeEditor"/>.
            </remarks>
        </member>
        <member name="F:Telerik.WinControls.RadElement.MouseClickedEvent">
            <summary>
            Tunnels and bubbles on MouseClick on current element
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.MouseDoubleClickedEvent">
            <summary>
            Tunnels and bubbles on MouseDoubleClick on current element
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.MouseDownEvent">
            <summary>
            Tunnels and bubbles on MouseDown on current element
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.MouseUpEvent">
            <summary>
            Tunnels and bubbles on MouseUp on current element
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.MouseWheelEvent">
            <summary>
            Tunnels and bubbles on MouseWheel on current element
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.ChildElementAddedEvent">
            <summary>
            Routed event key for ChildElementAdded event. Bubbles when element is added
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.ParentChangedEvent">
            <summary>
            Routed event key for ParentChanged event. Tunnels when element parent changes
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.BoundsChangedEvent">
            <summary>
            Tunnels when bounds changed in order to notify any children that should take special actions in this case - like RadHostItem.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.VisibilityChangingEvent">
            <summary>
            Tunnels and bubbles when changes the current element
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.EnabledChangedEvent">
            <summary>
            Tunnels when the Enabled property changes in order to notify any children that should take special actions.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.ControlChangedEvent">
            <summary>
            Tunnels when the winforms control has been changed.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.IsEditedInSpyProperty">
            <summary>
            Used by RadControlSpy to display certain hidden properties in the Property Grid.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.MaxSizeProperty">
            <summary>
            Get or sets the maximum size to apply on an element when layout is calculated.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.ZIndexProperty">
            <summary>
            Property key of the ZIndex Property. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.MinSize">
            <summary>
            Get or sets the minimum size to apply on an element when layout is calculated.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.MaxSize">
            <summary>
            Get or sets the maximum size to apply on an element when layout is
            calculated.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ZIndex">
            <summary>
            Gets of sets the order of painting an element compared to its sibling elements. Greater ZIndex means an element would be 
            painted on top of other elements amongst its siblings. ZIndex changes the order of the elements in the list returned by
            <see cref="M:Telerik.WinControls.RadElement.GetChildren(Telerik.WinControls.ChildrenListOptions)"/>.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.RightToLeft">
            <summary>
            Gets or sets the direction of flow of the elements and whether elements are aligned to support locales 
            using right-to-left fonts.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.UseCompatibleTextRendering">
            <summary>
            Determines whether to use compatible text rendering engine (GDI+) or not (GDI). 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.BackgroundShape">
            <summary>
            Gets or sets the RadImageShape that describes the background of the element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ContainsMouse">
            <summary>
            Determines whether the element or one of its descendants currently contains the mouse.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ScaleTransform">
            <summary>
            Gets or sets a value indicating the scale transform factors, when painting the
            element and its children.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.AngleTransform">
            <summary>
            Gets or sets the rotation transform angle used when painting the element and its
            children.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.PositionOffset">
            <summary>
            Gets or sets the offset of the origin of the coordinate system used when 
            painting the element and its children.
            </summary>
            <remarks>
            TrnslateTransform of the graphics is used prior to painting the element and after painting element children, 
            to reset the transformation
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadElement.SerializeProperties">
            <summary>
            	Gets or sets whether the properties of this element should be serialized
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.SerializeElement">
            <summary>
            	Gets or sets whether the element should be serialized in designer
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.SerializeChildren">
            <summary>
            	Gets or sets whether the children of this element should be serialized
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.RenderingMaxFramerate">
            <summary>Gets or sets a value indicating maximum rendered frames per second.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.IsThemeApplied">
            <summary>
            Gets a value indicating if theme finished applying
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ShouldApplyTheme">
            <summary>
            Gets a value indicating if a theme should be applied 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.UseCenteredAngleTransform">
            <summary>
            Gets a value indicating whether the AngleTransform should use
            the center of the object as origin for the transformation.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ClickMode">
            <summary>
            	Specifies when the Click event should fire.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.DoubleClickEnabled">
            <summary>
            Gets or sets a value indicating whether the DoubleClick event will fire for this item.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.CaptureOnMouseDown">
            <summary>
            Determines whether mouse will be captured upon MouseDown event.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.IsFocusable">
            <summary>
            This property is used internally!
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.TraceInvalidation">
            <summary>
            This field is used internally.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.RadElementLastStateKey">
            <summary>
            This constant is used internally.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Style">
            <summary>
            Gets or sets the stylesheet associated with the element.
            </summary>
            <remarks>
            Stylesheets provide dynamic property settings for elements' RadProperties organized into groups, each regarding a 
            certain state of the element. State means a property has certain value. 
            Style of an element can affect also element children.
            Generally element style is set through control theme, which is a holder for various styles for many controls.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadElement.MeasureIsDirty">
            <summary>
            This property is used internally!
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ArrangeIsDirty">
            <summary>
            This property is used internally!
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.NeverMeasured">
            <summary>
            This property is used internally!
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.NeverArranged">
            <summary>
            This property is used internally!
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ArrangeInProgress">
            <summary>
            This property is used internally!
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.MeasureInProgress">
            <summary>
            This property is used internally!
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ShouldPaintChildren">
            <summary>
            This property is used internally!
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.InvalidateMeasureOnRemove">
            <summary>
            This property is used internally!
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.HideFromElementHierarchyEditor">
            <summary>
            This property is used internally!
            </summary>
        </member>
        <member name="T:Telerik.WinControls.VisualElement">
            <summary>
            Extends RadElement and adds visual properties common to all elements.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.VisualElement.FontChanged">
            <summary>
            Fires when the font is changed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.VisualElement.DefaultSize">
            <summary>
            Gets or sets the DefaultSize.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.VisualElement.ForeColor">
            <summary>
            Gets or sets the forecolor. Color type represents an ARGB color.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.VisualElement.BackColor">
            <summary>
            Gets or sets the backcolor. Color type represents an ARGB color.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.VisualElement.Font">
            <summary>
            Gets or sets the font. Font type defines a particular format for text, including
            font face, size, and style attributes.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.VisualElement.SmoothingMode">
            <summary>
            Gets or sets the smoothing mode of an element. Smoothing mode enumeration defines
            possible values.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.VisualElement.Opacity">
            <summary>
            Gets or sets the opacity of an element. Value 0.0f indicates that the element is completely transparent,
            1.0f means the element is not transparent (the default value).
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadElementCollection">
            <summary>
                <para>
                  A collection that stores <see cref='T:Telerik.WinControls.RadElement'/> objects.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.#ctor(Telerik.WinControls.RadElement)">
            <summary>
                <para>
                  Initializes a new instance of the <see cref='T:Telerik.WinControls.RadElementCollection'/>.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.#ctor(Telerik.WinControls.RadElement,Telerik.WinControls.RadElementCollection)">
            <summary>
                <para>
                  Initializes a new instance of the <see cref='T:Telerik.WinControls.RadElementCollection'/> based on another <see cref='T:Telerik.WinControls.RadElementCollection'/>.
               </para>
            </summary>
            <param name="owner"></param>
            <param name='value'>
                  A <see cref='T:Telerik.WinControls.RadElementCollection'/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.#ctor(Telerik.WinControls.RadElement,Telerik.WinControls.RadElement[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref='T:Telerik.WinControls.RadElementCollection'/> containing any array of <see cref='T:Telerik.WinControls.RadElement'/> objects.
               </para>
            </summary>
            <param name="owner"></param>
            <param name='value'>
                  A array of <see cref='T:Telerik.WinControls.RadElement'/> objects with which to intialize the collection
            </param>
        </member>
        <member name="P:Telerik.WinControls.RadElementCollection.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref='T:Telerik.WinControls.RadElement'/>.</para>
            </summary>
            <param name='index'><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='index'/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.Add(Telerik.WinControls.RadElement)">
            <summary>
               <para>Adds a <see cref='T:Telerik.WinControls.RadElement'/> with the specified value to the 
               <see cref='T:Telerik.WinControls.RadElementCollection'/> .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.RadElement'/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.AddRange(Telerik.WinControls.RadElement[])">
            <summary>
            <para>Copies the elements of an array to the end of the <see cref='T:Telerik.WinControls.RadElementCollection'/>.</para>
            </summary>
            <param name='value'>
               An array of type <see cref='T:Telerik.WinControls.RadElement'/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.AddRange(System.Collections.Generic.IList{Telerik.WinControls.RadElement})">
            <summary>
            <para>Copies the elements of an IList of RadElements to the end of the <see cref='T:Telerik.WinControls.RadElementCollection'/>.</para>
            </summary>
            <param name='value'>
               An List of type <see cref='T:Telerik.WinControls.RadElement'/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.AddRange(Telerik.WinControls.RadElementCollection)">
            <summary>
                <para>
                  Adds the contents of another <see cref='T:Telerik.WinControls.RadElementCollection'/> to the end of the collection.
               </para>
            </summary>
            <param name='value'>
               A <see cref='T:Telerik.WinControls.RadElementCollection'/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.Contains(Telerik.WinControls.RadElement)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref='T:Telerik.WinControls.RadElementCollection'/> contains the specified <see cref='T:Telerik.WinControls.RadElement'/>.</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.RadElement'/> to locate.</param>
            <returns>
            <para><see langword='true'/> if the <see cref='T:Telerik.WinControls.RadElement'/> is contained in the collection; 
              otherwise, <see langword='false'/>.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.CopyTo(Telerik.WinControls.RadElement[],System.Int32)">
            <summary>
            <para>Copies the <see cref='T:Telerik.WinControls.RadElementCollection'/> values to a one-dimensional <see cref='T:System.Array'/> instance at the 
               specified index.</para>
            </summary>
            <param name='array'><para>The one-dimensional <see cref='T:System.Array'/> that is the destination of the values copied from <see cref='T:Telerik.WinControls.RadElementCollection'/> .</para></param>
            <param name='index'>The index in <paramref name='array'/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref='T:System.ArgumentException'><para><paramref name='array'/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref='T:Telerik.WinControls.RadElementCollection'/> is greater than the available space between <paramref name='index'/> and the end of <paramref name='array'/>.</para></exception>
            <exception cref='T:System.ArgumentNullException'><paramref name='array'/> is <see langword='null'/>. </exception>
            <exception cref='T:System.ArgumentOutOfRangeException'><paramref name='index'/> is less than <paramref name='array'/>'s lowbound. </exception>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.IndexOf(Telerik.WinControls.RadElement)">
            <summary>
               <para>Returns the index of a <see cref='T:Telerik.WinControls.RadElement'/> in 
                  the <see cref='T:Telerik.WinControls.RadElementCollection'/> .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.RadElement'/> to locate.</param>
            <returns>
            <para>The index of the <see cref='T:Telerik.WinControls.RadElement'/> of <paramref name='value'/> in the 
            <see cref='T:Telerik.WinControls.RadElementCollection'/>, if found; otherwise, -1.</para>
            </returns>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.Insert(System.Int32,Telerik.WinControls.RadElement)">
            <summary>
            <para>Inserts a <see cref='T:Telerik.WinControls.RadElement'/> into the <see cref='T:Telerik.WinControls.RadElementCollection'/> at the specified index.</para>
            </summary>
            <param name='index'>The zero-based index where <paramref name='value'/> should be inserted.</param>
            <param name=' value'>The <see cref='T:Telerik.WinControls.RadElement'/> to insert.</param>
            <returns><para>None.</para></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.GetEnumerator">
            <summary>
               <para>Returns an enumerator that can iterate through 
                  the <see cref='T:Telerik.WinControls.RadElementCollection'/> .</para>
            </summary>
            <returns><para>None.</para></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.Remove(Telerik.WinControls.RadElement)">
            <summary>
               <para> Removes a specific <see cref='T:Telerik.WinControls.RadElement'/> from the 
               <see cref='T:Telerik.WinControls.RadElementCollection'/> .</para>
            </summary>
            <param name='value'>The <see cref='T:Telerik.WinControls.RadElement'/> to remove from the <see cref='T:Telerik.WinControls.RadElementCollection'/> .</param>
            <returns><para>None.</para></returns>
            <exception cref='T:System.ArgumentException'><paramref name='value'/> is not found in the Collection. </exception>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.Sort">
            <summary>
            <para>Sorts the elements in the entire <see cref='T:Telerik.WinControls.RadElementCollection'/> using the IComparable implementation of each element.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.Sort(System.Collections.IComparer)">
            <summary>
            <para>Sorts the elements in the entire <see cref='T:Telerik.WinControls.RadElementCollection'/> using the specified comparer.</para>
            </summary>
            <param name="comparer">The IComparer implementation to use when comparing elements.</param>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            <para>Sorts the elements in a range of elements in <see cref='T:Telerik.WinControls.RadElementCollection'/> using the specified comparer.</para>
            </summary>
            <param name="index">The zero-based starting index of the range to sort. </param>
            <param name="count">The length of the range to sort. </param>
            <param name="comparer">The IComparer implementation to use when comparing elements.</param>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.Move(System.Int32,System.Int32)">
            <summary>
            <para>Moves the element at position a given position to a new position</para>
            </summary>
            <param name="indexFrom">The zero-based index of the element to move</param>
            <param name="indexTo">The zero-based index of the position where the element is to be placed</param>
        </member>
        <member name="T:Telerik.WinControls.XmlSerialization.ColorBlendExtension">
            <summary>
            Provides XmlSerialization parsing for ColorBlend extention and 
            calculates color-blending values for color values of PropertySetting and AnimatedPropertySettings.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ColorBlendExtension.GetValue">
            <summary>
            IValueProvider GetValue implementation
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.XmlSerialization.ColorBlendExtension.OriginalColor">
            <summary>
            Gets the original Color value
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlSerialization.ColorBlendExtension.ThemePropertyName">
            <summary>
            Gets value corresponding to the name of the ThemeParameter used for color blending calculations
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XmlSerialization.ComponentXmlSerializationInfo">
            <summary>
            Instances of this type are used by <see cref="T:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer"/> to provide information used to control
            XML of properties and sub-objets.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlSerialization.ComponentXmlSerializationInfo.SerializationMetadata">
            <summary>
            Gets a collection of attributes for properties that would override the original designer serialization 
            metadata for these properties
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlSerialization.ComponentXmlSerializationInfo.DisregardOriginalSerializationVisibility">
            <summary>
            Gets or sets value indicating whether the serializer will use the serialization visibility attributes 
            of the properties of the serialized objects or only those found in <see cref="P:Telerik.WinControls.XmlSerialization.ComponentXmlSerializationInfo.SerializationMetadata"/>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlSerialization.ComponentXmlSerializationInfo.SerializeDefaultValues">
            <summary>
            Gets or sets value indincating whether the serializer will force serialization of properties, disregarding 
            the values of the DefaultValue attribute or ShouldSerialize method
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer">
            <summary>
            Serializes components to XML, using the same rules that apply in Code Dom serialization, in VS designer.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.#ctor(Telerik.WinControls.XmlSerialization.ComponentXmlSerializationInfo)">
            <summary>
            Constructs new instance of the class, providing extended properties serialization information
            </summary>
            <param name="componentSerializationInfo">Extends the properties serialization information.</param>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.#ctor(System.Collections.IDictionary,Telerik.WinControls.XmlSerialization.ComponentXmlSerializationInfo)">
            <summary>
            Constructs new instance of the class, providing extended serialization information.
            </summary>
            <param name="typeMap">Dictionary to use that maps type names to XML element names. Keys of the dictionary entries should be type full names. Values should correspond to the type instances.</param>
            <param name="componentSerializationInfo">Extends the properties serialization information.</param>
        </member>
        <member name="P:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ResolveTypesOnlyInTelerikAssemblies">
            <summary>
            Gets or sets value indicating whether the serializer will search all domain assemblies for a specified type 
            (by FullName) or will search only assemblies related to telerik
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ReadCollectionElement(System.Xml.XmlReader,System.Collections.IList)">
            <summary>
            if Reader is positioned at an element that is a collection, reads the collection items.
            </summary>
            <param name="reader"></param>
            <param name="toRead"></param>        
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ReadCollectionElement(System.Xml.XmlReader,System.Object,System.Collections.IList)">
            <summary>
            if Reader is positioned at an element that is a collection, reads the collection items.
            </summary>
            <param name="reader"></param>
            <param name="collectionOwner">object that owns the property (collection) currently deserialized</param>
            <param name="toRead"></param>        
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ReadCollectionElement(System.Xml.XmlReader,System.Object,System.Collections.IList,System.Boolean)">
            <summary>
            if Reader is positioned at an element that is a collection, reads the collection items.
            </summary>
            <param name="reader"></param>
            <param name="collectionOwner">object that owns the property (collection) currently deserialized</param>
            <param name="toRead"></param>      
            <param name="disposeObjects"></param>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ReadMergeCollection(System.Xml.XmlReader,System.Object,System.ComponentModel.PropertyDescriptor,System.Collections.IList,System.String)">
            <summary>
            Reads the collection items if reader is positioned on an element that is a collection.
            </summary>
            <param name="reader"></param>
            <param name="parent"></param>
            <param name="parentProperty"></param>
            <param name="toRead"></param>
            <param name="uniquePropertyName">property used to match objects in collection</param>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ReadMergeCollection(System.Xml.XmlReader,System.Object,System.ComponentModel.PropertyDescriptor,System.Collections.IList,System.String,System.Boolean)">
            <summary>
            Reads the collection items if reader is positioned on an element that is a collection.
            </summary>
            <param name="reader"></param>
            <param name="parent"></param>
            <param name="parentProperty"></param>
            <param name="toRead"></param>
            <param name="uniquePropertyName">property used to match objects in collection</param>
            <param name="disposeObjects"></param>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ReadMergeCollection(System.Xml.XmlReader,System.Object,System.ComponentModel.PropertyDescriptor,System.Collections.IList,System.String,System.Boolean,System.Boolean)">
            <summary>
            if Reader is positioned at an element that is a collection, reads the collection items.
            </summary>
            <param name="reader"></param>
            <param name="uniquePropertyName">property used to match objects in collection</param>
            <param name="toRead"></param>
            <param name="disposeObjects"></param>
            <param name="parent"></param>
            <param name="parentProperty"></param>
            <param name="preserveNotSerializedExistingElements">States whether the list specified by toRead should not be cleared before reading</param>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.MatchObjectElement(System.Xml.XmlReader,System.Object,System.ComponentModel.PropertyDescriptor,System.Collections.IList,System.String,System.Collections.IList,System.Int32@)">
            <summary>
            Matches the instance of the element by an attribute value and then deserializes its properties.
            If the instance is not found in existingInstancesToMatch,
            new instance of type instanceType will be created and added to existingInstancesToMatch list.
            </summary>
            <param name="reader"></param>
            <param name="parent"></param>
            <param name="parentProperty"></param>
            <param name="toRead"></param>
            <param name="propertyToMatch"></param>       
            <param name="existingInstancesToMatch">the list with existing instances</param>        
            <param name="foundAtIndex">index of the element if found in existingInstanceToMatch</param>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ReadObjectElement(System.Xml.XmlReader,System.Object)">
            <summary>
            Reads properties of an object and subobject the reader is currently 
            positioned on.
            </summary>
            <param name="reader">Xml reader instance, positioned on the element to read.</param>
            <param name="toRead">object instance to be processed</param>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ReadObjectElement(System.Xml.XmlReader,System.Object,System.Object)">
            <summary>
            Reads properties of an object and subobject the reader is currently 
            positioned on.
            </summary>
            <param name="reader">Xml reader instance, positioned on the element to read.</param>
            <param name="parentObject">parent object instance, null if there is no parent object information</param>
            <param name="toRead">object instance to be processed</param>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ProcessReaderAttribute(System.Xml.XmlReader,System.Object,System.Object,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Reads a property of an object and subobject the reader is currently positioned on.
            </summary>
            <param name="reader">Xml reader instance, positioned on the element to read.</param>
            <param name="parentObject">The parent object instance, null if there is no parent object information</param>
            <param name="toRead">The object instance to be processed</param>
            <param name="property">The property that is being processed. Extracted from reader.Name</param>
            <returns>A value indicating whether the attribute has been processed. If [true] the parent class will not process current property/attribute. </returns>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ReadObjectElementOverride(System.Xml.XmlReader,System.Object)">
            <summary>
            Override to provide alternative deserialization of objects.
            </summary>
            <param name="reader"></param>
            <param name="toRead"></param>
            <returns>value indicating whether the object should be processed any further by serializer</returns>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ReadElementInObject(System.Xml.XmlReader,System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Deserializes a specified property of an object
            </summary>
            <param name="reader">Xml reader, positioned on the element corresponding to the property to deserialize</param>
            <param name="property">Property descriptor of the property to deserialize</param>
            <param name="toRead">Object that owns the property to deserialize</param>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ProcessListOverride(System.Xml.XmlReader,System.Object,System.ComponentModel.PropertyDescriptor,System.Collections.IList)">
            <summary>
            Override to provide custom processing of collection being deserialized
            </summary>
            <param name="reader"></param>
            <param name="listOwner"></param>
            <param name="ownerProperty"></param>
            <param name="list"></param>
            <returns>True if the list does not require further processing by the deserializer, False to use the default deserialization</returns>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.WriteObjectElement(System.Xml.XmlWriter,System.Object)">
            <summary>
            Serializes the given object using the specified XmlWriter.
            </summary>
            <param name="writer"></param>
            <param name="toWrite"></param>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ShouldSerializeValue(System.Object,System.ComponentModel.PropertyDescriptor,Telerik.WinControls.XmlSerialization.PropertySerializationMetadata)">
            <summary>
            Provides logic to determine whether property value should be serialized.
            </summary>
            <remarks>
            ShouldSerialize value resolution is as follows: 
            <list>
            <item>1. ComponentSerializationInfo.SerializeDefaultValues</item>
            <item>2. overwriteMetadata contains attribute DesignerSerializationVisibilityAttribute.Content</item>
            <item>3. property.ShouldSerialize</item>
            </list>
            </remarks>
            <param name="component"></param>
            <param name="property">property to serialize</param>
            <param name="overwriteMetadata">collection of extra serialization attributes for the property, corresponding to ComponentSerializationInfo</param>
            <returns>value indicating whether property value should be serialized</returns>
        </member>
        <member name="T:Telerik.WinControls.XmlSerialization.SerializationConverter">
            <summary>
            Represents a base class for the XML serialization converters. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.SerializationConverter.ConvertToString(System.Object,System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            
            </summary>
            <param name="propertyOwner"></param>
            <param name="property"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.XmlSerialization.SerializationConverterAttribute">
            <summary>
            Attribute for telerik theme serialization.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.BlockTransformBase">
            <summary>
            Base class for all block transformations.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.BlockTransformBase.CanReuseTransform">
            <summary>Gets a value indicating whether the current transform can be reused.</summary>
            <returns>true if the current transform can be reused; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.WinControls.Zip.BlockTransformBase.CanTransformMultipleBlocks">
            <summary>Gets a value indicating whether multiple blocks can be transformed.</summary>
            <returns>true if multiple blocks can be transformed; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.WinControls.Zip.BlockTransformBase.Header">
            <summary>Gets transformation header (if required).</summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.BlockTransformBase.InputBlockSize">
            <summary>Gets the input block size.</summary>
            <returns>The size of the input data blocks in bytes.</returns>
        </member>
        <member name="P:Telerik.WinControls.Zip.BlockTransformBase.OutputBlockSize">
            <summary>Gets the output block size.</summary>
            <returns>The size of the output data blocks in bytes.</returns>
        </member>
        <member name="P:Telerik.WinControls.Zip.BlockTransformBase.FixedInputBlockSize">
            <summary>
            Gets or sets value which indicates whether the transformation uses
            input buffer of the fixed size.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.BlockTransformBase.Dispose">
            <summary>
            Releases the resources used by the current instance of the ZipArchive class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.BlockTransformBase.CreateHeader">
            <summary>
            Creates transformation header to be written into the output stream.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.BlockTransformBase.InitHeaderReading">
            <summary>
            Initialize reading of the transformation header.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.BlockTransformBase.ProcessHeader">
            <summary>
            Process transformation header has been read.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.BlockTransformBase.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Transforms the specified region of the input byte array and copies the resulting transform to the specified region of the output byte array.</summary>
            <returns>The number of bytes written.</returns>
            <param name="inputBuffer">The input for which to compute the transform. </param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data. </param>
            <param name="inputCount">The number of bytes in the input byte array to use as data. </param>
            <param name="outputBuffer">The output to which to write the transform. </param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data. </param>
        </member>
        <member name="M:Telerik.WinControls.Zip.BlockTransformBase.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>Transforms the specified region of the specified byte array.</summary>
            <returns>The computed transform.</returns>
            <param name="inputBuffer">The input for which to compute the transform. </param>
            <param name="inputOffset">The offset into the byte array from which to begin using data. </param>
            <param name="inputCount">The number of bytes in the byte array to use as data. </param>
        </member>
        <member name="M:Telerik.WinControls.Zip.BlockTransformBase.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the transform and optionally releases the managed resources. 
            </summary>
            <param name="disposing">Value which indicates whether both managed and unmanaged resources (true) on only unmanaged resources (false) should be released.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.BlockTransformBase.ValidateInputBufferParameters(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Validates parameters of the input buffer.
            </summary>
            <param name="inputBuffer">The input for which to compute the transform. </param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data. </param>
            <param name="inputCount">The number of bytes in the input byte array to use as data. </param>
            <param name="validateBlockSize">Indicates whether buffer block size should be validated. Should be true for the TransformBlock and false for the TransformFinalBlock.</param>
            <param name="allowZeroCount">Indicates whether count can be zero.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.BlockTransformBase.ValidateParameters(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Validates parameters of the transform operation.
            </summary>
            <param name="inputBuffer">The input for which to compute the transform. </param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data. </param>
            <param name="inputCount">The number of bytes in the input byte array to use as data. </param>
            <param name="outputBuffer">The output to which to write the transform. </param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data. </param>
            <param name="allowZeroCount">Indicates whether input count can be zero.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.Adler32">
            <summary>
            Implements Adler-32 checksum algorithm.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.Adler32.Base">
            <summary>
            Base for modulo arithmetic (largest prime smaller than 65536).
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.Adler32.MaxIterations">
            <summary>
            Number of iterations we can safely do before applying the modulo.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.Adler32.UpdateChecksum(System.UInt32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Calculate checksum for the specified region of the input byte array.
            </summary>
            <param name="checksum">Checksum to update.</param>
            <param name="buffer">The input for which to compute the checksum.</param>
            <param name="offset">The offset into the input byte array from which to begin using data.</param>
            <param name="length">The number of bytes in the input byte array to use as data.</param>
            <returns>Updated checksum.</returns>
        </member>
        <member name="T:Telerik.WinControls.Zip.Crc32">
            <summary>
            Implements CRC-32 checksum algorithm.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.Crc32.UpdateChecksum(System.UInt32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Calculate checksum for the specified region of the input byte array.
            </summary>
            <param name="checksum">Checksum to update.</param>
            <param name="buffer">The input for which to compute the checksum.</param>
            <param name="offset">The offset into the input byte array from which to begin using data.</param>
            <param name="length">The number of bytes in the input byte array to use as data.</param>
            <returns>Updated checksum.</returns>
        </member>
        <member name="T:Telerik.WinControls.Zip.IChecksumAlgorithm">
            <summary>
            Interface which must be implemented by all implementations of the checksum algorithm.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.IChecksumAlgorithm.UpdateChecksum(System.UInt32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Calculate checksum for the specified region of the input byte array.
            </summary>
            <param name="checksum">Checksum to update.</param>
            <param name="buffer">The input for which to compute the checksum.</param>
            <param name="offset">The offset into the input byte array from which to begin using data.</param>
            <param name="length">The number of bytes in the input byte array to use as data.</param>
            <returns>Updated checksum.</returns>
        </member>
        <member name="T:Telerik.WinControls.Zip.CompressionMethod">
            <summary>
            Specifies values that indicate compression method.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressionMethod.Stored">
            <summary>
            The file is stored (no compression).
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressionMethod.Deflate">
            <summary>
            The file is Deflated.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressionMethod.Lzma">
            <summary>
            The file is compressed using LZMA algorithm.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.CompressedStream">
            <summary>
            Represents stream which allows read/write compressed information from/to given input stream.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.CompressedStream.#ctor(System.IO.Stream,Telerik.WinControls.Zip.StreamOperationMode,Telerik.WinControls.Zip.CompressionSettings)">
            <summary>
            Initializes a new instance of the CompressedStream class.
            </summary>
            <param name="baseStream">The base input/output stream.</param>
            <param name="mode">Stream operational mode.</param>
            <param name="settings">Compression settings.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Specified mode is not allowed for the given stream.</exception>
        </member>
        <member name="M:Telerik.WinControls.Zip.CompressedStream.#ctor(System.IO.Stream,Telerik.WinControls.Zip.StreamOperationMode,Telerik.WinControls.Zip.CompressionSettings,System.Boolean,Telerik.WinControls.Zip.EncryptionSettings)">
            <summary>
            Initializes a new instance of the CompressedStream class.
            </summary>
            <param name="baseStream">The base input/output stream.</param>
            <param name="mode">Stream operational mode.</param>
            <param name="settings">Compression settings.</param>
            <param name="useCrc32">Indicates whether the CRC32 (true) or Adler32 (false) checksum algorithm will be used.</param>
            <param name="encryptionSettings">Encryption settings.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Specified mode is not allowed for the given stream.</exception>
        </member>
        <member name="M:Telerik.WinControls.Zip.CompressedStream.#ctor(System.IO.Stream,Telerik.WinControls.Zip.StreamOperationMode,Telerik.WinControls.Zip.ICompressionAlgorithm,Telerik.WinControls.Zip.IChecksumAlgorithm)">
            <summary>
            Initializes a new instance of the CompressedStream class.
            </summary>
            <param name="baseStream">The base input/output stream.</param>
            <param name="mode">Stream operational mode.</param>
            <param name="compressionAlgorithm">Compression algorithm.</param>
            <param name="checksumAlgorithm">Checksum algorithm.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Specified mode is not allowed for the given stream.</exception>
        </member>
        <member name="E:Telerik.WinControls.Zip.CompressedStream.ChecksumReady">
            <summary>
            Event occurs when calculation of the checksum for this stream is completed. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.CompressedStream.Checksum">
            <summary>
            Gets checksum calculated for this stream starting from 
            the first read/write operation and up to the Flush call.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.CompressedStream.CompressedSize">
            <summary>
            Gets the compressed size of the stream.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.CompressedStream.ChecksumAlgorithm">
            <summary>
            Gets or sets the checksum algorithm will be used during compression-decompression.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.CompressedStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the 
            values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream. </param>
            <returns>The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many 
            bytes are not currently available, or zero (0) if the end of the stream has been reached.</returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:Telerik.WinControls.Zip.StreamOperationMode" /> associated with 
            current <see cref="T:Telerik.WinControls.Zip.OperationStream" /> object does not match the underlying stream.  
            For example, this exception is thrown when using <see cref="F:Telerik.WinControls.Zip.StreamOperationMode.Read" /> with an underlying stream that is write only.  </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> parameter is less than zero.-or- The <paramref name="count" /> parameter is less than zero. </exception>
            <exception cref="T:System.ArgumentException">The sum of the <paramref name="count" /> and <paramref name="offset" /> parameters is larger than the length of the buffer. </exception>
        </member>
        <member name="M:Telerik.WinControls.Zip.CompressedStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes. </param>
        </member>
        <member name="M:Telerik.WinControls.Zip.CompressedStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream. </param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream. </param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.CompressedStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Stream and optionally releases the managed resources. 
            </summary>
            <param name="disposing">Value which indicates whether both managed and unmanaged resources (true) on only unmanaged resources (false) should be released.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.CompressedStream.Initialize(System.IO.Stream,Telerik.WinControls.Zip.ICompressionAlgorithm,Telerik.WinControls.Zip.IChecksumAlgorithm)">
            <summary>
            Initialize compressed stream.
            </summary>
            <param name="baseStream">The base input/output stream.</param>
            <param name="compressionAlgorithm">Compression algorithm.</param>
            <param name="checksumAlgorithm">Checksum algorithm.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.CompressionSettings">
            <summary>
            Base class for the compression settings.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Zip.CompressionSettings.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.CompressionSettings.Method">
            <summary>
            Gets or sets compression method.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.CompressionSettings.CopyFrom(Telerik.WinControls.Zip.CompressionSettings)">
            <summary>
            Copy settings from the given base settings.
            </summary>
            <param name="baseSettings">Base settings to copy from.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.CompressionSettings.PrepareForZip(Telerik.WinControls.Zip.CentralDirectoryHeader)">
            <summary>
            Prepare settings for usage in zip archive entries.
            </summary>
            <param name="header">Central directory header.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.CompressionSettings.OnPropertyChanged(System.String)">
            <summary>
            Called when property value is changed.
            </summary>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.CompressionTransformBase">
            <summary>
            Represents base class for all compression and decompression functionality.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.CompressionTransformBase.#ctor">
            <summary>
            Initializes a new instance of the CompressionTransformBase class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.CompressionTransformBase.CanReuseTransform">
            <summary>Gets a value indicating whether the current transform can be reused.</summary>
            <returns>true if the current transform can be reused; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.WinControls.Zip.CompressionTransformBase.CanTransformMultipleBlocks">
            <summary>Gets a value indicating whether multiple blocks can be transformed.</summary>
            <returns>true if multiple blocks can be transformed; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.WinControls.Zip.CompressionTransformBase.InputBlockSize">
            <summary>Gets the input block size.</summary>
            <returns>The size of the input data blocks in bytes.</returns>
        </member>
        <member name="P:Telerik.WinControls.Zip.CompressionTransformBase.OutputBlockSize">
            <summary>Gets the output block size.</summary>
            <returns>The size of the output data blocks in bytes.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.CompressionTransformBase.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Transforms the specified region of the input byte array and copies
            the resulting transform to the specified region of the output byte array.
            </summary>
            <returns>The number of bytes written.</returns>
            <param name="inputBuffer">The input for which to compute the transform. </param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data. </param>
            <param name="inputCount">The number of bytes in the input byte array to use as data. </param>
            <param name="outputBuffer">The output to which to write the transform. </param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data. </param>
        </member>
        <member name="M:Telerik.WinControls.Zip.CompressionTransformBase.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>Transforms the specified region of the specified byte array.</summary>
            <returns>The computed transform.</returns>
            <param name="inputBuffer">The input for which to compute the transform. </param>
            <param name="inputOffset">The offset into the byte array from which to begin using data. </param>
            <param name="inputCount">The number of bytes in the byte array to use as data. </param>
        </member>
        <member name="M:Telerik.WinControls.Zip.CompressionTransformBase.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the transform and optionally releases the managed resources. 
            </summary>
            <param name="disposing">Value which indicates whether both managed and unmanaged resources (true) on only unmanaged resources (false) should be released.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.CompressionTransformBase.ProcessTransform(System.Boolean)">
            <summary>
            Transforms current input buffer.
            </summary>
            <param name="finalBlock">The final block flag.</param>
            <returns>True when output still available.</returns>
        </member>
        <member name="T:Telerik.WinControls.Zip.CompressedStreamHeader">
            <summary>
            Specifies values for header type of the compressed stream.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressedStreamHeader.None">
            <summary>
            Compressed stream does not contain a header.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressedStreamHeader.ZLib">
            <summary>
            Compressed stream is formatted in accordance with RFC 1950
            (ZLIB Compressed Data Format Specification version 3.3).
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.CompressionLevel">
            <summary>
            The compression level to be used for compression of data.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressionLevel.NoCompression">
            <summary>
            The data will be simply stored,
            no compression should be performed.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressionLevel.Level0">
            <summary>
            Same as NoCompression.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressionLevel.Fastest">
            <summary>
            The fastest but least effective compression.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressionLevel.Level1">
            <summary>
            A synonym for Fastest.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressionLevel.Level2">
            <summary>
            A little slower, but better, than level 1.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressionLevel.Level3">
            <summary>
            A little slower, but better, than level 2.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressionLevel.Level4">
            <summary>
            A little slower, but better, than level 3.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressionLevel.Level5">
            <summary>
            A little slower than level 4, but with better compression.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressionLevel.Optimal">
            <summary>
            The default compression level with
            a good balance of speed and compression efficiency.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressionLevel.Level6">
            <summary>
            A synonym for Optimal.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressionLevel.Level7">
            <summary>
            Pretty good compression.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressionLevel.Level8">
            <summary>
             Better compression than Level7.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressionLevel.Best">
            <summary>
            The best compression, where best means
            greatest reduction in size of the input data.
            This is also the slowest compression.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressionLevel.Level9">
            <summary>
            A synonym for Best compression level.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.DeflateAlgorithm">
            <summary>
            Class which implements Deflate compression algorithm.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateAlgorithm.CreateCompressor">
            <summary>
            Creates a compressor object. 
            </summary>
            <returns>A compressor object.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateAlgorithm.CreateDecompressor">
            <summary>
            Creates a decompressor object.
            </summary>
            <returns>A decompressor object.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateAlgorithm.Initialize(Telerik.WinControls.Zip.CompressionSettings)">
            <summary>
            Initialize compression algorithm using given compression settings.
            </summary>
            <param name="settings">Compression settings.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.DeflateBlockState">
            <summary>
            Represents a state of current block.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.DeflateBlockState.NeedMore">
            <summary>
            Block is not completed, need more input or more output.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.DeflateBlockState.BlockDone">
            <summary>
            Block flush performed.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.DeflateBlockState.FinishStarted">
            <summary>
            Finish started, need only more output at next deflate.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.DeflateBlockState.FinishDone">
            <summary>
            Finish done, accept no more input or output.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.DeflateCompressor">
            <summary>
            Compressor which implements Deflate compression.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.DeflateCompressor.WindowBitsDefault">
            <summary>
            The default number of window bits for the Deflate algorithm.
            15 is the maximum number of window bits for the Deflate algorithm (32K window).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.#ctor(Telerik.WinControls.Zip.DeflateSettings)">
            <summary>
            Initializes a new instance of the DeflateCompressor class.
            </summary>
            <param name="settings">Deflate settings.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.CreateHeader">
            <summary>
            Creates RFC 1950 (ZLIB Compressed Data Format Specification version 3.3) header
            to be written into the output stream.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.DownHeap(System.Int16[],System.Int32)">
            <summary>
            Restore the heap property by moving down the tree starting at specified node,
            exchanging a node with the smallest of its two sons if necessary, stopping
            when the heap property is re-established (each father smaller than its two sons).
            </summary>
            <param name="tree">The tree.</param>
            <param name="nodeIndex">Index of node.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.ProcessTransform(System.Boolean)">
            <summary>
            Transforms current input buffer.
            </summary>
            <param name="finalBlock">The final block flag.</param>
            <returns>True when still output available.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.ScanTree(System.Int16[],System.Int32)">
            <summary>
            Scan a literal or distance tree to determine the frequencies of the codes
            in the bit length tree.
            </summary>
            <param name="tree">The tree.</param>
            <param name="maxCode">Max code.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.BuildBitLengthTree">
            <summary>
            Construct the Huffman tree for the bit lengths.
            </summary>
            <returns>The index of the last bit length code to send.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.SendAllTrees(System.Int32,System.Int32,System.Int32)">
            <summary>
            Send the header for a block using dynamic Huffman trees: the counts,
            the lengths of the bit length codes, the literal tree and the distance tree.
            </summary>
            <param name="literalCodes">Length of literal codes.</param>
            <param name="distanceCodes">Length of distance codes.</param>
            <param name="bitLengthCodes">Length of bit length codes.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.SendTree(System.Int16[],System.Int32)">
            <summary>
            Send a literal or distance tree in compressed form,
            using the codes in bit length tree.
            </summary>
            <param name="tree">The tree.</param>
            <param name="maxCode">Max code.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.PutBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Output a block of bytes on the stream.
            </summary>
            <param name="buffer">Buffer.</param>
            <param name="start">Start index.</param>
            <param name="length">Length.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.TreeTally(System.Int32,System.Int32)">
            <summary>
            Save the match info and tally the frequency counts.
            </summary>
            <param name="distance">Distance.</param>
            <param name="lengthOrChar">Length or unmatched char.</param>
            <returns>Return true if the current block must be flushed.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.SendCompressedBlock(System.Int16[],System.Int16[])">
            <summary>
            Send the block data compressed using the given Huffman trees.
            </summary>
            <param name="literalTree">Literal tree.</param>
            <param name="distanceTree">Distance tree.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.AlginOnByteBoundary">
            <summary>
            Flush the bit buffer and align the output on a byte boundary.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.CopyBlock(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Copy a stored block, storing first the length
            and its one's complement if requested.
            </summary>
            <param name="buffer">Buffer.</param>
            <param name="length">Length.</param>
            <param name="header">Should send the header.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.SendStoredBlock(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Send a stored block.
            </summary>
            <param name="offset">Offset in window.</param>
            <param name="length">Length.</param>
            <param name="lastBlock">The flag of last block.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.TreeFlushBlock(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Determine the best encoding for the current block: dynamic trees, static
            trees or store, and output the encoded block.
            </summary>
            <param name="offset">Offset in window.</param>
            <param name="length">Length.</param>
            <param name="lastBlock">The flag of last block.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.FillWindow">
            <summary>
            Fill the window if necessary.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.DeflateFast(System.Boolean)">
            <summary>
            Compress as much as possible from the input stream, return the current
            block state.
            This function does not perform lazy evaluation of matches and inserts
            new strings in the dictionary only for unmatched strings or for short
            matches. It is used only for the fast compression options.
            </summary>
            <param name="flush">Flush flag.</param>
            <returns>Returns the current block state.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.DeflateNone(System.Boolean)">
            <summary>
            Copy without compression as much as possible from the input buffer.
            </summary>
            <param name="flush">Flush flag.</param>
            <returns>Returns the current block state.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.DeflateSlow(System.Boolean)">
            <summary>
            Same as above, but achieves better compression. We use a lazy
            evaluation for matches: a match is finally adopted only if there is
            no better match at the next window position.
            </summary>
            <param name="flush">Flush flag.</param>
            <returns>Returns the current block state.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.InitializeTreeData">
            <summary>
            Initialize the tree data structures.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.SetConfiguration(System.Int32)">
            <summary>
            Sets configuration parameters by the compression level.
            </summary>
            <param name="level">Compression level.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.FlushPending">
            <summary>
            Flush as much pending output as possible.
            All deflate output goes through this function.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateCompressor.ReadBuffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read a new buffer from the current input stream, update
            total number of bytes read.  All deflate input goes through
            this function.
            </summary>
            <param name="buffer">Buffer.</param>
            <param name="start">Start position in buffer.</param>
            <param name="size">Size.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.Zip.DeflateConfiguration">
            <summary>
            Represents configuration of deflate algorithm.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.DeflateConfiguration.GoodLength">
            <summary>
            Use a faster search when the previous match is longer
            than this reduce lazy search above this match length.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.DeflateConfiguration.MaxLazy">
            <summary>
            Attempt to find a better match only when the current match is
            strictly smaller than this value. This mechanism is used only for
            compression levels >= 4.  For levels 1,2,3: MaxLazy is actually
            MaxInsertLength (See DeflateFast).
            Do not perform lazy search above this match length.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.DeflateConfiguration.NiceLength">
            <summary>
            Quit search above this match length.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.DeflateConfiguration.MaxChainLength">
            <summary>
            To speed up deflation, hash chains are never searched beyond this length.
            A higher limit improves compression ratio but degrades the speed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateConfiguration.Lookup(System.Int32)">
            <summary>
            Returns instance of Config class by the compression level.
            </summary>
            <param name="compressionLevel">Compression level.</param>
            <returns>Instance of Config class.</returns>
        </member>
        <member name="T:Telerik.WinControls.Zip.DeflateConstants">
            <summary>
            Represents constants for deflate compression.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.DeflateConstants.NoCompression">
            <summary>
            The file is stored (no compression).
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.DeflateConstants.HeaderDeflated">
            <summary>
            Z-lib header: the deflate compression method.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.DeflateConstants.MaxBitLengthBits">
            <summary>
            Bit length codes must not exceed MaxBitLengthBits bits.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.DeflateConstants.Repeat3To6">
            <summary>
            Repeat previous bit length 3-6 times (2 bits of repeat count).
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.DeflateConstants.RepeatZero3To10">
            <summary>
            Repeat a zero length 3-10 times (3 bits of repeat count).
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.DeflateConstants.RepeatZero11To138">
            <summary>
            Repeat a zero length 11-138 times (7 bits of repeat count).
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.DeflateDecompressor">
            <summary>
            Decompressor which implements Deflate compression.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateDecompressor.#ctor(Telerik.WinControls.Zip.DeflateSettings)">
            <summary>
            Initializes a new instance of the DeflateDecompressor class.
            </summary>
            <param name="settings">Deflate settings.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.DeflateDecompressor.DecompressorState">
            <summary>
            Represents a state of decompressor process.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.DeflateDecompressor.BlockType">
            <summary>
            Represents a type of block in deflated data.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.DeflateDecompressor.OutputBlockSize">
            <summary>Gets the output block size.</summary>
            <returns>The size of the output data blocks in bytes.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateDecompressor.InitHeaderReading">
            <summary>
            Initialize reading of the transformation header.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateDecompressor.ProcessHeader">
            <summary>
            Process transformation header has been read.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateDecompressor.ProcessTransform(System.Boolean)">
            <summary>
            Transforms current input buffer.
            </summary>
            <param name="finalBlock">The final block flag.</param>
            <returns>True when still output available.</returns>
        </member>
        <member name="T:Telerik.WinControls.Zip.DeflateSettings">
            <summary>
            Compression settings of the Deflate method.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateSettings.#ctor">
            <summary>
            Initializes a new instance of the DeflateSettings class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.DeflateSettings.CompressionLevel">
            <summary>
            The compression level of deflate algorithm to be used for deflating by a CompressedStream.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.DeflateSettings.HeaderType">
            <summary>
            Gets or sets compression stream header type.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateSettings.CopyFrom(Telerik.WinControls.Zip.CompressionSettings)">
            <summary>
            Copy settings from the given base settings.
            </summary>
            <param name="baseSettings">Base settings to copy from.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateSettings.PrepareForZip(Telerik.WinControls.Zip.CentralDirectoryHeader)">
            <summary>
            Prepare settings for usage in zip archive entries.
            </summary>
            <param name="header">Central directory header.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.DeflateTransformBase">
            <summary>
            Represents base class for Deflate compression and decompression functionality.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DeflateTransformBase.#ctor(Telerik.WinControls.Zip.DeflateSettings)">
            <summary>
            Initializes a new instance of the DeflateTransformBase class.
            </summary>
            <param name="settings">Deflate settings.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.InflateTree">
            <summary>
            Inflates data using a lookup table combined with a HuffmanTree.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.InflateTree.#cctor">
            <summary>
            Initializes static members of the InflateTree class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.InflateTree.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the InflateTree class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.InflateTree.GetNextSymbol(Telerik.WinControls.Zip.InputBitsBuffer)">
            <summary>
            Tries to get enough bits from input and try to decode them.
            </summary>
            <param name="input">Input buffer.</param>
            <returns>Next symbol or -1 when there is no enough bits in input.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.InflateTree.CalculateHuffmanCode">
            <summary>
            Calculate the huffman codes according to RFC 1951.
            </summary>
            <returns>Huffman codes.</returns>
        </member>
        <member name="T:Telerik.WinControls.Zip.InputBitsBuffer">
            <summary>
            Represents input buffer for inflating data using Huffman coding.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.InputBitsBuffer.#ctor">
            <summary>
            Initializes a new instance of the InputBitsBuffer class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.InputBitsBuffer.AvailableBits">
            <summary>
            Available bits in bit buffer.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.InputBitsBuffer.AvailableBytes">
            <summary>
            Available bytes.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.InputBitsBuffer.InputRequired">
            <summary>
            Is input required.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.InputBitsBuffer.CheckAvailable(System.Int32)">
            <summary>
            Checks available bits in the bit buffer.
            </summary>
            <param name="count">Count of bits.</param>
            <returns>True if available.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.InputBitsBuffer.GetBits(System.Int32)">
            <summary>
            Gets available bits from buffer.
            </summary>
            <param name="count">Count of required bits.</param>
            <returns>Bits data.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.InputBitsBuffer.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read bytes to output buffer.
            </summary>
            <param name="output">Output buffer.</param>
            <param name="offset">Offset.</param>
            <param name="length">Length.</param>
            <returns>Count of bytes which are read.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.InputBitsBuffer.SetBuffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Set current working buffer.
            </summary>
            <param name="buffer">Bytes buffer.</param>
            <param name="offset">Offset.</param>
            <param name="length">Length.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.InputBitsBuffer.SkipBits(System.Int32)">
            <summary>
            Skips bits in bit buffer.
            </summary>
            <param name="count">Count of bits to skip.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.InputBitsBuffer.SkipToByteBoundary">
            <summary>
            Skips to the next byte boundary.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.InputBitsBuffer.Get16Bits">
            <summary>
            Gets 16 or more bits into bit buffer.
            </summary>
            <returns>Bit buffer.</returns>
        </member>
        <member name="T:Telerik.WinControls.Zip.OutputWindow">
            <summary>
            Represents output window for inflating data using Huffman coding.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.OutputWindow.#ctor">
            <summary>
            Initializes a new instance of the OutputWindow class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.OutputWindow.AvailableBytes">
            <summary>
            Gets available bytes count.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.OutputWindow.FreeBytes">
            <summary>
            Gets free bytes count.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.OutputWindow.AddByte(System.Byte)">
            <summary>
            Adds a byte to output window.
            </summary>
            <param name="value">Byte.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.OutputWindow.Copy(System.Int32,System.Int32)">
            <summary>
            Copies bytes within output window.
            Moves backwards distance bytes and copy length bytes.
            </summary>
            <param name="length">Length.</param>
            <param name="distance">Distance.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.OutputWindow.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read bytes to output buffer.
            </summary>
            <param name="output">Output buffer.</param>
            <param name="offset">Offset.</param>
            <param name="length">Length.</param>
            <returns>Count of bytes which are read.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.OutputWindow.ReadInput(Telerik.WinControls.Zip.InputBitsBuffer,System.Int32)">
            <summary>
            Reads bytes from input.
            </summary>
            <param name="input">InputBitsBuffer.</param>
            <param name="length">Length.</param>
            <returns>Count of read bytes.</returns>
        </member>
        <member name="T:Telerik.WinControls.Zip.StaticTree">
            <summary>
            Represents Huffman static tree.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.StaticTree.#cctor">
            <summary>
            Initializes static members of the StaticTree class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.StaticTree.#ctor(System.Int16[],System.Int32[])">
            <summary>
            Initializes a new instance of the StaticTree class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.StaticTree.TreeCodes">
            <summary>
            Static tree.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.StaticTree.ExtraBits">
            <summary>
            Extra bits for each code.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.StaticTree.ExtraBase">
            <summary>
            Base index for extra bits.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.StaticTree.Elements">
            <summary>
            Max number of elements in the tree.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.StaticTree.MaxLength">
            <summary>
            Max bit length for the codes.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.Tree">
            <summary>
            Deflates data using Huffman coding.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.Tree.BitReverse(System.Int32,System.Int32)">
            <summary>
            Reverse the first specified bits of a code,
            using straightforward code (a faster method would use a table).
            </summary>
            <param name="code">Value.</param>
            <param name="length">The length of bits to reverse.</param>
            <returns>Result of reverse.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.Tree.GetDistanceCode(System.Int32)">
            <summary>
            Map from a distance to a distance code.
            </summary>
            <remarks> 
            No side effects. DistanceCode[256] and DistanceCode[257] are never used.
            </remarks>
        </member>
        <member name="M:Telerik.WinControls.Zip.Tree.BuildTree(Telerik.WinControls.Zip.DeflateCompressor)">
            <summary>
            Construct one Huffman tree and assigns the code bit strings and lengths.
            Update the total bit length for the current block.
            </summary>
            <param name="manager">Deflate compressor.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.Tree.GenerateCodes(System.Int16[],System.Int32,System.Int16[])">
            <summary>
            Generate the codes for a given tree and bit counts (which need not be optimal).
            </summary>
            <param name="tree">The tree.</param>
            <param name="maxCode">Max code.</param>
            <param name="bitLengthCount">Bit length count.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.Tree.GenerateBitLengths(Telerik.WinControls.Zip.DeflateCompressor)">
            <summary>
            Compute the optimal bit lengths for a tree and update the total bit length for the current block.
            </summary>
            <param name="manager">Deflate compressor.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.ICompressionAlgorithm">
            <summary>
            Interface which must be implemented by all implementations of the compression algorithm.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ICompressionAlgorithm.CreateCompressor">
            <summary>
            Creates a compressor object. 
            </summary>
            <returns>A compressor object.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.ICompressionAlgorithm.CreateDecompressor">
            <summary>
            Creates a decompressor object.
            </summary>
            <returns>A decompressor object.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.ICompressionAlgorithm.Initialize(Telerik.WinControls.Zip.CompressionSettings)">
            <summary>
            Initialize compression algorithm using given compression settings.
            </summary>
            <param name="settings">Compression settings.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.LzmaOptimizationData">
            <summary>
            The Optimization Data for LZMA match finder.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.LzmaRangeEncoder">
            <summary>
            Represents the LZMA range encoder.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.LzmaAlgorithm">
            <summary>
            Class which implements Deflate compression algorithm.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.LzmaAlgorithm.CreateCompressor">
            <summary>
            Creates a compressor object. 
            </summary>
            <returns>A compressor object.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.LzmaAlgorithm.CreateDecompressor">
            <summary>
            Creates a decompressor object.
            </summary>
            <returns>A decompressor object.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.LzmaAlgorithm.Initialize(Telerik.WinControls.Zip.CompressionSettings)">
            <summary>
            Initialize compression algorithm using given compression settings.
            </summary>
            <param name="settings">Compression settings.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.LzmaCompressor">
            <summary>
            Compressor which implements LZMA compression.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.LzmaCompressor.#ctor(Telerik.WinControls.Zip.LzmaSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.Zip.LzmaCompressor"/> class.
            </summary>
            <param name="settings">Settings.</param>
        </member>
        <member name="P:Telerik.WinControls.Zip.LzmaCompressor.OutputBlockSize">
            <summary>Gets the output block size.</summary>
            <returns>The size of the output data blocks in bytes.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.LzmaCompressor.CreateHeader">
            <summary>
            Creates transformation header to be written into the output stream.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.LzmaCompressor.ProcessTransform(System.Boolean)">
            <summary>
            Transforms current input buffer.
            </summary>
            <param name="finalBlock">The final block flag.</param>
            <returns>True when output still available.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.LzmaCompressor.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the transform and optionally releases the managed resources. 
            </summary>
            <param name="disposing">Value which indicates whether both managed and unmanaged resources
            (true) on only unmanaged resources (false) should be released.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.LzmaDecompressor">
            <summary>
            Decompressor which implements LZMA decompression algorithm.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.LzmaDecompressor.#ctor(Telerik.WinControls.Zip.LzmaSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.Zip.LzmaDecompressor"/> class.
            </summary>
            <param name="settings">Settings.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.LzmaDecompressor.LzmaDecompressorState">
            <summary>
            Represents a state of decompressor process.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.LzmaDecompressor.OutputBlockSize">
            <summary>Gets the output block size.</summary>
            <returns>The size of the output data blocks in bytes.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.LzmaDecompressor.InitHeaderReading">
            <summary>
            Initialize reading of the transformation header.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.LzmaDecompressor.ProcessHeader">
            <summary>
            Process transformation header has been read.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.LzmaMatchFinderType">
            <summary>
            Specifies values for a type of the match finder for LZMA compression.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.LzmaMatchFinderType.BT2">
            <summary>
            The match finder uses two bytes for the hash.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.LzmaMatchFinderType.BT4">
            <summary>
            The match finder uses four bytes for the hash.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.LzmaSettings">
            <summary>
            Compression settings of the Deflate method.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.LzmaSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.Zip.LzmaSettings"/> class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.LzmaSettings.DictionarySize">
            <summary>
            Gets or sets dictionary size [0 - 27].
            Default value is 23 (8MB).
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.LzmaSettings.PositionStateBits">
            <summary>
            Gets or sets number of position state bits for LZMA [0 - 4].
            Default value is 2.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.LzmaSettings.LiteralContextBits">
            <summary>
            Gets or sets number of literal context bits for LZMA [0 - 8].
            Default value is 3.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.LzmaSettings.LiteralPositionBits">
            <summary>
            Gets or sets number of literal position bits for LZMA [0 - 4].
            Default value is 3.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.LzmaSettings.FastBytes">
            <summary>
            Gets or sets number of fast bytes [5 - 273].
            Default value is 32.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.LzmaSettings.MatchFinderType">
            <summary>
            Gets or sets a type of the match finder.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.LzmaSettings.StreamLength">
            <summary>
            Gets or sets length of the stream for compressing.
            Used for single compressed streams only (not for ZIP archives).
            Allows to avoid using the end of stream marker for compressed stream.
            If it is set to -1, then the marker will be used.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.LzmaSettings.InternalStreamLength">
            <summary>
            Gets or sets length of the stream for decompressing.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.LzmaSettings.UseZipHeader">
            <summary>
            Gets or sets a value which indicates whether
            the compression stream should use zip header type.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.LzmaSettings.CopyFrom(Telerik.WinControls.Zip.CompressionSettings)">
            <summary>
            Copy settings from the given base settings.
            </summary>
            <param name="baseSettings">Base settings to copy from.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.LzmaSettings.PrepareForZip(Telerik.WinControls.Zip.CentralDirectoryHeader)">
            <summary>
            Prepare settings for usage in zip archive entries.
            </summary>
            <param name="header">Central directory header.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.LzmaState">
            <summary>
            Represents LZMA state for compressing and for decompressing.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.LzmaTransformBase">
            <summary>
            Represents base class for LZMA compression and decompression functionality.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.LzmaTransformBase.#ctor(Telerik.WinControls.Zip.LzmaSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.Zip.LzmaTransformBase"/> class.
            </summary>
            <param name="settings">Settings.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.StoreAlgorithm">
            <summary>
            Class which implements Store (no compression) algorithm.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.StoreAlgorithm.CreateCompressor">
            <summary>
            Creates a compressor object. 
            </summary>
            <returns>A compressor object.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.StoreAlgorithm.CreateDecompressor">
            <summary>
            Creates a decompressor object.
            </summary>
            <returns>A decompressor object.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.StoreAlgorithm.Initialize(Telerik.WinControls.Zip.CompressionSettings)">
            <summary>
            Initialize compression algorithm using given compression settings.
            </summary>
            <param name="settings">Compression settings.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.StoreCompressor">
            <summary>
            Compressor which implements Store compression.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.StoreDecompressor">
            <summary>
            Decompressor which implements Store compression.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.StoreSettings">
            <summary>
            Compression settings of the Store method.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.StoreSettings.#ctor">
            <summary>
            Initializes a new instance of the StoreSettings class.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.StoreTransformBase">
            <summary>
            Base class for the Store (no compression) transformation.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.StoreTransformBase.#ctor">
            <summary>
            Initializes a new instance of the StoreTransformBase class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.StoreTransformBase.CanReuseTransform">
            <summary>Gets a value indicating whether the current transform can be reused.</summary>
            <returns>true if the current transform can be reused; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.WinControls.Zip.StoreTransformBase.CanTransformMultipleBlocks">
            <summary>Gets a value indicating whether multiple blocks can be transformed.</summary>
            <returns>true if multiple blocks can be transformed; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.WinControls.Zip.StoreTransformBase.InputBlockSize">
            <summary>Gets the input block size.</summary>
            <returns>The size of the input data blocks in bytes.</returns>
        </member>
        <member name="P:Telerik.WinControls.Zip.StoreTransformBase.OutputBlockSize">
            <summary>Gets the output block size.</summary>
            <returns>The size of the output data blocks in bytes.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.StoreTransformBase.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Transforms the specified region of the input byte array and copies the resulting transform to the specified region of the output byte array.</summary>
            <returns>The number of bytes written.</returns>
            <param name="inputBuffer">The input for which to compute the transform. </param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data. </param>
            <param name="inputCount">The number of bytes in the input byte array to use as data. </param>
            <param name="outputBuffer">The output to which to write the transform. </param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data. </param>
        </member>
        <member name="M:Telerik.WinControls.Zip.StoreTransformBase.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>Transforms the specified region of the specified byte array.</summary>
            <returns>The computed transform.</returns>
            <param name="inputBuffer">The input for which to compute the transform. </param>
            <param name="inputOffset">The offset into the byte array from which to begin using data. </param>
            <param name="inputCount">The number of bytes in the byte array to use as data. </param>
        </member>
        <member name="M:Telerik.WinControls.Zip.StoreTransformBase.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the transform and optionally releases the managed resources. 
            </summary>
            <param name="disposing">Value which indicates whether both managed and unmanaged resources (true) on only unmanaged resources (false) should be released.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.DefaultPlatformManager">
            <summary>
            Platform independent manager.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.DefaultPlatformManager.AltDirectorySeparatorChar">
            <summary>
            Gets a platform-specific alternate character used to separate directory levels in a path string that reflects a hierarchical file system organization.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.DefaultPlatformManager.DefaultEncoding">
            <summary>
            Gets default encoding for this platform.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.DefaultPlatformManager.DirectorySeparatorChar">
            <summary>
            Gets a platform-specific character used to separate directory levels in a path string that reflects a hierarchical file system organization.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DefaultPlatformManager.CreateTemporaryStream">
            <summary>
            Creates temporary stream.
            </summary>
            <returns>Stream will be used for temporary operations.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.DefaultPlatformManager.DeleteTemporaryStream(System.IO.Stream)">
            <summary>
            Deletes temporary stream.
            </summary>
            <param name="stream">Stream to delete.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.DefaultPlatformManager.GetCryptoProvider(Telerik.WinControls.Zip.EncryptionSettings)">
            <summary>
            Gets crypto provider initialized using given encryption settings.
            </summary>
            <param name="settings">Encryption settings.</param>
            <returns>Crypto provider.</returns>
            <exception cref="T:System.NotSupportedException">Specified crypto algorithm is not supported.</exception>
        </member>
        <member name="M:Telerik.WinControls.Zip.DefaultPlatformManager.IsEncodingSupported(System.Text.Encoding)">
            <summary>
            Indicates whether specified encoding is supported for this platform.
            </summary>
            <param name="encoding">Encoding.</param>
            <returns>true if encoding is allowed in the ZIP file.</returns>
        </member>
        <member name="T:Telerik.WinControls.Zip.CryptoStream">
            <summary>
            Cryptographic stream. Allows encrypt or decrypt information from the given input stream.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.CryptoStream.#ctor(System.IO.Stream,Telerik.WinControls.Zip.StreamOperationMode,Telerik.WinControls.Zip.ICryptoProvider)">
            <summary>
            Initializes a new instance of the CryptoStream class.
            </summary>
            <param name="input">Input stream.</param>
            <param name="mode">Stream operational mode.</param>
            <param name="cryptoProvider">Crypto provider.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Specified mode is not allowed for the given stream.</exception>
        </member>
        <member name="M:Telerik.WinControls.Zip.CryptoStream.Finalize">
            <summary>
            Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.CryptoStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Stream and optionally releases the managed resources. 
            </summary>
            <param name="disposing">Value which indicates whether both managed and unmanaged resources (true) on only unmanaged resources (false) should be released.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.DefaultCryptoProvider">
            <summary>
            Crypto provider which implements traditional PKWARE encryption.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DefaultCryptoProvider.CreateDecryptor">
            <summary>
            Creates an decryptor object. 
            </summary>
            <returns>A decryptor object.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.DefaultCryptoProvider.CreateEncryptor">
            <summary>
            Creates an encryptor object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.DefaultCryptoProvider.Initialize(Telerik.WinControls.Zip.EncryptionSettings)">
            <summary>
            Initialize crypto provider using given encryption settings.
            </summary>
            <param name="settings">Encryption settings.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.DefaultCryptoTransformBase">
            <summary>
            Base class for the transformations which implements traditional PKWARE encryption/decryption.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DefaultCryptoTransformBase.#ctor">
            <summary>
            Initializes a new instance of the DefaultCryptoTransformBase class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.DefaultCryptoTransformBase.CanReuseTransform">
            <summary>Gets a value indicating whether the current transform can be reused.</summary>
            <returns>true if the current transform can be reused; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.WinControls.Zip.DefaultCryptoTransformBase.CanTransformMultipleBlocks">
            <summary>Gets a value indicating whether multiple blocks can be transformed.</summary>
            <returns>true if multiple blocks can be transformed; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.WinControls.Zip.DefaultCryptoTransformBase.InputBlockSize">
            <summary>Gets the input block size.</summary>
            <returns>The size of the input data blocks in bytes.</returns>
        </member>
        <member name="P:Telerik.WinControls.Zip.DefaultCryptoTransformBase.OutputBlockSize">
            <summary>Gets the output block size.</summary>
            <returns>The size of the output data blocks in bytes.</returns>
        </member>
        <member name="P:Telerik.WinControls.Zip.DefaultCryptoTransformBase.EncodingByte">
            <summary>
            Gets encoding byte.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DefaultCryptoTransformBase.CreateHeader">
            <summary>
            Creates transformation header to be written into the output stream.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DefaultCryptoTransformBase.InitHeaderReading">
            <summary>
            Initialize reading of the transformation header.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DefaultCryptoTransformBase.ProcessHeader">
            <summary>
            Process transformation header has been read.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DefaultCryptoTransformBase.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the transform and optionally releases the managed resources. 
            </summary>
            <param name="disposing">Value which indicates whether both managed and unmanaged resources (true) on only unmanaged resources (false) should be released.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.DefaultCryptoTransformBase.UpdateKeys(System.Byte)">
            <summary>
            Update encryption keys.
            </summary>
            <param name="byteValue">Byte.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.DefaultDecryptor">
            <summary>
            Crypto transformation which implements traditional PKWARE decryption.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DefaultDecryptor.#ctor">
            <summary>
            Initializes a new instance of the DefaultDecryptor class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DefaultDecryptor.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Transforms the specified region of the input byte array and copies the resulting transform to the specified region of the output byte array.</summary>
            <returns>The number of bytes written.</returns>
            <param name="inputBuffer">The input for which to compute the transform. </param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data. </param>
            <param name="inputCount">The number of bytes in the input byte array to use as data. </param>
            <param name="outputBuffer">The output to which to write the transform. </param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data. </param>
        </member>
        <member name="M:Telerik.WinControls.Zip.DefaultDecryptor.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>Transforms the specified region of the specified byte array.</summary>
            <returns>The computed transform.</returns>
            <param name="inputBuffer">The input for which to compute the transform. </param>
            <param name="inputOffset">The offset into the byte array from which to begin using data. </param>
            <param name="inputCount">The number of bytes in the byte array to use as data. </param>
        </member>
        <member name="T:Telerik.WinControls.Zip.DefaultEncryptionSettings">
            <summary>
            Encryption settings for the default cryptographic provider (traditional PKWARE encryption.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DefaultEncryptionSettings.#ctor">
            <summary>
            Initializes a new instance of the DefaultEncryptionSettings class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.DefaultEncryptionSettings.Password">
            <summary>
            Gets or sets password will be used for encryption/decryption.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.DefaultEncryptionSettings.FileTime">
            <summary>
            Gets or sets last modification file date and time.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.DefaultEncryptor">
            <summary>
            Crypto transformation which implements traditional PKWARE encryption.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DefaultEncryptor.#ctor">
            <summary>
            Initializes a new instance of the DefaultEncryptor class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DefaultEncryptor.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Transforms the specified region of the input byte array and copies the resulting transform to the specified region of the output byte array.</summary>
            <returns>The number of bytes written.</returns>
            <param name="inputBuffer">The input for which to compute the transform. </param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data. </param>
            <param name="inputCount">The number of bytes in the input byte array to use as data. </param>
            <param name="outputBuffer">The output to which to write the transform. </param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data. </param>
        </member>
        <member name="M:Telerik.WinControls.Zip.DefaultEncryptor.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>Transforms the specified region of the specified byte array.</summary>
            <returns>The computed transform.</returns>
            <param name="inputBuffer">The input for which to compute the transform. </param>
            <param name="inputOffset">The offset into the byte array from which to begin using data. </param>
            <param name="inputCount">The number of bytes in the byte array to use as data. </param>
        </member>
        <member name="T:Telerik.WinControls.Zip.EncryptionSettings">
            <summary>
            Base class for the encryption settings.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Zip.EncryptionSettings.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.EncryptionSettings.Algorithm">
            <summary>
            Gets name of the algorithm will be used for encryption/decryption.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.EncryptionSettings.OnPropertyChanged(System.String)">
            <summary>
            Called when property value is changed.
            </summary>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.ICryptoProvider">
            <summary>
            Interface which provides method to encrypt/decrypt data in the ZIP archive.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ICryptoProvider.CreateDecryptor">
            <summary>
            Creates an decryptor object. 
            </summary>
            <returns>A decryptor object.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.ICryptoProvider.CreateEncryptor">
            <summary>
            Creates an encryptor object.
            </summary>
            <returns>An encryptor object.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.ICryptoProvider.Initialize(Telerik.WinControls.Zip.EncryptionSettings)">
            <summary>
            Initialize crypto provider using given encryption settings.
            </summary>
            <param name="settings">Encryption settings.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.IBlockTransform">
            <summary>
            Defines the basic operations of the cryptographic or compression transformations.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.IBlockTransform.CanReuseTransform">
            <summary>Gets a value indicating whether the current transform can be reused.</summary>
            <returns>true if the current transform can be reused; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.WinControls.Zip.IBlockTransform.CanTransformMultipleBlocks">
            <summary>Gets a value indicating whether multiple blocks can be transformed.</summary>
            <returns>true if multiple blocks can be transformed; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.WinControls.Zip.IBlockTransform.Header">
            <summary>Gets transformation header (if required).</summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.IBlockTransform.InputBlockSize">
            <summary>Gets the input block size.</summary>
            <returns>The size of the input data blocks in bytes.</returns>
        </member>
        <member name="P:Telerik.WinControls.Zip.IBlockTransform.OutputBlockSize">
            <summary>Gets the output block size.</summary>
            <returns>The size of the output data blocks in bytes.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.IBlockTransform.CreateHeader">
            <summary>
            Creates transformation header to be written into the output stream.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.IBlockTransform.InitHeaderReading">
            <summary>
            Initialize reading of the transformation header.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.IBlockTransform.ProcessHeader">
            <summary>
            Process transformation header has been read.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.IBlockTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Transforms the specified region of the input byte array and copies the resulting transform to the specified region of the output byte array.</summary>
            <returns>The number of bytes written.</returns>
            <param name="inputBuffer">The input for which to compute the transform. </param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data. </param>
            <param name="inputCount">The number of bytes in the input byte array to use as data. </param>
            <param name="outputBuffer">The output to which to write the transform. </param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data. </param>
        </member>
        <member name="M:Telerik.WinControls.Zip.IBlockTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>Transforms the specified region of the specified byte array.</summary>
            <returns>The computed transform.</returns>
            <param name="inputBuffer">The input for which to compute the transform. </param>
            <param name="inputOffset">The offset into the byte array from which to begin using data. </param>
            <param name="inputCount">The number of bytes in the byte array to use as data. </param>
        </member>
        <member name="T:Telerik.WinControls.Zip.InvalidDataException">
            <summary>The exception that is thrown when a data stream is in an invalid format.</summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.InvalidDataException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Telerik.WinControls.Zip.InvalidDataException" /> class.</summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.InvalidDataException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Telerik.WinControls.Zip.InvalidDataException" /> class with a specified error message.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.InvalidDataException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:Telerik.WinControls.Zip.InvalidDataException" /> class with a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.IPlatformManager">
            <summary>
            Interface which provides platform-specific operations. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.IPlatformManager.AltDirectorySeparatorChar">
            <summary>
            Gets a platform-specific alternate character used to separate directory levels in a path string that reflects a hierarchical file system organization.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.IPlatformManager.DefaultEncoding">
            <summary>
            Gets default encoding for this platform.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.IPlatformManager.DirectorySeparatorChar">
            <summary>
            Gets a platform-specific character used to separate directory levels in a path string that reflects a hierarchical file system organization.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.IPlatformManager.CreateTemporaryStream">
            <summary>
            Creates temporary stream.
            </summary>
            <returns>Stream will be used for temporary operations.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.IPlatformManager.DeleteTemporaryStream(System.IO.Stream)">
            <summary>
            Deletes temporary stream.
            </summary>
            <param name="stream">Stream to delete.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.IPlatformManager.GetCryptoProvider(Telerik.WinControls.Zip.EncryptionSettings)">
            <summary>
            Gets crypto provider initialized using given encryption settings.
            </summary>
            <param name="settings">Encryption settings.</param>
            <returns>Crypto provider.</returns>
            <exception cref="T:System.NotSupportedException">Specified crypto algorithm is not supported.</exception>
        </member>
        <member name="M:Telerik.WinControls.Zip.IPlatformManager.IsEncodingSupported(System.Text.Encoding)">
            <summary>
            Indicates whether specified encoding is supported for this platform.
            </summary>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.Zip.ISpecData">
            <summary>
            Common interface for the data structures defined in the ZIP File Format Specification.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ISpecData.TryReadBlock(System.IO.BinaryReader)">
            <summary>
            Read data from the binary reader.
            </summary>
            <param name="reader">Binary reader to read data from.</param>
            <returns>true if success, otherwise false.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.ISpecData.WriteBlock(System.IO.BinaryWriter)">
            <summary>
            Write data to the binary writer.
            </summary>
            <param name="writer">Binary writer to write data to.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.CompressionType">
            <summary>
            Represents the compression types.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressionType.Default">
            <summary>
            This is the default compression type which uses the deflate algorithm.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CompressionType.Lzma">
            <summary>
            This compression type uses the LZMA algorithm.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.ZipCompression">
            <summary>
            Represents the compression methods.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipCompression.Default">
            <summary>
            This is the default compression method.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipCompression.Stored">
            <summary>
            This is the no-compression method.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipCompression.BestSpeed">
            <summary>
            This is the fastest compression method.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipCompression.Method2">
            <summary>
            This is a custom compression method.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipCompression.Method3">
            <summary>
            This is a custom compression method.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipCompression.Method4">
            <summary>
            This is a custom compression method.        
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipCompression.Method5">
            <summary>
            This is a custom compression method.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipCompression.Method6">
            <summary>
            This is a custom compression method.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipCompression.Method7">
            <summary>
            This is a custom compression method.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipCompression.Deflated">
            <summary>
            This is the the best compression method.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipCompression.Deflate64">
            <summary>
            This is the the best compression method.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.ZipInputStream">
            <summary>
            Represents a stream that can read from a compressed stream.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipInputStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the ZipInputStream class.
            </summary>
            <param name="baseStream">
            The stream that will be decompressed.
            </param>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipInputStream.BaseStream">
            <summary>
            The stream that is decompressed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipInputStream.UncompressedSize">
            <summary>
            Gets the uncompressed size of the stream.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipInputStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream
            by one byte, or returns -1 if at the end of the stream.</summary>
            <returns>The unsigned byte cast to an 32-bit integer, or -1 if at the end of the stream.
            </returns>
        </member>
        <member name="T:Telerik.WinControls.Zip.ZipOutputStream">
            <summary>
            Represents a stream that can write into a compressed stream.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipOutputStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the ZipOutputStream class.
            </summary>
            <param name="baseStream">
            The stream that will be compressed.
            </param>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipOutputStream.#ctor(System.IO.Stream,Telerik.WinControls.Zip.CompressionMethod)">
            <summary>
            Initializes a new instance of the ZipOutputStream class.
            </summary>
            <param name="baseStream">
            The stream that will be compressed.
            </param>
            /// <param name="method">
            The compression method.
            </param>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipOutputStream.#ctor(System.IO.Stream,Telerik.WinControls.Zip.ZipCompression)">
            <summary>
            Initializes a new instance of the ZipOutputStream class.
            </summary>
            <param name="baseStream">
            The stream that will be compressed.
            </param>
            /// <param name="compressionLevel">
            The compression level.
            </param>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipOutputStream.BaseStream">
            <summary>
            The stream that is decompressed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipOutputStream.UncompressedSize">
            <summary>
            Gets the uncompressed size of the stream.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipOutputStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the
            position within the stream by one byte.
            </summary>
            <param name="value">The byte to write to the stream. </param>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipOutputStream.CreateDeflateSettings(Telerik.WinControls.Zip.ZipCompression)">
            <summary>
            Create DeflateSettings for specified compression level.
            </summary>
            <param name="compressionLevel">Compression level.</param>
            <returns>DeflateSettings.</returns>
        </member>
        <member name="T:Telerik.WinControls.Zip.ZipPackage">
            <summary>
            Represents the ZipPackage class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.#ctor(System.IO.Stream,Telerik.WinControls.Zip.ZipArchiveMode)">
            <summary>
            Initializes a new instance of the ZipPackage class from the specified stream.
            </summary>
            <param name="stream">The stream that contains the archive to be read.</param>
            <param name="mode">Mode.</param>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipPackage.FileName">
            <summary>
            Gets the file name for the ZipPackage.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipPackage.ZipPackageEntries">
            <summary>
            Gets the collection of entries that are currently in the zip archive.
            </summary>
            <exception cref="T:System.NotSupportedException">The zip archive does not support reading.</exception>
            <exception cref="T:System.ObjectDisposedException">The zip archive has been disposed.</exception>        
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.Create(System.IO.Stream)">
            <summary>
            This method is used to create a ZipPackage from a stream.
            </summary>
            <param name="stream">Stream.</param>
            <returns>ZipPackage instance.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.CreateFile(System.String)">
            <summary>
            This method is used to create a ZipPackage with the passed file name.
            </summary>
            <param name="fileName">File name.</param>
            <returns>ZipPackage instance.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.IsZipFile(System.IO.Stream)">
            <summary>
            Checks whether the stream that represents a zip file is actually a zip file.
            </summary>
            <param name="stream">Stream.</param>
            <returns>True if the stream represents a zip file.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.IsZipFile(System.String)">
            <summary>
            Checks whether the file with the passed file name is actually a zip file.
            </summary>
            <param name="fileName">File name.</param>
            <returns>True if the file represents a zip file.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.Open(System.IO.Stream)">
            <summary>
            Opens zip archive from the Stream.
            </summary>
            <param name="stream">Stream.</param>
            <returns>ZipPackage instance.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.OpenFile(System.String,System.IO.FileAccess)">
            <summary>
            This method is used to open a ZipPackage with the passed file name.
            </summary>
            <param name="fileName">File name.</param>
            <param name="access">File access.</param>
            <returns>ZipPackage instance.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.Add(System.String)">
            <summary>
            Adds a file with the passed file name in the ZipPackage.
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.Add(System.String,Telerik.WinControls.Zip.CompressionType)">
            <summary>
            Adds a file with the passed file name in the ZipPackage.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.Add(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds the files from the passed IEnumerable of file names in the ZipPackage.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.Add(System.Collections.Generic.IEnumerable{System.String},Telerik.WinControls.Zip.CompressionType)">
            <summary>
            Adds the files from the passed IEnumerable of file names in the ZipPackage.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.Add(System.String,System.String)">
            <summary>
            Adds a file with the passed file name in the ZipPackage and associates it with the passed file name in zip.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.Add(System.String,System.String,Telerik.WinControls.Zip.CompressionType)">
            <summary>
            Adds a file with the passed file name in the ZipPackage and associates it with the passed file name in zip.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.Add(System.String,System.String,System.DateTime)">
            <summary>
            Adds a file with the passed file name in the ZipPackage, associates it with the passed file name in zip and sets a date time for the entry.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.Add(System.String,System.String,System.DateTime,Telerik.WinControls.Zip.CompressionType)">
            <summary>
            Adds a file with the passed file name in the ZipPackage, associates it with the passed file name in zip and sets a date time for the entry.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.AddStream(System.IO.Stream,System.String)">
            <summary>
            Adds a stream in the ZipPackage and associates it with the passed file name in zip.
            </summary>
            <param name="stream">Stream.</param>
            <param name="fileNameInZip">File name in zip archive.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.AddStream(System.IO.Stream,System.String,Telerik.WinControls.Zip.CompressionType)">
            <summary>
            Adds a stream in the ZipPackage and associates it with the passed file name in zip.
            </summary>
            <param name="stream">Stream.</param>
            <param name="fileNameInZip">File name in zip archive.</param>
            <param name="compressionType">Compression type.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.AddStream(System.IO.Stream,System.String,Telerik.WinControls.Zip.ZipCompression,System.DateTime)">
            <summary>
            Adds a stream in the ZipPackage, compresses it with the passed compress method,
            associates it with the passed file name in zip and sets a date time for the entry.
            </summary>
            <param name="stream">Stream.</param>
            <param name="fileNameInZip">File name in zip archive.</param>
            <param name="method">Compression level.</param>
            <param name="dateTime">Date and time of file.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.AddStream(System.IO.Stream,System.String,Telerik.WinControls.Zip.ZipCompression,System.DateTime,Telerik.WinControls.Zip.CompressionType)">
            <summary>
            Adds a stream in the ZipPackage and associates it with the passed file name in zip.
            </summary>
            <param name="stream">Stream.</param>
            <param name="fileNameInZip">File name in zip archive.</param>
            <param name="method">Compression level.</param>
            <param name="dateTime">Date and time of file.</param>
            <param name="compressionType">Compression type.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.Close(System.Boolean)">
            <summary>
            Closes the ZipPackage.
            </summary>
            <param name="closeStream">If the parameter is set to true then closes the file.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.IndexOf(System.String)">
            <summary>
            Gets the index of the entry in the list of entries of the ZipPackage.
            </summary>
            <param name="fileNameInZip">File name in zip archive.</param>
            <returns>Index of entry or -1 when the entry is not found.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackage.RemoveEntry(Telerik.WinControls.Zip.ZipPackageEntry)">
            <summary>
            Removes the passed entry from the ZipPackage.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.ZipPackageEntry">
            <summary>
            Represents the ZipPackageEntry class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackageEntry.#ctor(Telerik.WinControls.Zip.ZipArchiveEntry)">
            <summary>
            Initializes a new instance of the ZipPackageEntry class.
            </summary>
            <param name="entry">ZipArchiveEntry.</param>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipPackageEntry.Attributes">
            <summary>
            Gets the file attributes for the entry.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipPackageEntry.CompressedSize">
            <summary>
            Gets the compressed size for the entry.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipPackageEntry.FileNameInZip">
            <summary>
            Gets the file name in the ZipPackage for the entry.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipPackageEntry.UncompressedSize">
            <summary>
            Gets the uncompressed size for the entry.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackageEntry.OpenInputStream">
            <summary>
            Opens the entry from the zip archive.
            </summary>
            <returns>The stream that represents the contents of the entry.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipPackageEntry.Delete">
            <summary>
            Deletes the entry.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.OperationStream">
            <summary>
            Operational stream. Base class for cryptographic and compression streams.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.OperationStream.#ctor(System.IO.Stream,Telerik.WinControls.Zip.StreamOperationMode)">
            <summary>
            Initializes a new instance of the OperationStream class.
            </summary>
            <param name="baseStream">The base input/output stream.</param>
            <param name="mode">Stream operational mode.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Specified mode is not allowed for the given stream.</exception>
        </member>
        <member name="M:Telerik.WinControls.Zip.OperationStream.Finalize">
            <summary>
            Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.OperationStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.OperationStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.OperationStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.OperationStream.HasFlushedFinalBlock">
            <summary>Gets a value which indicates whether the final buffer block has been written/read to/from the underlying stream. </summary>
            <returns>true if the final block has been flushed or end of underlying stream is reached; otherwise, false. </returns>
        </member>
        <member name="P:Telerik.WinControls.Zip.OperationStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.OperationStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.OperationStream.TotalPlainCount">
            <summary>
            Gets value which specify total plain bytes count (not-compressed and not-encrypted).
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.OperationStream.TotalTransformedCount">
            <summary>
            Gets value which specify total transformed bytes count (compressed or encrypted).
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.OperationStream.BaseStream">
            <summary>
            Gets input stream.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.OperationStream.Mode">
            <summary>
            Gets stream mode.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.OperationStream.IsDisposed">
            <summary>
            Gets or sets value which indicates whether this stream is disposed already.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.OperationStream.Transform">
            <summary>
            Gets or sets block transformation is used for read/write operations.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.OperationStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.OperationStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the 
            values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream. </param>
            <returns>The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many 
            bytes are not currently available, or zero (0) if the end of the stream has been reached.</returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:Telerik.WinControls.Zip.StreamOperationMode" /> associated with 
            current <see cref="T:Telerik.WinControls.Zip.OperationStream" /> object does not match the underlying stream.  
            For example, this exception is thrown when using <see cref="F:Telerik.WinControls.Zip.StreamOperationMode.Read" /> with an underlying stream that is write only.  </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> parameter is less than zero.-or- The <paramref name="count" /> parameter is less than zero. </exception>
            <exception cref="T:System.ArgumentException">The sum of the <paramref name="count" /> and <paramref name="offset" /> parameters is larger than the length of the buffer. </exception>
        </member>
        <member name="M:Telerik.WinControls.Zip.OperationStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream. 
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.OperationStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes. </param>
        </member>
        <member name="M:Telerik.WinControls.Zip.OperationStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream. </param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream. </param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.OperationStream.ValidateBufferParameters(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Validate read/write operation parameters.
            </summary>
            <param name="buffer">Operation buffer.</param>
            <param name="offset">Offset.</param>
            <param name="count">Count.</param>
            <param name="allowZeroCount">Indicates whether count can be zero.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.OperationStream.FlushFinalBlock">
            <summary>Updates the underlying data source or repository with the current state of the buffer, then clears the buffer.</summary>
            <exception cref="T:System.NotSupportedException">The current stream is not writable.-or- The final block has already been transformed. </exception>
        </member>
        <member name="M:Telerik.WinControls.Zip.OperationStream.EnsureNotDisposed">
            <summary>
            Ensure that current stream is not disposed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.OperationStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Stream and optionally releases the managed resources. 
            </summary>
            <param name="disposing">Value which indicates whether both managed and unmanaged resources (true) on only unmanaged resources (false) should be released.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.OperationStream.InitializeBuffers">
            <summary>
            Initialize internal buffers.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.OperationStream.InitializeTransform">
            <summary>
            Initialize transformation.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.OperationStream.ReadTransformationHeader">
            <summary>
            Read transformation header.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.OperationStream.WriteTransformationHeader">
            <summary>
            Write transformation header.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.PlatformSettings">
            <summary>
            Static class which provides access to the platform-specific settings for all 
            parts of the ZIP library.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.PlatformSettings.Manager">
            <summary>
            Gets or sets platform manager.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.StreamOperationMode">
            <summary>
            Operational mode of the cryptographic and compression streams.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.StreamOperationMode.Read">
            <summary>
            Read operation is allowed.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.StreamOperationMode.Write">
            <summary>
            Write operation is allowed.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.TransformationHeader">
            <summary>
            Represents header of the transformation.
            The extra data precedes the transformed data which provides
            some additional information about transformation (compression or encryption).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.TransformationHeader.#ctor">
            <summary>
            Initializes a new instance of the TransformationHeader class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.TransformationHeader.Buffer">
            <summary>
            Gets or sets buffer to store header information.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.TransformationHeader.BytesToRead">
            <summary>
            Gets or sets number of byte to read.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.TransformationHeader.InitData">
            <summary>
            Gets initialization data of the header.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.TransformationHeader.Length">
            <summary>
            Gets length of the transformation header.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.TransformationHeader.CountHeaderInCompressedSize">
            <summary>
            Gets or sets the flag which indicates
            that the compressed size should include the header size.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.Extensions.DotNetPlatformManager">
            <summary>
            Platform manager which can be used with full version of the .NET Framework.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.DotNetPlatformManager.#ctor">
            <summary>
            Initializes a new instance of the DotNetPlatformManager class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Extensions.DotNetPlatformManager.AltDirectorySeparatorChar">
            <summary>
            Gets a platform-specific alternate character used to separate directory levels in a path string that reflects a hierarchical file system organization.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Extensions.DotNetPlatformManager.DefaultEncoding">
            <summary>
            Gets default encoding for this platform.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Extensions.DotNetPlatformManager.DirectorySeparatorChar">
            <summary>
            Gets a platform-specific character used to separate directory levels in a path string that reflects a hierarchical file system organization.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Extensions.DotNetPlatformManager.TemporaryStreamType">
            <summary>
            Gets or sets type of the temporary stream. The default value is TemporaryStreamType.Memory.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.DotNetPlatformManager.CreateTemporaryStream">
            <summary>
            Creates temporary stream.
            </summary>
            <returns>Stream will be used for temporary operations.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.DotNetPlatformManager.DeleteTemporaryStream(System.IO.Stream)">
            <summary>
            Deletes temporary stream.
            </summary>
            <param name="stream">Stream to delete.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.DotNetPlatformManager.GetCryptoProvider(Telerik.WinControls.Zip.EncryptionSettings)">
            <summary>
            Gets crypto provider initialized using given encryption settings.
            </summary>
            <param name="settings">Encryption settings.</param>
            <returns>Crypto provider.</returns>
            <exception cref="T:System.NotSupportedException">Specified crypto algorithm is not supported.</exception>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.DotNetPlatformManager.IsEncodingSupported(System.Text.Encoding)">
            <summary>
            Indicates whether specified encoding is supported for this platform.
            </summary>
            <param name="encoding">Encoding.</param>
            <returns>true if encoding is allowed in the ZIP file.</returns>
        </member>
        <member name="T:Telerik.WinControls.Zip.Extensions.TemporaryStreamType">
            <summary>
            Type of the temporary stream.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.Extensions.TemporaryStreamType.File">
            <summary>
            The temporary stream represents temporary file in the file system.
            </summary>
            <remarks>It allows manipulations with large archives and minimize memory consumption.</remarks>
        </member>
        <member name="F:Telerik.WinControls.Zip.Extensions.TemporaryStreamType.Memory">
            <summary>
            The temporary stream represents data in the memory.
            </summary>
            <remarks>It is the fastest way of the data manipulation.</remarks>
        </member>
        <member name="T:Telerik.WinControls.Zip.Extensions.ZipFile">
            <summary>
            Provides static methods for creating, extracting, and opening zip archives. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.ZipFile.CreateEntryFromFile(Telerik.WinControls.Zip.ZipArchive,System.String,System.String)">
            <summary>
            Archives a file by compressing it and adding it to the zip archive.
            </summary>
            <param name="destination">The zip archive to add the file to.</param>
            <param name="sourceFileName">The path to the file to be archived. You can specify either a relative or an absolute path. A relative path is interpreted as relative to the current working directory.</param>
            <param name="entryName">The name of the entry to create in the zip archive.</param>
            <returns>New entry in archive.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.ZipFile.CreateEntryFromFile(Telerik.WinControls.Zip.ZipArchive,System.String,System.String,Telerik.WinControls.Zip.CompressionLevel)">
            <summary>
            Archives a file by compressing it using the specified compression level and adding it to the zip archive.
            </summary>
            <param name="destination">The zip archive to add the file to.</param>
            <param name="sourceFileName">The path to the file to be archived. You can specify either a relative or an absolute path. A relative path is interpreted as relative to the current working directory.</param>
            <param name="entryName">The name of the entry to create in the zip archive.</param>
            <param name="compressionLevel">One of the enumeration values that indicates whether to emphasize speed or compression effectiveness when creating the entry.</param>
            <returns>New entry in archive.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.ZipFile.CreateEntryFromFile(Telerik.WinControls.Zip.ZipArchive,System.String,System.String,Telerik.WinControls.Zip.CompressionSettings)">
            <summary>
            Archives a file by compressing it using the specified compression settings and adding it to the zip archive.
            </summary>
            <param name="destination">The zip archive to add the file to.</param>
            <param name="sourceFileName">The path to the file to be archived. You can specify either a relative or an absolute path. A relative path is interpreted as relative to the current working directory.</param>
            <param name="entryName">The name of the entry to create in the zip archive.</param>
            <param name="compressionSettings">Compression settings.</param>
            <returns>New entry in archive.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.ZipFile.CreateFromDirectory(System.String,System.String)">
            <summary>
            Creates a zip archive that contains the files and directories from the specified directory.
            </summary>
            <param name="sourceDirectoryName">The path to the directory to be archived, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.</param>
            <param name="destinationArchiveFileName">The path of the archive to be created, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.ZipFile.CreateFromDirectory(System.String,System.String,Telerik.WinControls.Zip.CompressionLevel,System.Boolean)">
            <summary>
            Creates a zip archive that contains the files and directories from the specified directory, uses the specified compression level, and optionally includes the base directory.
            </summary>
            <param name="sourceDirectoryName">The path to the directory to be archived, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.</param>
            <param name="destinationArchiveFileName">The path of the archive to be created, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.</param>
            <param name="compressionLevel">One of the enumeration values that indicates whether to emphasize speed or compression effectiveness when creating the entry.</param>
            <param name="includeBaseDirectory">True to include the directory name from sourceDirectoryName at the root of the archive; false to include only the contents of the directory.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.ZipFile.CreateFromDirectory(System.String,System.String,Telerik.WinControls.Zip.CompressionLevel,System.Boolean,System.Text.Encoding)">
            <summary>
            Creates a zip archive that contains the files and directories from the specified directory, uses the specified compression level, and optionally includes the base directory.
            </summary>
            <param name="sourceDirectoryName">The path to the directory to be archived, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.</param>
            <param name="destinationArchiveFileName">The path of the archive to be created, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.</param>
            <param name="compressionLevel">One of the enumeration values that indicates whether to emphasize speed or compression effectiveness when creating the entry.</param>
            <param name="includeBaseDirectory">True to include the directory name from sourceDirectoryName at the root of the archive; false to include only the contents of the directory.</param>
            <param name="entryNameEncoding">The encoding to use when reading or writing entry names in this archive. Specify a value for this parameter only when an encoding is required for interoperability with zip archive tools and libraries that do not support UTF-8 encoding for entry names.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.ZipFile.CreateFromDirectory(System.String,System.String,Telerik.WinControls.Zip.CompressionSettings,System.Boolean,System.Text.Encoding)">
            <summary>
            Creates a zip archive that contains the files and directories from the specified directory, uses the specified compression settings, and optionally includes the base directory.
            </summary>
            <param name="sourceDirectoryName">The path to the directory to be archived, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.</param>
            <param name="destinationArchiveFileName">The path of the archive to be created, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.</param>
            <param name="compressionSettings">Compression settings.</param>
            <param name="includeBaseDirectory">True to include the directory name from sourceDirectoryName at the root of the archive; false to include only the contents of the directory.</param>
            <param name="entryNameEncoding">The encoding to use when reading or writing entry names in this archive. Specify a value for this parameter only when an encoding is required for interoperability with zip archive tools and libraries that do not support UTF-8 encoding for entry names.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.ZipFile.ExtractToDirectory(System.String,System.String)">
            <summary>
            Extracts all the files in the specified zip archive to a directory on the file system.
            </summary>
            <param name="sourceArchiveFileName">The path to the archive that is to be extracted.</param>
            <param name="destinationDirectoryName">The path to the directory in which to place the extracted files, 
            specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)">
            <summary>
            Extracts all the files in the specified zip archive to a directory on the file system and uses the specified character encoding for entry names.
            </summary>
            <param name="sourceArchiveFileName">The path to the archive that is to be extracted.</param>
            <param name="destinationDirectoryName">The path to the directory in which to place the extracted files, 
            specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.</param>
            <param name="entryNameEncoding">The encoding to use when reading or writing entry names in this archive. 
            Specify a value for this parameter only when an encoding is required for interoperability with zip archive 
            tools and libraries that do not support UTF-8 encoding for entry names.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.ZipFile.ExtractToDirectory(Telerik.WinControls.Zip.ZipArchive,System.String)">
            <summary>
            Extracts all the files in the zip archive to a directory on the file system.
            </summary>
            <param name="source">The zip archive to extract files from.</param>
            <param name="destinationDirectoryName">The path to the directory to place the extracted files in. You can specify either a relative or an absolute path. A relative path is interpreted as relative to the current working directory.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.ZipFile.ExtractToFile(Telerik.WinControls.Zip.ZipArchiveEntry,System.String)">
            <summary>
            Extracts an entry in the zip archive to a file.
            </summary>
            <param name="source">The zip archive entry to extract a file from.</param>
            <param name="destinationFileName">The path of the file to create from the contents 
            of the entry. You can specify either a relative or an absolute path. A relative path 
            is interpreted as relative to the current working directory.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.ZipFile.ExtractToFile(Telerik.WinControls.Zip.ZipArchiveEntry,System.String,System.Boolean)">
            <summary>
            Extracts an entry in the zip archive to a file, and optionally overwrites an existing file that has the same name.
            </summary>
            <param name="source">The zip archive entry to extract a file from.</param>
            <param name="destinationFileName">The path of the file to create from the contents 
            of the entry. You can specify either a relative or an absolute path. A relative path 
            is interpreted as relative to the current working directory.</param>
            <param name="overwrite">True to overwrite an existing file that has the same name as the destination file; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.ZipFile.Open(System.String,Telerik.WinControls.Zip.ZipArchiveMode)">
            <summary>
            Opens a zip archive at the specified path and in the specified mode.
            </summary>
            <param name="archiveFileName">The path to the archive to open, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.</param>
            <param name="mode">One of the enumeration values that specifies the actions which are allowed on the entries in the opened archive.</param>
            <returns>The opened zip archive.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.ZipFile.Open(System.String,Telerik.WinControls.Zip.ZipArchiveMode,System.Text.Encoding)">
            <summary>
            Opens a zip archive at the specified path and in the specified mode.
            </summary>
            <param name="archiveFileName">The path to the archive to open, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.</param>
            <param name="mode">One of the enumeration values that specifies the actions which are allowed on the entries in the opened archive.</param>
            <param name="entryNameEncoding">The encoding to use when reading or writing entry names in this archive. Specify a value for this parameter only when an encoding is required for interoperability with zip archive tools and libraries that do not support UTF-8 encoding for entry names.</param>
            <returns>The opened zip archive.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.ZipFile.OpenRead(System.String)">
            <summary>
            Opens a zip archive for reading at the specified path.
            </summary>
            <param name="archiveFileName">The path to the archive to open, specified as a relative or absolute path. 
            A relative path is interpreted as relative to the current working directory.</param>
            <returns>The opened zip archive.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.ZipFile.IsDirectoryEmpty(System.IO.DirectoryInfo)">
            <summary>
            Indicates whether specified directory is empty or not.
            </summary>
            <param name="directoryInfo">Directory info.</param>
            <returns>True if directory is empty; otherwise - false.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.Extensions.ZipFile.CopyStreamTo(System.IO.Stream,System.IO.Stream)">
            <summary>
            This method is used to copy the source stream to the destination stream.
            </summary>
            <param name="source"></param>
            <param name="destination"></param>
        </member>
        <member name="T:Telerik.WinControls.Zip.Zip64DataDescriptor">
            <summary>
            Represents data descriptor record described in the
            ZIP File Format Specification v6.3.3, #4.3.9.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.Zip64DataDescriptor.Signature">
            <summary>
            Data descriptor header signature.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.Zip64DataDescriptor.TryReadBlock(System.IO.BinaryReader)">
            <summary>
            Read data from the binary reader.
            </summary>
            <param name="reader">Binary reader to read data from.</param>
            <returns>True if success, otherwise false.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.Zip64DataDescriptor.WriteBlock(System.IO.BinaryWriter)">
            <summary>
            Write data to the binary writer.
            </summary>
            <param name="writer">Binary writer to write data to.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.Zip64DataDescriptorBase">
            <summary>
            Represents base fields of data descriptor record described in the
            ZIP File Format Specification v6.3.3, #4.3.9.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64DataDescriptorBase.Crc">
            <summary>
            Gets or sets crc-32.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64DataDescriptorBase.CompressedSize">
            <summary>
            Gets or sets compressed size.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64DataDescriptorBase.UncompressedSize">
            <summary>
            Gets or sets uncompressed size.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.Zip64DataDescriptorBase.ReadFields(System.IO.BinaryReader)">
            <summary>
            Read data from the binary reader.
            </summary>
            <param name="reader">Binary reader to read data from.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.Zip64DataDescriptorBase.ReadSize(System.IO.BinaryReader)">
            <summary>
            Read data from the binary reader.
            </summary>
            <param name="reader">Binary reader to read data from.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.Zip64DataDescriptorBase.WriteFields(System.IO.BinaryWriter)">
            <summary>
            Write data to the binary writer.
            </summary>
            <param name="writer">Binary writer to write data to.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryLocator">
            <summary>
            Represents Zip64 end of central directory locator described in the
            ZIP File Format Specification v6.3.3, #4.3.15.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryLocator.Signature">
            <summary>
            Zip64 end of central directory locator signature.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryLocator.StaticBlockLength">
            <summary>
            Size of the data block without signature and variable size fields.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryLocator.NumberOfTheDiskWithTheStartOfTheZip64EndOfCentralDirectory">
            <summary>
            Gets or sets number of the disk with the
            start of the zip64 end of
            central directory.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryLocator.RelativeOffsetOfTheZip64EndOfCentralDirectoryRecord">
            <summary>
            Gets or sets relative offset of the zip64
            end of central directory record.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryLocator.NumberOfDisks">
            <summary>
            Gets or sets number of disks.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryLocator.TryReadBlock(System.IO.BinaryReader)">
            <summary>
            Read data from the binary reader.
            </summary>
            <param name="reader">Binary reader to read data from.</param>
            <returns>True if success, otherwise false.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryLocator.WriteBlock(System.IO.BinaryWriter)">
            <summary>
            Write data to the binary writer.
            </summary>
            <param name="writer">Binary writer to write data to.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryRecord">
            <summary>
            Represents Zip64 end of central directory record described in the
            ZIP File Format Specification v6.3.3, #4.3.14.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryRecord.Signature">
            <summary>
            Zip64 end of central directory record signature.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryRecord.SizeOfZip64EndOfCentralDirectoryRecord">
            <summary>
            Gets or sets size of zip64 end of central
            directory record.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryRecord.VersionMadeBy">
            <summary>
            Gets or sets byte which indicates the ZIP specification version
            supported by the software used to encode the file.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryRecord.OsCompatibility">
            <summary>
            Gets or sets byte which indicates the compatibility
            of the file attribute information.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryRecord.VersionNeededToExtract">
            <summary>
            Gets or sets version needed to extract.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryRecord.NumberOfThisDisk">
            <summary>
            Gets or sets number of this disk.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryRecord.NumberOfTheDiskWithTheStartOfTheCentralDirectory">
            <summary>
            Gets or sets number of the disk with the start of the central directory.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryRecord.NumberOfEntriesInTheCentralDirectoryOnThisDisk">
            <summary>
            Gets or sets total number of entries in the central directory on this disk.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryRecord.NumberOfEntriesInTheCentralDirectory">
            <summary>
            Gets or sets total number of entries in the central directory.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryRecord.SizeOfCentralDirectory">
            <summary>
            Gets or sets size of the central directory.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryRecord.OffsetOfStartOfCentralDirectoryWithRespectToTheStartingDiskNumber">
            <summary>
            Gets or sets offset of start of central directory with respect to the starting disk number.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryRecord.TryReadBlock(System.IO.BinaryReader)">
            <summary>
            Read data from the binary reader.
            </summary>
            <param name="reader">Binary reader to read data from.</param>
            <returns>True if success, otherwise false.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.Zip64EndOfCentralDirectoryRecord.WriteBlock(System.IO.BinaryWriter)">
            <summary>
            Write data to the binary writer.
            </summary>
            <param name="writer">Binary writer to write data to.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.ZipArchive">
            <summary>
            Represents a package of compressed files in the zip archive format. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipArchive.archiveMode">
            <summary>
            Value that describes the type of action the zip archive can perform on entries.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipArchive.archiveReader">
            <summary>
            Binary reader is used to read from working stream.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipArchive.archiveWriter">
            <summary>
            Binary writer is used to write to working stream.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipArchive.disposed">
            <summary>
            Track whether Dispose has been called. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipArchive.entryNameEncoding">
            <summary>
            Encoding of the entry name.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipArchive.originalStream">
            <summary>
            Original archive stream. If this stream doesn't support seeking then 
            temporary working stream will be created.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipArchive.workingStream">
            <summary>
            Working archive stream. If original stream doesn't support seeking then 
            temporary working stream will be created.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipArchive.leaveStreamOpen">
            <summary>
            True to leave the stream open after the ZipArchive object is disposed; otherwise, false.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipArchive.centralDirectoryRead">
            <summary>
            Indicates whether the central directory have been read.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipArchive.endOfCentralDirectoryRecord">
            <summary>
            ZIP Archive End of Central Directory.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipArchive.zip64EndOfCentralDirectoryLocator">
            <summary>
            ZIP64 End of Central Directory Locator.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipArchive.zip64EndOfCentralDirectoryRecord">
            <summary>
            ZIP64 End of Central Directory Record.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipArchive.entries">
            <summary>
            ZIP entries.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipArchive.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the ZipArchive class from the specified stream.
            </summary>
            <param name="stream">The stream that contains the archive to be read.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipArchive.#ctor(System.IO.Stream,Telerik.WinControls.Zip.ZipArchiveMode,System.Boolean,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the ZipArchive class.
            </summary>
            <param name="stream">The stream that contains the archive to be read.</param>
            <param name="mode">One of the enumeration values that indicates whether the zip archive is used to read, create, or update entries.</param>
            <param name="leaveOpen">True to leave the stream open after the ZipArchive object is disposed; otherwise, false.</param>
            <param name="entryNameEncoding">The encoding to use when reading or writing entry names in this archive. Specify a value for this parameter 
            only when an encoding is required for interoperability with zip archive tools and libraries that do not support UTF-8 encoding for entry names.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipArchive.#ctor(System.IO.Stream,Telerik.WinControls.Zip.ZipArchiveMode,System.Boolean,System.Text.Encoding,Telerik.WinControls.Zip.CompressionSettings,Telerik.WinControls.Zip.EncryptionSettings)">
            <summary>
            Initializes a new instance of the ZipArchive class.
            </summary>
            <param name="stream">The stream that contains the archive to be read.</param>
            <param name="mode">One of the enumeration values that indicates whether the zip archive is used to read, create, or update entries.</param>
            <param name="leaveOpen">True to leave the stream open after the ZipArchive object is disposed; otherwise, false.</param>
            <param name="entryNameEncoding">The encoding to use when reading or writing entry names in this archive. Specify a value for this parameter 
            only when an encoding is required for interoperability with zip archive tools and libraries that do not support UTF-8 encoding for entry names.</param>
            <param name="compressionSettings">Compression settings.</param>
            <param name="encryptionSettings">Encryption settings.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipArchive.Finalize">
            <summary>
            Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. 
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Zip.ZipArchive.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchive.Entries">
            <summary>
            Gets the collection of entries that are currently in the zip archive.
            </summary>
            <exception cref="T:System.NotSupportedException">The zip archive does not support reading.</exception>
            <exception cref="T:System.ObjectDisposedException">The zip archive has been disposed.</exception>
            <exception cref="T:Telerik.WinControls.Zip.InvalidDataException">The zip archive is corrupt, and its entries cannot be retrieved.</exception>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchive.EntryNameEncoding">
            <summary>
            Gets entry name encoding.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchive.Mode">
            <summary>
            Gets a value that describes the type of action the zip archive can perform on entries.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchive.CompressionSettings">
            <summary>
            Gets compression settings.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchive.EncryptionSettings">
            <summary>
            Gets encryption settings.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchive.NumberOfThisDisk">
            <summary>
            Gets number of the disk.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchive.Reader">
            <summary>
            Gets reader for the working stream.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchive.Writer">
            <summary>
            Gets writer for the working stream.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchive.CentralDirectoryStart">
            <summary>
            Gets start of the central directory.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipArchive.CreateEntry(System.String)">
            <summary>
            Creates an empty entry that has the specified path and entry name in the zip archive.
            </summary>
            <param name="entryName">A path, relative to the root of the archive, that specifies the name of the entry to be created.</param>
            <returns>An empty entry in the zip archive.</returns>
            <exception cref="T:System.ArgumentException">The entry name is empty.</exception>
            <exception cref="T:System.ArgumentNullException">The entry name is null.</exception>
            <exception cref="T:System.NotSupportedException">The zip archive does not support writing.</exception>
            <exception cref="T:System.ObjectDisposedException">The zip archive has been disposed.</exception>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipArchive.CreateEntry(System.String,Telerik.WinControls.Zip.CompressionSettings)">
            <summary>
            Creates an empty entry that has the specified path and entry name in the zip archive.
            </summary>
            <param name="entryName">A path, relative to the root of the archive, that specifies the name of the entry to be created.</param>
            <param name="settings">Compression settings.</param>
            <returns>An empty entry in the zip archive.</returns>
            <exception cref="T:System.ArgumentException">The entry name is empty.</exception>
            <exception cref="T:System.ArgumentNullException">The entry name is null.</exception>
            <exception cref="T:System.NotSupportedException">The zip archive does not support writing.</exception>
            <exception cref="T:System.ObjectDisposedException">The zip archive has been disposed.</exception>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipArchive.Dispose">
            <summary>
            Releases the resources used by the current instance of the ZipArchive class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipArchive.GetEntry(System.String)">
            <summary>
            Retrieves a wrapper for the specified entry in the zip archive.
            </summary>
            <param name="entryName">A path, relative to the root of the archive, that identifies the entry to retrieve.</param>
            <returns>A wrapper for the specified entry in the archive; null if the entry does not exist in the archive.</returns>
            <exception cref="T:System.ArgumentException">The entry name is empty.</exception>
            <exception cref="T:System.ArgumentNullException">The entry name is null.</exception>
            <exception cref="T:System.NotSupportedException">The zip archive does not support reading.</exception>
            <exception cref="T:System.ObjectDisposedException">The zip archive has been disposed.</exception>
            <exception cref="T:Telerik.WinControls.Zip.InvalidDataException">The zip archive is corrupt, and its entries cannot be retrieved.</exception>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipArchive.DisposeStreams(System.Boolean)">
            <summary>
            Release the unmanaged resources used by the current instance of the ZipArchive class.
            </summary>
            <param name="closeStream">True to leave the stream open after the ZipArchive object is disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipArchive.Dispose(System.Boolean)">
            <summary>
            Called by the Dispose() and Finalize() methods to release the unmanaged 
            resources used by the current instance of the ZipArchive class, and optionally 
            finishes writing the archive and releases the managed resources.
            </summary>
            <param name="disposing">True to finish writing the archive and release unmanaged and managed resources; 
            false to release only unmanaged resources.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipArchive.DisposeStreams">
            <summary>
            Dispose streams.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipArchive.WriteArchive">
            <summary>
            Writes archive to the original stream.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.ZipArchiveEntry">
            <summary>
            Represents a compressed file within a zip archive.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipArchiveEntry.disposed">
            <summary>
            Track whether Dispose has been called. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipArchiveEntry.#ctor(Telerik.WinControls.Zip.ZipArchive,Telerik.WinControls.Zip.CentralDirectoryHeader)">
            <summary>
            Initializes a new instance of the ZipArchiveEntry class.
            </summary>
            <param name="archive">Zip archive.</param>
            <param name="header">Central directory header correspondent to this entry.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipArchiveEntry.#ctor(Telerik.WinControls.Zip.ZipArchive,System.String)">
            <summary>
            Initializes a new instance of the ZipArchiveEntry class.
            </summary>
            <param name="archive">Zip archive.</param>
            <param name="entryName">Entry name.</param>
        </member>
        <member name="E:Telerik.WinControls.Zip.ZipArchiveEntry.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchiveEntry.Archive">
            <summary>
            The zip archive that the entry belongs to, or null if the entry has been deleted.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchiveEntry.CompressedLength">
            <summary>
            Gets compressed size of the entry in the zip archive.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchiveEntry.ExternalAttributes">
            <summary>
            Gets or sets external file attributes.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchiveEntry.FullName">
            <summary>
            Gets the relative path of the entry in the zip archive.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchiveEntry.LastWriteTime">
            <summary>
            Gets or sets the last time the entry in the zip archive was changed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchiveEntry.Length">
            <summary>
            Gets the uncompressed size of the entry in the zip archive.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchiveEntry.Name">
            <summary>
            Gets the file name of the entry in the zip archive.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchiveEntry.CompressionMethod">
            <summary>
            Gets or sets compression method.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchiveEntry.CompressedDataOffset">
            <summary>
            Gets or sets offset of the compressed data.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchiveEntry.DiskStartNumber">
            <summary>
            Gets disk start number.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchiveEntry.LocalHeaderOffset">
            <summary>
            Gets or sets offset of the local header.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ZipArchiveEntry.UpdatableData">
            <summary>
            Gets temporary stream which contains uncompressed data for update.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipArchiveEntry.Delete">
            <summary>
            Deletes the entry from the zip archive.
            </summary>
            <exception cref="T:System.IO.IOException">The entry is already open for reading or writing.</exception>
            <exception cref="T:System.NotSupportedException">The zip archive for this entry was opened in a mode other than Update.</exception>
            <exception cref="T:System.ObjectDisposedException">The zip archive for this entry has been disposed.</exception>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipArchiveEntry.Dispose">
            <summary>
            Releases the resources used by the current instance of the ZipArchiveEntry class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipArchiveEntry.Open">
            <summary>
            Opens the entry from the zip archive.
            </summary>
            <returns>The stream that represents the contents of the entry.</returns>
            <remarks>The resulting stream depends on the zip archive mode.
            If zip archive mode is <see cref="F:Telerik.WinControls.Zip.ZipArchiveMode.Create"/> then read-only stream without seeking support is returned (<see cref="T:Telerik.WinControls.Zip.CompressedStream"/>).
            If zip archive mode is <see cref="F:Telerik.WinControls.Zip.ZipArchiveMode.Read"/> then write-only stream without seeking support is returned (<see cref="T:Telerik.WinControls.Zip.CompressedStream"/>).
            If zip archive mode is <see cref="F:Telerik.WinControls.Zip.ZipArchiveMode.Update"/> then read/write stream which supports seeking is returned.
            </remarks>
            <exception cref="T:System.IO.IOException">The entry is already currently open for writing.
            -or-
            The entry has been deleted from the archive.
            -or-
            The archive for this entry was opened with the Create mode, and this entry has already been written to.</exception>
            <exception cref="T:System.NotSupportedException">The entry is either missing from the archive or is corrupt and cannot be read. 
            -or-
            The entry has been compressed by using a compression method that is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">The zip archive for this entry has been disposed.</exception>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipArchiveEntry.CheckIntegrity(System.String@)">
            <summary>
            Checks entry integrity.
            </summary>
            <param name="message">Message will be thrown if entry don't pass integrity check.</param>
            <returns>True - if entry is OK; false - otherwise.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipArchiveEntry.WriteCentralDirectoryHeader">
            <summary>
            Writes central directory header.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipArchiveEntry.Dispose(System.Boolean)">
            <summary>
            Called by the Dispose() and Finalize() methods to release the unmanaged 
            resources used by the current instance of the ZipArchive class, and optionally 
            finishes writing the archive and releases the managed resources.
            </summary>
            <param name="disposing">True to finish writing the archive and release unmanaged and managed resources; 
            false to release only unmanaged resources.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.ZipArchiveMode">
            <summary>
            Specifies values for interacting with zip archive entries.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipArchiveMode.Create">
            <summary>
            Only creating new archive entries is permitted.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipArchiveMode.Read">
            <summary>
            Only reading archive entries is permitted.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ZipArchiveMode.Update">
            <summary>
            Both read and write operations are permitted for archive entries.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.ZipHelper">
            <summary>
            Provides common internal static methods.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipHelper.CopyStream(System.IO.Stream,System.IO.Stream,System.Int64)">
            <summary>
            Copy specified number of bytes from one stream to another.
            </summary>
            <param name="input">Input stream.</param>
            <param name="output">Output stream.</param>
            <param name="bytes">Number of bytes to copy.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipHelper.DateTimeToPacked(System.DateTime)">
            <summary>
            Converts .NET DateTime structure to the MS-DOS date-time.
            </summary>
            <param name="time">DateTime structure to convert.</param>
            <returns>Packed date-time.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipHelper.GetCompressionAlgorithm(Telerik.WinControls.Zip.CompressionSettings)">
            <summary>
            Gets compression algorithm which corresponds to the given compression settings.
            </summary>
            <param name="settings">Compression settings to get algorithm for.</param>
            <returns>Compression algorithm.</returns>
            <exception cref="T:System.NotSupportedException">Compression method is not supported.</exception>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipHelper.GetCompressionSettings(Telerik.WinControls.Zip.CompressionMethod,Telerik.WinControls.Zip.CompressionSettings)">
            <summary>
            Gets compression settings for the specified compression method.
            </summary>
            <param name="method">Compression method to get settings for.</param>
            <param name="baseSettings">Base settings to copy parameters from.</param>
            <returns>Compression settings.</returns>
            <exception cref="T:System.NotSupportedException">Compression method is not supported.</exception>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipHelper.EndsWithDirChar(System.String)">
            <summary>
            Detect whether the given path string ends with directory separator char (i.e. given path represents directory).
            </summary>
            <param name="path">Path string.</param>
            <returns>True if path string ends with directory separator char; otherwise - false.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipHelper.IsCompressionMethodSupported(Telerik.WinControls.Zip.CompressionMethod)">
            <summary>
            Gets value which indicates whether specified compression method is supported.
            </summary>
            <param name="method">Compression method to check.</param>
            <returns>True - if compression method is supported; false - otherwise.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipHelper.PackedToDateTime(System.UInt32)">
            <summary>
            Converts MS-DOS date-time to the .NET DateTime structure.
            </summary>
            <param name="packedDateTime">Packed date-time to convert.</param>
            <returns>DataTime structure.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipHelper.ReadBytes(System.IO.Stream,System.Byte[],System.Int32)">
            <summary>
            Read specified number of bytes from the given stream to the buffer.
            </summary>
            <param name="stream">Stream to read data from.</param>
            <param name="buffer">Buffer to write data to.</param>
            <param name="bytesToRead">Number of bytes to read.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.ZipHelper.SeekBackwardsToSignature(System.IO.Stream,System.UInt32)">
            <summary>
            Seek given stream backward to the data signature.
            </summary>
            <param name="stream">Stream to seek.</param>
            <param name="signatureToFind">Signature to find.</param>
            <returns>true if signature is found, otherwise false.</returns>
        </member>
        <member name="T:Telerik.WinControls.Zip.CentralDirectoryHeader">
            <summary>
            Represents central directory header record described in the
            ZIP File Format Specification v6.3.3, #4.3.12.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CentralDirectoryHeader.Signature">
            <summary>
            Central directory header signature.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.CentralDirectoryHeader.StaticBlockLength">
            <summary>
            Size of the data block without signature and variable size fields.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.CentralDirectoryHeader.VersionMadeBy">
            <summary>
            Gets or sets byte which indicates the ZIP specification version
            supported by the software used to encode the file.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.CentralDirectoryHeader.OsCompatibility">
            <summary>
            Gets or sets byte which indicates the compatibility
            of the file attribute information.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.CentralDirectoryHeader.DiskNumberStart">
            <summary>
            Gets or sets disk number start.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.CentralDirectoryHeader.InternalAttributes">
            <summary>
            Gets or sets internal file attributes.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.CentralDirectoryHeader.ExternalAttributes">
            <summary>
            Gets or sets external file attributes.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.CentralDirectoryHeader.LocalHeaderOffset">
            <summary>
            Gets or sets relative offset of local header.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.CentralDirectoryHeader.FileComment">
            <summary>
            Gets or sets file comment.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.CentralDirectoryHeader.TryReadBlock(System.IO.BinaryReader)">
            <summary>
            Read data from the binary reader.
            </summary>
            <param name="reader">Binary reader to read data from.</param>
            <returns>True if success, otherwise false.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.CentralDirectoryHeader.WriteBlock(System.IO.BinaryWriter)">
            <summary>
            Write data to the binary writer.
            </summary>
            <param name="writer">Binary writer to write data to.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.DataDescriptor">
            <summary>
            Represents data descriptor record described in the
            ZIP File Format Specification v6.3.3, #4.3.9.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.DataDescriptor.Signature">
            <summary>
            Data descriptor header signature.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.DataDescriptor.StaticBlockLength">
            <summary>
            Size of the data block without signature and variable size fields.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.DataDescriptor.CompressedSizeZip64">
            <summary>
            Gets or sets compressed size.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.DataDescriptor.UncompressedSizeZip64">
            <summary>
            Gets or sets uncompressed size.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DataDescriptor.TryReadBlock(System.IO.BinaryReader)">
            <summary>
            Read data from the binary reader.
            </summary>
            <param name="reader">Binary reader to read data from.</param>
            <returns>True if success, otherwise false.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.DataDescriptor.WriteBlock(System.IO.BinaryWriter)">
            <summary>
            Write data to the binary writer.
            </summary>
            <param name="writer">Binary writer to write data to.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.DataDescriptor.FromFileHeader(Telerik.WinControls.Zip.FileHeaderBase)">
            <summary>
            Copy properties from the given file header to this object.
            </summary>
            <param name="fileHeader">File header to copy properties from.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.DataDescriptorBase">
            <summary>
            Represents base fields of data descriptor record described in the
            ZIP File Format Specification v6.3.3, #4.3.9.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.DataDescriptorBase.Crc">
            <summary>
            Gets or sets crc-32.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.DataDescriptorBase.CompressedSize">
            <summary>
            Gets or sets compressed size.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.DataDescriptorBase.UncompressedSize">
            <summary>
            Gets or sets uncompressed size.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.DataDescriptorBase.ReadFields(System.IO.BinaryReader)">
            <summary>
            Read data from the binary reader.
            </summary>
            <param name="reader">Binary reader to read data from.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.DataDescriptorBase.ReadSize(System.IO.BinaryReader)">
            <summary>
            Read data from the binary reader.
            </summary>
            <param name="reader">Binary reader to read data from.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.DataDescriptorBase.WriteFields(System.IO.BinaryWriter)">
            <summary>
            Write data to the binary writer.
            </summary>
            <param name="writer">Binary writer to write data to.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.DeflatingFlags">
            <summary>
            Represents general purpose bit flag for Methods 8 and 9 - Deflating 
            ZIP File Format Specification v6.3.3, #4.4.4.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.DeflatingFlags.Normal">
            <summary>
            Bit 2  Bit 1
                0      0    Normal (-en) compression option was used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.DeflatingFlags.Maximum">
            <summary>
            Bit 2  Bit 1
                0      1    Maximum (-exx/-ex) compression option was used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.DeflatingFlags.Fast">
            <summary>
            Bit 2  Bit 1
                1      0    Fast (-ef) compression option was used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.DeflatingFlags.SuperFast">
            <summary>
            Bit 2  Bit 1
                1      1    Super Fast (-es) compression option was used.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.EndOfCentralDirectoryRecord">
            <summary>
            Represents end of central directory record described in the
            ZIP File Format Specification v6.3.3, #4.3.16.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.EndOfCentralDirectoryRecord.Signature">
            <summary>
            End of central directory signature.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.EndOfCentralDirectoryRecord.StaticBlockLength">
            <summary>
            Size of the data block without signature and variable size fields.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.EndOfCentralDirectoryRecord.NumberOfThisDisk">
            <summary>
            Gets or sets number of this disk.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.EndOfCentralDirectoryRecord.NumberOfTheDiskWithTheStartOfTheCentralDirectory">
            <summary>
            Gets or sets number of the disk with the start of the central directory.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.EndOfCentralDirectoryRecord.NumberOfEntriesInTheCentralDirectoryOnThisDisk">
            <summary>
            Gets or sets total number of entries in the central directory on this disk.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.EndOfCentralDirectoryRecord.NumberOfEntriesInTheCentralDirectory">
            <summary>
            Gets or sets total number of entries in the central directory.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.EndOfCentralDirectoryRecord.SizeOfCentralDirectory">
            <summary>
            Gets or sets size of the central directory.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.EndOfCentralDirectoryRecord.OffsetOfStartOfCentralDirectoryWithRespectToTheStartingDiskNumber">
            <summary>
            Gets or sets offset of start of central directory with respect to the starting disk number.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.EndOfCentralDirectoryRecord.ArchiveComment">
            <summary>
            Gets or sets .ZIP file comment.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.EndOfCentralDirectoryRecord.TryReadBlock(System.IO.BinaryReader)">
            <summary>
            Read data from the binary reader.
            </summary>
            <param name="reader">Binary reader to read data from.</param>
            <returns>true if success, otherwise false.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.EndOfCentralDirectoryRecord.WriteBlock(System.IO.BinaryWriter)">
            <summary>
            Write data to the binary writer.
            </summary>
            <param name="writer">Binary writer to write data to.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.AesEncryptionExtraField">
            <summary>
            Represents base class for extra field described in the
            ZIP File Format Specification v6.3.3, #4.5.2.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.AesEncryptionExtraField.VendorVersion">
            <summary>
            Gets or sets vendor version for this record.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.AesEncryptionExtraField.Signature">
            <summary>
            Gets or sets signature (AE).
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.AesEncryptionExtraField.KeyLength">
            <summary>
            Gets or sets bit length of encryption key.
            1 - 128-bit , 2 - 192-bit , 3 - 256-bit.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.AesEncryptionExtraField.Method">
            <summary>
            Gets or sets method.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.AesEncryptionExtraField.HeaderId">
            <summary>
            Gets extra field type (Header ID).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.AesEncryptionExtraField.GetBlock">
            <summary>
            Gets extra field data.
            </summary>
            <returns>Byte array of extra field data.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.AesEncryptionExtraField.ParseBlock(System.Byte[])">
            <summary>
            Implements parsing of extra field data.
            </summary>
            <param name="extraData">Extra field data.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.EncryptionAlgorithmType">
            <summary>
            Represents identifier of the encryption algorithm described in the
            ZIP File Format Specification v6.3.3, #7.2.3.2.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.EncryptionAlgorithmType.Unknown">
            <summary>
            Unknown algorithm.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.EncryptionAlgorithmType.Des">
            <summary>
            DES algorithm.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.EncryptionAlgorithmType.Rc2Old">
            <summary>
            RC2 algorithm.
            The version needed to extract up to 5.2.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.EncryptionAlgorithmType.TripleDes168">
            <summary>
            3DES 168 bit algorithm.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.EncryptionAlgorithmType.TripleDes112">
            <summary>
            3DES 112 bit algorithm.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.EncryptionAlgorithmType.Aes128">
            <summary>
            AES 128 bit algorithm.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.EncryptionAlgorithmType.Aes192">
            <summary>
            AES 192 bit algorithm.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.EncryptionAlgorithmType.Aes256">
            <summary>
            AES 256 bit algorithm.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.EncryptionAlgorithmType.Rc2">
            <summary>
            RC2 algorithm.
            The version needed to extract 5.2 and higher.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.EncryptionAlgorithmType.Blowfish">
            <summary>
            Blowfish algorithm.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.EncryptionAlgorithmType.Twofish">
            <summary>
            Twofish algorithm.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.EncryptionAlgorithmType.Rc4">
            <summary>
            RC4 algorithm.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.ExtraFieldBase">
            <summary>
            Represents base class for extra field described in the
            ZIP File Format Specification v6.3.3, #4.5.2.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ExtraFieldBase.ExtraFieldType">
            <summary>
            Gets known extra field type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.ExtraFieldBase.HeaderId">
            <summary>
            Gets extra field type (Header ID).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.ExtraFieldBase.GetExtraFields(Telerik.WinControls.Zip.FileHeaderInfoBase)">
            <summary>
            Gets extra field collection.
            </summary>
            <param name="headerInfo">The header info.</param>
            <returns>IEnumerable of ExtraFieldBase instances.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.ExtraFieldBase.GetExtraFieldsData(System.Collections.Generic.IEnumerable{Telerik.WinControls.Zip.ExtraFieldBase})">
            <summary>
            Gets extra field data.
            </summary>
            <param name="fields">Extra field collection.</param>
            <returns>Extra field data.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.ExtraFieldBase.ParseBlock(System.Byte[])">
            <summary>
            Should implement parsing of extra field data.
            </summary>
            <param name="extraData">Extra field data.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.ExtraFieldBase.GetBlock">
            <summary>
            Gets extra field data.
            </summary>
            <returns>Byte array of extra field data.</returns>
        </member>
        <member name="T:Telerik.WinControls.Zip.ExtraFieldType">
            <summary>
            Represents extra field type (Header ID) described in the
            ZIP File Format Specification v6.3.3, #4.5.2.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ExtraFieldType.Unknown">
            <summary>
            Unknown extra field type.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ExtraFieldType.Zip64">
            <summary>
            Zip64 extra field type.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ExtraFieldType.Ntfs">
            <summary>
            Ntfs extra field type.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ExtraFieldType.StrongEncryption">
            <summary>
            StrongEncryption extra field type.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ExtraFieldType.UnixTime">
            <summary>
            UnixTime extra field type.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ExtraFieldType.AesEncryption">
            <summary>
            AesEncryption extra field type.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.StrongEncryptionExtraField">
            <summary>
            Represents strong encryption extra field described in the
            ZIP File Format Specification v6.3.3, #4.5.12.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.StrongEncryptionExtraField.Format">
            <summary>
            Gets or sets format definition for this record.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.StrongEncryptionExtraField.AlgorithmId">
            <summary>
            Gets or sets encryption algorithm identifier.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.StrongEncryptionExtraField.KeyLength">
            <summary>
            Gets or sets bit length of encryption key.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.StrongEncryptionExtraField.Flags">
            <summary>
            Gets or sets processing flags.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.StrongEncryptionExtraField.HeaderId">
            <summary>
            Gets extra field type (Header ID).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.StrongEncryptionExtraField.GetBlock">
            <summary>
            Gets extra field data.
            </summary>
            <returns>Byte array of extra field data.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.StrongEncryptionExtraField.ParseBlock(System.Byte[])">
            <summary>
            Implements parsing of extra field data.
            </summary>
            <param name="extraData">Extra field data.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.UnknownExtraField">
            <summary>
            Represents base class for extra field described in the
            ZIP File Format Specification v6.3.3, #4.5.2.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.UnknownExtraField.#ctor(System.UInt16)">
            <summary>
            Initializes a new instance of the UnknownExtraField class.
            </summary>
            <param name="fieldHeaderId">Header Id.</param>
        </member>
        <member name="P:Telerik.WinControls.Zip.UnknownExtraField.HeaderId">
            <summary>
            Gets extra field type (Header ID).
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.UnknownExtraField.ExtraFieldData">
            <summary>
            Gets or sets extra field data.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.UnknownExtraField.GetBlock">
            <summary>
            Gets extra field data.
            </summary>
            <returns>Byte array of extra field data.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.UnknownExtraField.ParseBlock(System.Byte[])">
            <summary>
            Implements parsing of extra field data.
            </summary>
            <param name="extraData">Extra field data.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.Zip64ExtraField">
            <summary>
            Represents Zip64 Extended Information Extra Field described in the
            ZIP File Format Specification v6.3.3, #4.5.3.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64ExtraField.OriginalSize">
            <summary>
            Gets or sets original uncompressed file size.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64ExtraField.CompressedSize">
            <summary>
            Gets or sets size of compressed data.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64ExtraField.RelativeHeaderOffset">
            <summary>
            Gets or sets offset of local header record.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64ExtraField.DiskStartNumber">
            <summary>
            Gets or sets number of the disk on which this file starts.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.Zip64ExtraField.HeaderId">
            <summary>
            Gets extra field type (Header ID).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.Zip64ExtraField.GetBlock">
            <summary>
            Gets extra field data.
            </summary>
            <returns>Byte array of extra field data.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.Zip64ExtraField.ParseBlock(System.Byte[])">
            <summary>
            Implements parsing of extra field data.
            </summary>
            <param name="extraData">Extra field data.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.FileHeaderBase">
            <summary>
            Represents file header base class for
            the local file header and central directory header
            which are described in the ZIP File Format Specification v6.3.3, #4.3.7 and #4.3.12.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.FileHeaderBase.VersionNeededToExtract">
            <summary>
            Gets or sets version needed to extract.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.FileHeaderBase.GeneralPurposeBitFlag">
            <summary>
            Gets or sets general purpose bit flag.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.FileHeaderBase.CompressionMethod">
            <summary>
            Gets or sets compression method.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.FileHeaderBase.FileTime">
            <summary>
            Gets or sets last modification file date and time.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.FileHeaderBase.FileName">
            <summary>
            Gets or sets file name.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Zip.FileHeaderBase.ExtraFieldsData">
            <summary>
            Gets or sets extra fields data.
            </summary>
            <value>The extra fields data.</value>
        </member>
        <member name="P:Telerik.WinControls.Zip.FileHeaderBase.ExtraFields">
            <summary>
            Gets or sets list of extra fields.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.FileHeaderBase.FromFileHeader(Telerik.WinControls.Zip.FileHeaderBase)">
            <summary>
            Copy properties from the given file header to this object.
            </summary>
            <param name="fileHeader">File header to copy properties from.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.FileHeaderBase.ReadFields(System.IO.BinaryReader)">
            <summary>
            Read data from the binary reader.
            </summary>
            <param name="reader">Binary reader to read data from.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.FileHeaderBase.ReadExtraData(System.IO.BinaryReader)">
            <summary>
            Read data from the binary reader.
            </summary>
            <param name="reader">Binary reader to read data from.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.FileHeaderBase.WriteFields(System.IO.BinaryWriter)">
            <summary>
            Write data to the binary writer.
            </summary>
            <param name="writer">Binary writer to write data to.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.FileHeaderBase.WriteExtraData(System.IO.BinaryWriter)">
            <summary>
            Write data to the binary writer.
            </summary>
            <param name="writer">Binary writer to write data to.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.GeneralPurposeBitFlag">
            <summary>
            Represents general purpose bit flag in the 
            ZIP File Format Specification v6.3.3, #4.4.4.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.GeneralPurposeBitFlag.FileIsEncrypted">
            <summary>
            Bit 0: If set, indicates that the file is encrypted.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.GeneralPurposeBitFlag.ZeroLocalHeader">
            <summary>
            Bit 3: If this bit is set, the fields crc-32, compressed 
            size and uncompressed size are set to zero in the 
            local header.  The correct values are put in the 
            data descriptor immediately following the compressed
            data. 
            </summary>
            <remarks>
            Note: PKZIP version 2.04g for DOS only 
            recognizes this bit for method 8 compression, newer 
            versions of PKZIP recognize this bit for any 
            compression method.
            </remarks>
        </member>
        <member name="F:Telerik.WinControls.Zip.GeneralPurposeBitFlag.ReservedForEnhancedDeflating">
            <summary>
            Bit 4: Reserved for use with method 8, for enhanced
            deflating. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.GeneralPurposeBitFlag.CompressedPatchedData">
            <summary>
            Bit 5: If this bit is set, this indicates that the file is 
            compressed patched data.  
            </summary>
            <remarks>
            Note: Requires PKZIP version 2.70 or greater.
            </remarks>
        </member>
        <member name="F:Telerik.WinControls.Zip.GeneralPurposeBitFlag.StrongEncryption">
            <summary>
            Bit 6: Strong encryption.  If this bit is set, you MUST
            set the version needed to extract value to at least
            50 and you MUST also set bit 0.  If AES encryption
            is used, the version needed to extract value MUST 
            be at least 51. See the section describing the Strong
            Encryption Specification for details.  Refer to the 
            section in this document entitled "Incorporating PKWARE 
            Proprietary Technology into Your Product" for more 
            information.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.GeneralPurposeBitFlag.EncodingUtf8">
            <summary>
            Bit 11: Language encoding flag (EFS).  If this bit is set,
            the filename and comment fields for this file
            MUST be encoded using UTF-8 (see APPENDIX D).
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.GeneralPurposeBitFlag.HideLocalHeader">
            <summary>
            Bit 13: Set when encrypting the Central Directory to indicate 
            selected data values in the Local Header are masked to
            hide their actual values.  See the section describing 
            the Strong Encryption Specification for details.  Refer
            to the section in this document entitled "Incorporating 
            PKWARE Proprietary Technology into Your Product" for 
            more information.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.ImplodingFlags">
            <summary>
            Represents general purpose bit flag for the Method 6 - Imploding 
            ZIP File Format Specification v6.3.3, #4.4.4.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ImplodingFlags.SlidingDictionary8K">
            <summary>
            For Method 6 - Imploding.
            Bit 1: If the compression method used was type 6,
            Imploding, then this bit, if set, indicates
            an 8K sliding dictionary was used.  If clear,
            then a 4K sliding dictionary was used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.ImplodingFlags.ShannonFano3">
            <summary>
            For Method 6 - Imploding.
             Bit 2: If the compression method used was type 6,
             Imploding, then this bit, if set, indicates
             3 Shannon-Fano trees were used to encode the
             sliding dictionary output.  If clear, then 2
             Shannon-Fano trees were used.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.LocalFileHeader">
            <summary>
            Represents local file header record described in the
            ZIP File Format Specification v6.3.3, #4.3.7.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.LocalFileHeader.Signature">
            <summary>
            Local file header signature.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.LocalFileHeader.StaticBlockLength">
            <summary>
            Size of the data block without signature and variable size fields.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.LocalFileHeader.#ctor">
            <summary>
            Initializes a new instance of the LocalFileHeader class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Zip.LocalFileHeader.#ctor(Telerik.WinControls.Zip.FileHeaderBase)">
            <summary>
            Initializes a new instance of the LocalFileHeader class.
            </summary>
            <param name="fileHeader">File header to copy properties from.</param>
        </member>
        <member name="M:Telerik.WinControls.Zip.LocalFileHeader.TryReadBlock(System.IO.BinaryReader)">
            <summary>
            Read data from the binary reader.
            </summary>
            <param name="reader">Binary reader to read data from.</param>
            <returns>True if success, otherwise false.</returns>
        </member>
        <member name="M:Telerik.WinControls.Zip.LocalFileHeader.WriteBlock(System.IO.BinaryWriter)">
            <summary>
            Write data to the binary writer.
            </summary>
            <param name="writer">Binary writer to write data to.</param>
        </member>
        <member name="T:Telerik.WinControls.Zip.LZMAFlags">
            <summary>
            Represents general purpose bit flag for the Method 14 - LZMA 
            ZIP File Format Specification v6.3.3, #4.4.4.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Zip.LZMAFlags.UseEndOfStreamMarker">
            <summary>
            Bit 1: If the compression method used was type 14,
            LZMA, then this bit, if set, indicates
            an end-of-stream (EOS) marker is used to
            mark the end of the compressed data stream.
            If clear, then an EOS marker is not present
            and the compressed data size must be known
            to extract.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Zip.VersionNeededToExtract">
            <summary>
            Version needed to extract.
            </summary>
        </member>
        <member name="T:Telerik.Charting.NumericalAxisRangeExtendDirection">
            <summary>
            Specifies how a numerical axis auto-range will be extended so that each data point is visualized in the best possible way.
            </summary>
        </member>
        <member name="F:Telerik.Charting.NumericalAxisRangeExtendDirection.None">
            <summary>
            The range will be rounded but not extended.
            </summary>
        </member>
        <member name="F:Telerik.Charting.NumericalAxisRangeExtendDirection.Positive">
            <summary>
            The range maximum will be extended with one major step so that the data's maximum is at least 5% away from the range maximum.
            </summary>
        </member>
        <member name="F:Telerik.Charting.NumericalAxisRangeExtendDirection.Negative">
            <summary>
            The range minimum will be extended with one major step so that the data's minimum is at least 5% away from the range minimum.
            </summary>
        </member>
        <member name="F:Telerik.Charting.NumericalAxisRangeExtendDirection.Both">
            <summary>
            The range will be extended in both negative and positive direction.
            </summary>
        </member>
        <member name="T:Telerik.Charting.AxisType">
            <summary>
            Defines the possible type for an axis.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisType.First">
            <summary>
            Defines the first axis. This value is coordinate-system specific.
            It represents the X (or the Horizontal) axis for a Cartesian coordinate system and the Value (or the Radius) axis for a Polar coordinate system.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisType.Second">
            <summary>
            Defines the second axis. This value is coordinate-system specific.
            It represents the Y (or Vertical) axis for a Cartesian coordinate system and the Angle axis for a Polar coordinate system.
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartAreaInvalidateFlags">
            <summary>
            Defines the possible impact a chart node property may have over the entire chart area.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAreaInvalidateFlags.None">
            <summary>
            Property does not affect the chart element tree.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAreaInvalidateFlags.ResetAxes">
            <summary>
            Invalidates the visual presentation of the axes.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAreaInvalidateFlags.InvalidateAxes">
            <summary>
            Resets the plot information of the axes.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAreaInvalidateFlags.InvalidateSeries">
            <summary>
            Invalidates the visual presentation of the series.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAreaInvalidateFlags.InvalidateGrid">
            <summary>
            Invalidates the visual presentation of the chart grid (if any).
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAreaInvalidateFlags.ResetAnnotations">
            <summary>
            Resets the plot information of the annotations.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAreaInvalidateFlags.InvalidateAnnotations">
            <summary>
            Invalidates the visual presentation of the chart annotations (if any).
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAreaInvalidateFlags.InvalidateAxesAndGrid">
            <summary>
            Invalidates each axis plus the chart grid (if any).
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAreaInvalidateFlags.InvalidateAll">
            <summary>
            All invalidate flags are specified.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAreaInvalidateFlags.All">
            <summary>
            All flags are specified.
            </summary>
        </member>
        <member name="T:Telerik.Charting.AxisHorizontalLocation">
            <summary>
            Defines the supported locations that an axis rendered vertically can have.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisHorizontalLocation.Left">
            <summary>
            Axis (rendered vertically) should be located to the left of the plot area.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisHorizontalLocation.Right">
            <summary>
            Axis (rendered vertically) should be located to the right of the plot area.
            </summary>
        </member>
        <member name="T:Telerik.Charting.AxisPlotMode">
            <summary>
            Defines how data points are plotted by an axis.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisPlotMode.BetweenTicks">
            <summary>
            Points are plotted in the middle of the range, defined between each two ticks.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisPlotMode.OnTicks">
            <summary>
            Points are plotted over each tick.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisPlotMode.OnTicksPadded">
            <summary>
            Points are plotted over each tick with half a step padding applied on both ends of the axis.
            </summary>
        </member>
        <member name="T:Telerik.Charting.AxisVerticalLocation">
            <summary>
            Defines the supported locations that an axis rendered horizontally can have.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisVerticalLocation.Bottom">
            <summary>
            Axis (rendered horizontally) should be located below the plot area.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisVerticalLocation.Top">
            <summary>
            Axis (rendered horizontally) should be located above the plot area.
            </summary>
        </member>
        <member name="T:Telerik.Charting.EventHandlerList">
            <summary>
            Represents a list of delegates.
            </summary>
        </member>
        <member name="P:Telerik.Charting.EventHandlerList.Item(System.Object)">
            <summary>
            Retrieves the delegate, associated with the provided key.
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Telerik.Charting.EventHandlerList.Clear">
            <summary>
            Clears the list.
            </summary>
        </member>
        <member name="M:Telerik.Charting.EventHandlerList.AddHandler(System.Object,System.Delegate)">
            <summary>
            Adds the specified delegate associated with the provided key.
            </summary>
            <param name="key"></param>
            <param name="handler"></param>
        </member>
        <member name="M:Telerik.Charting.EventHandlerList.RemoveHandler(System.Object,System.Delegate)">
            <summary>
            Removes the specified delegate associated with the provided key.
            </summary>
            <param name="key"></param>
            <param name="handler"></param>
        </member>
        <member name="T:Telerik.Charting.RadThickness">
            <summary>
            Represents a structure that defines margins (or padding) of an element.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadThickness.Empty">
            <summary>
            A <see cref="T:Telerik.Charting.RadThickness"/> instance with Left, Top, Right, and Bottom components equal to 0.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadThickness.Left">
            <summary>
            Left length.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadThickness.Top">
            <summary>
            Top length.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadThickness.Right">
            <summary>
            Right length.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadThickness.Bottom">
            <summary>
            Bottom length.
            </summary>
        </member>
        <member name="M:Telerik.Charting.RadThickness.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadThickness"/> struct.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="M:Telerik.Charting.RadThickness.op_Equality(Telerik.Charting.RadThickness,Telerik.Charting.RadThickness)">
            <summary>
            Determines whether two <see cref="T:Telerik.Charting.RadThickness"/> structures are equal.
            </summary>
            <param name="thickness1"></param>
            <param name="thickness2"></param>
        </member>
        <member name="M:Telerik.Charting.RadThickness.op_Inequality(Telerik.Charting.RadThickness,Telerik.Charting.RadThickness)">
            <summary>
            Determines whether two <see cref="T:Telerik.Charting.RadThickness"/> structures are not equal.
            </summary>
            <param name="thickness1"></param>
            <param name="thickness2"></param>
        </member>
        <member name="M:Telerik.Charting.RadThickness.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Charting.RadThickness.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:Telerik.Charting.ReferenceDictionary`2">
            <summary>
            A dictionary, based on a List is faster and with smaller footprint for several items - e.g. 2 to 9.
            In .NET there is the HybridDictionary class which actually uses LinkedList for up to 9 items.
            </summary>
        </member>
        <member name="T:Telerik.Charting.DisposableObject">
            <summary>
            Represents an object that implements the <see cref="T:System.IDisposable"/> interface and automatically releases any events, attached to this instance.
            </summary>
        </member>
        <member name="M:Telerik.Charting.DisposableObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.DisposableObject"/> class.
            </summary>
        </member>
        <member name="E:Telerik.Charting.DisposableObject.Disposing">
            <summary>
            Raised when the object enters its Dispose routine.
            </summary>
        </member>
        <member name="E:Telerik.Charting.DisposableObject.Disposed">
            <summary>
            Raised when the object has finished its Dispose routine.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DisposableObject.IsDisposing">
            <summary>
            Gets a value indicating whether the object is currently in a Dispose cycle.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DisposableObject.IsDisposed">
            <summary>
            Gets a value indicating whether the object is already disposed.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DisposableObject.Events">
            <summary>
            Gets the list of all events, associated with this instance.
            </summary>
        </member>
        <member name="M:Telerik.Charting.DisposableObject.Dispose">
            <summary>
            Releases all resources, used by this instance.
            </summary>
        </member>
        <member name="M:Telerik.Charting.DisposableObject.DisposeManagedResources">
            <summary>
            Disposes all managed resources allocated by this instance.
            </summary>
        </member>
        <member name="M:Telerik.Charting.DisposableObject.DisposeUnmanagedResources">
            <summary>
            Disposes all unmanaged resources allocated by this instance.
            </summary>
        </member>
        <member name="T:Telerik.Charting.TreeTraversalMode">
            <summary>
            Defines possible approaches when traversing a tree.
            </summary>
        </member>
        <member name="F:Telerik.Charting.TreeTraversalMode.DepthFirst">
            <summary>
            Depth-first traversal.
            </summary>
        </member>
        <member name="F:Telerik.Charting.TreeTraversalMode.BreadthFirst">
            <summary>
            Breadth first traversal.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartViewDataErrorEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.ChartViewDataErrorEventArgs" /> class.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="P:Telerik.Charting.ChartViewDataErrorEventArgs.Exception">
            <summary>
            Gets the exception that represents the error.
            </summary>
        </member>
        <member name="T:Telerik.Charting.RadPropertyEventArgs">
            <summary>
            Encapsulates all the data associated with a change in a <see cref="T:Telerik.Charting.PropertyBagObject"/> property store.
            </summary>
        </member>
        <member name="M:Telerik.Charting.RadPropertyEventArgs.#ctor(System.Int32,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadPropertyEventArgs"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Charting.RadPropertyEventArgs.#ctor(System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadPropertyEventArgs"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Telerik.Charting.RadPropertyEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the property change can be accepted. Valid during the Changing pass.
            </summary>
        </member>
        <member name="P:Telerik.Charting.RadPropertyEventArgs.Key">
            <summary>
            Gets the key of the property associated with the event.
            </summary>
        </member>
        <member name="P:Telerik.Charting.RadPropertyEventArgs.PropertyName">
            <summary>
            Gets the name of the property that has changed. This member is not set if the property is associated with a valid key.
            </summary>
        </member>
        <member name="P:Telerik.Charting.RadPropertyEventArgs.OldValue">
            <summary>
            Gets the old value of the associated property.
            </summary>
        </member>
        <member name="P:Telerik.Charting.RadPropertyEventArgs.NewValue">
            <summary>
            Gets or sets the new value of the associated property.
            </summary>
        </member>
        <member name="T:Telerik.Charting.RadCircle">
            <summary>
            Represents a logical definition of a circle.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadCircle.Center">
            <summary>
            The center of the circle.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadCircle.Radius">
            <summary>
            The radius of the circle.
            </summary>
        </member>
        <member name="M:Telerik.Charting.RadCircle.#ctor(Telerik.Charting.RadPoint,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadCircle"/> struct.
            </summary>
            <param name="center">The center.</param>
            <param name="radius">The radius.</param>
        </member>
        <member name="P:Telerik.Charting.RadCircle.Bounds">
            <summary>
            Gets the rectangle that encloses this circle.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadLine.X1">
            <summary>
            The X-coordinate of the line start point.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadLine.X2">
            <summary>
            The X-coordinate of the line end point.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadLine.Y1">
            <summary>
            The Y-coordinate of the line start point.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadLine.Y2">
            <summary>
            The Y-coordinate of the line end point.
            </summary>
        </member>
        <member name="M:Telerik.Charting.RadLine.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadLine" /> struct.
            </summary>
            <param name="x1">The x1.</param>
            <param name="x2">The x2.</param>
            <param name="y1">The y1.</param>
            <param name="y2">The y2.</param>
        </member>
        <member name="M:Telerik.Charting.RadLine.#ctor(Telerik.Charting.RadPoint,Telerik.Charting.RadPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadLine" /> struct.
            </summary>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
        </member>
        <member name="M:Telerik.Charting.RadLine.Round(Telerik.Charting.RadLine)">
            <summary>
            Rounds the line's values to the closed whole number.
            </summary>
            <param name="line"></param>
        </member>
        <member name="T:Telerik.Charting.RadMath">
            <summary>
            Provides static mathematical functions and constants.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadMath.DegToRadFactor">
            <summary>
            The factor used to convert degrees to their radians equivalent.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadMath.RadToDegFactor">
            <summary>
            The factor used to convert radians to their degree equivalent.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadMath.Epsilon">
            <summary>
            Smallest unit such that 1.0+DBL_EPSILON != 1.0.
            </summary>
        </member>
        <member name="M:Telerik.Charting.RadMath.IsZero(System.Double)">
            <summary>
            Determines whether the specified value is close to 0 within the order of EPSILON.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Charting.RadMath.IsZero(System.Decimal)">
            <summary>
            Determines whether the specified value is close to 0 within the order of EPSILON.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Charting.RadMath.IsOne(System.Double)">
            <summary>
            Determines whether the specified value is close to 1 within the order of EPSILON.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Charting.RadMath.IsOne(System.Decimal)">
            <summary>
            Determines whether the specified value is close to 1 within the order of EPSILON.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Charting.RadMath.AreClose(System.Double,System.Double)">
            <summary>
            Determines whether the two specified values are close within the order of EPSILON.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
        </member>
        <member name="M:Telerik.Charting.RadMath.AreClose(System.Double,System.Double,System.Double)">
            <summary>
            Determines whether the two specified values are close within the order of tolerance.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="tolerance"></param>
        </member>
        <member name="M:Telerik.Charting.RadMath.GetPointDistance(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Gets the distance between two points in a plane.
            </summary>
            <param name="x1">The x-coordinate of the first point.</param>
            <param name="x2">The x-coordinate of the second point.</param>
            <param name="y1">The y-coordinate of the first point.</param>
            <param name="y2">The y-coordinate of the second point.</param>
        </member>
        <member name="M:Telerik.Charting.RadMath.GetArcPoint(System.Double,Telerik.Charting.RadPoint,System.Double)">
            <summary>
            Gets the point that lies on the arc segment of the ellipse, described by the center and radius parameters.
            </summary>
            <param name="angle"></param>
            <param name="center"></param>
            <param name="radius"></param>
        </member>
        <member name="T:Telerik.Charting.RadPoint">
            <summary>
            Represents a structure that defines a location (X, Y) in a two-dimensional space.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadPoint.Empty">
            <summary>
            A <see cref="T:Telerik.Charting.RadPoint"/> instance which X and Y values are set to 0.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadPoint.X">
            <summary>
            The X-coordinate of the point.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadPoint.Y">
            <summary>
            The Y-coordinate of the point.
            </summary>
        </member>
        <member name="M:Telerik.Charting.RadPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadPoint"/> struct.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Telerik.Charting.RadPoint.op_Equality(Telerik.Charting.RadPoint,Telerik.Charting.RadPoint)">
            <summary>
            Determines whether two <see cref="T:Telerik.Charting.RadPoint"/> structures are equal.
            </summary>
            <param name="pt1"></param>
            <param name="pt2"></param>
        </member>
        <member name="M:Telerik.Charting.RadPoint.op_Inequality(Telerik.Charting.RadPoint,Telerik.Charting.RadPoint)">
            <summary>
            Determines whether two <see cref="T:Telerik.Charting.RadSize"/> structures are not equal.
            </summary>
            <param name="pt1"></param>
            <param name="pt2"></param>
        </member>
        <member name="M:Telerik.Charting.RadPoint.Round(Telerik.Charting.RadPoint)">
            <summary>
            Rounds the X and Y members of the specified <see cref="T:Telerik.Charting.RadPoint"/>.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Telerik.Charting.RadPoint.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Charting.RadPoint.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Telerik.Charting.RadRect">
            <summary>
            Represents a Rectangle in the Euclidean plane geometry.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadRect.Invalid">
            <summary>
            Invalid rectangle, which Width and Height properties are set to (-1).
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadRect.Empty">
            <summary>
            Empty rectangle which values are zeroes.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadRect.X">
            <summary>
            The X-coordinate of the rectangle.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadRect.Y">
            <summary>
            The Y-coordinate of the rectangle.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadRect.Width">
            <summary>
            The length of the rectangle along the X-axis.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadRect.Height">
            <summary>
            The length of the rectangle along the Y-axis.
            </summary>
        </member>
        <member name="M:Telerik.Charting.RadRect.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadRect"/> struct.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Telerik.Charting.RadRect.#ctor(Telerik.Charting.RadPoint,Telerik.Charting.RadPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadRect" /> struct.
            </summary>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
        </member>
        <member name="M:Telerik.Charting.RadRect.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadRect"/> struct.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="P:Telerik.Charting.RadRect.Bottom">
            <summary>
            Gets the Y-coordinate of the bottom side of the rectangle.
            </summary>
        </member>
        <member name="P:Telerik.Charting.RadRect.Right">
            <summary>
            Gets the X-coordinate of the right side of the rectangle.
            </summary>
        </member>
        <member name="P:Telerik.Charting.RadRect.Center">
            <summary>
            Gets the center of this rectangle.
            </summary>
        </member>
        <member name="P:Telerik.Charting.RadRect.Location">
            <summary>
            Gets the location (Top-Left corner) of the rectangle.
            </summary>
        </member>
        <member name="M:Telerik.Charting.RadRect.Round(Telerik.Charting.RadRect)">
            <summary>
            Rounds the rectangle's values by respecting the Width and Height.
            </summary>
            <param name="rect">The <see cref="T:Telerik.Charting.RadRect"/> that will be rounded.</param>
            <returns>A new instance of <see cref="T:Telerik.Charting.RadRect"/> with rounded values.</returns>
        </member>
        <member name="M:Telerik.Charting.RadRect.Floor(Telerik.Charting.RadRect)">
            <summary>
            Rounds the rectangle's value to the closest less than or equal to whole numbers.
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:Telerik.Charting.RadRect.op_Equality(Telerik.Charting.RadRect,Telerik.Charting.RadRect)">
            <summary>
            Determines whether two <see cref="T:Telerik.Charting.RadRect"/> structures are equal.
            </summary>
            <param name="rect1"></param>
            <param name="rect2"></param>
        </member>
        <member name="M:Telerik.Charting.RadRect.op_Inequality(Telerik.Charting.RadRect,Telerik.Charting.RadRect)">
            <summary>
            Determines whether two <see cref="T:Telerik.Charting.RadRect"/> structures are not equal.
            </summary>
            <param name="rect1"></param>
            <param name="rect2"></param>
        </member>
        <member name="M:Telerik.Charting.RadRect.Subtract(Telerik.Charting.RadRect,Telerik.Charting.RadRect)">
            <summary>
            Gets the difference between two <see cref="T:Telerik.Charting.RadRect"/> structures.
            </summary>
            <param name="rect1"></param>
            <param name="rect2"></param>
        </member>
        <member name="M:Telerik.Charting.RadRect.ToSquare(Telerik.Charting.RadRect,System.Boolean)">
            <summary>
            Gets a rectangle that has equal width and height and is centered within the specified rect.
            </summary>
            <param name="rect"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Telerik.Charting.RadRect.CenterRect(Telerik.Charting.RadRect,Telerik.Charting.RadRect)">
            <summary>
            Centers the specified rectangle within the provided available one.
            </summary>
            <param name="rect"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:Telerik.Charting.RadRect.IntersectsWith(Telerik.Charting.RadRect)">
            <summary>
            Determines whether the current rect intersects with the specified one.
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:Telerik.Charting.RadRect.IsSizeValid">
            <summary>
            Determines whether the size of this rect is valid - that is both Width and Height should be bigger than zero.
            </summary>
        </member>
        <member name="M:Telerik.Charting.RadRect.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Charting.RadRect.Contains(System.Double,System.Double)">
            <summary>
            Determines if this RadRect instance contains the point that is described by the arguments.
            </summary>
            <param name="x">The X coordinate of the point to check.</param>
            <param name="y">The Y coordinate of the point to check.</param>
            <returns>Returns true if this rectangle contains the point from the arguments and false otherwise.</returns>
        </member>
        <member name="M:Telerik.Charting.RadRect.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Telerik.Charting.RadRect.RoundByRespectingLocation(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Rounds the rectangle's values by respecting the X and Right and respecting the Y and Bottom.
            (0.4, 0, 2.2, 0) results in (0, 0, 3, 0). Note: original width = 3, result width = 2.2; original right = 2.6, result right = 3.
            (0.4, 0, 2.0, 0) results in (0, 0, 2, 0). 
            (0.6, 0, 1.8, 0) results in (1, 0, 1, 0). Note: original width = 1.8, result width = 1; original right = 2.4, result right = 2.
            (0.6, 0, 2.0, 0) results in (1, 0, 2, 0). 
            </summary>
        </member>
        <member name="T:Telerik.Charting.RadSize">
            <summary>
            Represents a structure that defines a size in the two-dimensional space.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadSize.Empty">
            <summary>
            A <see cref="T:Telerik.Charting.RadSize"/> instance which Width and Height are set to 0.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadSize.Invalid">
            <summary>
            A <see cref="T:Telerik.Charting.RadSize"/> instance which Width and Height are set to -1.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadSize.Width">
            <summary>
            The length along the horizontal axis.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadSize.Height">
            <summary>
            The length along the vertical axis.
            </summary>
        </member>
        <member name="M:Telerik.Charting.RadSize.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadSize"/> struct.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Telerik.Charting.RadSize.op_Equality(Telerik.Charting.RadSize,Telerik.Charting.RadSize)">
            <summary>
            Determines whether two <see cref="T:Telerik.Charting.RadSize"/> structures are equal.
            </summary>
            <param name="size1"></param>
            <param name="size2"></param>
        </member>
        <member name="M:Telerik.Charting.RadSize.op_Inequality(Telerik.Charting.RadSize,Telerik.Charting.RadSize)">
            <summary>
            Determines whether two <see cref="T:Telerik.Charting.RadSize"/> structures are not equal.
            </summary>
            <param name="size1"></param>
            <param name="size2"></param>
        </member>
        <member name="M:Telerik.Charting.RadSize.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Charting.RadSize.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Telerik.Charting.MessageDispatchMode">
            <summary>
            Defines how a message should be dispatched in the element tree.
            </summary>
        </member>
        <member name="F:Telerik.Charting.MessageDispatchMode.Bubble">
            <summary>
            Message is dispatched to the direct target and its ancestors.
            </summary>
        </member>
        <member name="F:Telerik.Charting.MessageDispatchMode.Tunnel">
            <summary>
            Message is dispatched to the direct target all its descendants.
            </summary>
        </member>
        <member name="F:Telerik.Charting.MessageDispatchMode.BubbleAndTunnel">
            <summary>
            Message is dispatched to the direct target, its ancestors and all its descendants.
            </summary>
        </member>
        <member name="T:Telerik.Charting.MessageDispatchPhase">
            <summary>
            Defines the possible phases a message dispatch process may enter.
            </summary>
        </member>
        <member name="F:Telerik.Charting.MessageDispatchPhase.Bubble">
            <summary>
            Message is being dispatched up in the parent chain.
            </summary>
        </member>
        <member name="F:Telerik.Charting.MessageDispatchPhase.Tunnel">
            <summary>
            Message is being dispatched down to all descendants.
            </summary>
        </member>
        <member name="T:Telerik.Charting.NodeState">
            <summary>
            Defines the possible states a  chart node may enter.
            </summary>
        </member>
        <member name="F:Telerik.Charting.NodeState.Initial">
            <summary>
            The node is created.
            </summary>
        </member>
        <member name="F:Telerik.Charting.NodeState.Loading">
            <summary>
            The node is loading on the visual scene.
            </summary>
        </member>
        <member name="F:Telerik.Charting.NodeState.Loaded">
            <summary>
            The node is loaded and ready to be visualized.
            </summary>
        </member>
        <member name="F:Telerik.Charting.NodeState.Unloading">
            <summary>
            The node is in a process of being unloaded from the visual scene.
            </summary>
        </member>
        <member name="F:Telerik.Charting.NodeState.Unloaded">
            <summary>
            The node is detached from teh visual scene.
            </summary>
        </member>
        <member name="T:Telerik.Charting.PropertyBagObject">
            <summary>
            Represents a <see cref="T:Telerik.Charting.DisposableObject"/> that stores its properties within a property bag.
            </summary>
        </member>
        <member name="M:Telerik.Charting.PropertyBagObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.PropertyBagObject"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.PropertyBagObject.DisposeManagedResources">
            <summary>
            Disposes all managed resources allocated by this instance.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Range">
            <summary>
            Represents a struct, which defines a set of two values - High, Low.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Range.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.Range" /> structure.
            </summary>
            <param name="low">The low value.</param>
            <param name="high">The high value.</param>
        </member>
        <member name="P:Telerik.Charting.Range.Low">
            <summary>
            Gets or sets the low value.
            </summary>
            <value>The low value.</value>
        </member>
        <member name="P:Telerik.Charting.Range.High">
            <summary>
            Gets or sets the high value.
            </summary>
            <value>The high value.</value>
        </member>
        <member name="M:Telerik.Charting.Range.op_Equality(Telerik.Charting.Range,Telerik.Charting.Range)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="range1">The first <see cref="T:Telerik.Charting.Range"/> struct.</param>
            <param name="range2">The second <see cref="T:Telerik.Charting.Range"/> struct.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Telerik.Charting.Range.op_Inequality(Telerik.Charting.Range,Telerik.Charting.Range)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="range1">The first <see cref="T:Telerik.Charting.Range"/> struct.</param>
            <param name="range2">The second <see cref="T:Telerik.Charting.Range"/> struct.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Telerik.Charting.Range.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal
            to the current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>
            True if the specified <see cref="T:System.Object" /> is equal to the
            current <see cref="T:System.Object" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Charting.Range.Equals(Telerik.Charting.Range)">
            <summary>
            Determines whether the specified <see cref="T:Telerik.Charting.Range" /> is equal
            to the current <see cref="T:Telerik.Charting.Range" />.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>
            True if the specified <see cref="T:Telerik.Charting.Range" /> is equal to the
            current <see cref="T:Telerik.Charting.Range" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Charting.Range.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Converters.StringToDoubleConverter">
            <summary>
            Represents a value converter that converts strings into double values by using the double.TryParse method.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.StringToDoubleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.StringToDoubleConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.StringToDoubleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the intended conversion type of the converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotImplementedException">
            <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"/> not implemented in base <see cref="T:System.ComponentModel.TypeConverter"/>.</exception>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.StringToDoubleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
            <exception cref="T:System.NotImplementedException">
            <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/>  not implemented in base <see cref="T:System.ComponentModel.TypeConverter"/>.</exception>
        </member>
        <member name="T:Telerik.Collections.Generic.ObservableHashSet`1">
            <summary>
            Observable HashSet, that allows only unique items in its collection.
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.NotifyCollection`1.Move(System.Int32,System.Int32)">
            <summary>
            Moves the specified old index.
            </summary>
            <param name="oldIndex">The old index.</param>
            <param name="newIndex">The new index.</param>
        </member>
        <member name="M:Telerik.Collections.Generic.NotifyCollection`1.AddRange(`0[])">
            <summary>
            Adds the range.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:Telerik.Collections.Generic.NotifyCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the range.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:Telerik.Collections.Generic.NotifyCollection`1.BeginUpdate">
            <summary>
            Begins the update.
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.NotifyCollection`1.EndUpdate">
            <summary>
            Ends the update.
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.NotifyCollection`1.DeferRefresh">
            <summary>
            Defers the refresh.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Collections.Generic.ITreeNode`1">
            <summary>
            Interface to the node
            </summary>
        </member>
        <member name="T:Telerik.Collections.Generic.ITree`1">
            <summary>
            Interface to the tree
            </summary>
        </member>
        <member name="P:Telerik.Collections.Generic.ITree`1.SyncRoot">
            <summary>
            Get synchornization root
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.ITree`1.Add(`0)">
            <summary>
            Add item
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.ITree`1.AddOrGet(`0)">
            <summary>
            Add or get item
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.ITree`1.Find(`0)">
            <summary>
            Find item
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.ITree`1.Remove(`0)">
            <summary>
            Delete item by key
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.ITree`1.Remove(Telerik.Collections.Generic.ITreeNode{`0})">
            <summary>
            Delete specific item 
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.ITree`1.Clear">
            <summary>
            Clear the tree
            </summary>
        </member>
        <member name="T:Telerik.Collections.Generic.ISortedTree`1">
            <summary>
            Interface to the tree
            </summary>
        </member>
        <member name="P:Telerik.Collections.Generic.ISortedTree`1.Count">
            <summary>
            Get number of nodes in the tree
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.ISortedTree`1.First">
            <summary>
            Get first node
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.ISortedTree`1.Last">
            <summary>
            Get last node
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.ISortedTree`1.Previous(Telerik.Collections.Generic.ITreeNode{`0})">
            <summary>
            Get next node
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.ISortedTree`1.Next(Telerik.Collections.Generic.ITreeNode{`0})">
            <summary>
            Get prior node
            </summary>
        </member>
        <member name="T:Telerik.Collections.Generic.IOrderedTree`1">
            <summary>
            Interface to the tree which supports direct access to the items
            </summary>
            <summary>
            Interface to the tree
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.IOrderedTree`1.GetByOrder(System.Int32)">
            <summary>
            Get item by order index
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.IOrderedTree`1.GetOrder(Telerik.Collections.Generic.ITreeNode{`0})">
            <summary>
            Get index by item
            </summary>
        </member>
        <member name="T:Telerik.Collections.Generic.RBOrderedNodeParam">
            <summary>
            Parameters of ordered node
            </summary>
        </member>
        <member name="F:Telerik.Collections.Generic.RBOrderedNodeParam.mRank">
            <summary>
            Node's rank
            </summary>
        </member>
        <member name="F:Telerik.Collections.Generic.RBOrderedNodeParam.mCount">
            <summary>
            Number of sub nodes
            </summary>
        </member>
        <member name="T:Telerik.Collections.Generic.RBOrderedTreeNode`1">
            <summary>
            Ordered node
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBOrderedTreeNode`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBOrderedTreeNode`1.SetParent(Telerik.Collections.Generic.RBTreeNodeBase{`0,Telerik.Collections.Generic.RBOrderedNodeParam})">
            <summary>
            Set parent node
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBOrderedTreeNode`1.SetLeft(Telerik.Collections.Generic.RBTreeNodeBase{`0,Telerik.Collections.Generic.RBOrderedNodeParam})">
            <summary>
            Set left node
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBOrderedTreeNode`1.SetRight(Telerik.Collections.Generic.RBTreeNodeBase{`0,Telerik.Collections.Generic.RBOrderedNodeParam})">
            <summary>
            Set right node
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBOrderedTreeNode`1.OnUpdateCount">
            <summary>
            Update reference count
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBOrderedTreeNode`1.CopyFrom(Telerik.Collections.Generic.RBTreeNodeBase{`0,Telerik.Collections.Generic.RBOrderedNodeParam})">
            <summary>
            Copy from other node
            </summary>
        </member>
        <member name="T:Telerik.Collections.Generic.RBOrderedTreeBase`1">
            <summary>
            Basic RBTree with ordering
            
            Operation like Add and Remove are an O(2logN) operations.
            Operation Find is O(logN) operation.
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBOrderedTreeBase`1.#ctor(System.Boolean)">
            <summary>
            Tree constructor
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBOrderedTreeBase`1.#ctor(System.Collections.Generic.IComparer{`0},System.Boolean)">
            <summary>
            Tree constructor with comparer
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBOrderedTreeBase`1.NewNode">
            <summary>
            Create new node
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBOrderedTreeBase`1.GetByOrder(System.Int32)">
            <summary>
            Get item by order index
            This operation is O(logN) operation
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBOrderedTreeBase`1.GetOrder(Telerik.Collections.Generic.RBOrderedTreeNode{`0})">
            <summary>
            Get order index of item
            This operation is O(logN) operation
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBOrderedTreeBase`1.Telerik#Collections#Generic#IOrderedTree{T}#GetByOrder(System.Int32)">
            <summary>
            Get item by order index
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBOrderedTreeBase`1.Telerik#Collections#Generic#IOrderedTree{T}#GetOrder(Telerik.Collections.Generic.ITreeNode{`0})">
            <summary>
            Get index by item
            </summary>
        </member>
        <member name="T:Telerik.Collections.Generic.RBOrderedTree`1">
            <summary>
            Unique ordered RBTree
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBOrderedTree`1.#ctor">
            <summary>
            Tree constructor
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBOrderedTree`1.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
            Tree constructor with comparer
            </summary>
        </member>
        <member name="T:Telerik.Collections.Generic.RBOrderedMultiTree`1">
            <summary>
            Non-unique RBMultiTree
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBOrderedMultiTree`1.#ctor">
            <summary>
            Tree constructor
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBOrderedMultiTree`1.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
            Tree constructor with comparer
            </summary>
        </member>
        <member name="T:Telerik.Collections.Generic.RBTreeNode`1">
            <summary>
            Tree node
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeNode`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Telerik.Collections.Generic.RBTree`1">
            <summary>
            Unique RBTree
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTree`1.#ctor">
            <summary>
            Tree constructor
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTree`1.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
            Tree constructor with comparer
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTree`1.NewNode">
            <summary>
            Create new node
            </summary>
        </member>
        <member name="T:Telerik.Collections.Generic.RBMultiTree`1">
            <summary>
            Non-unique RBMultiTree
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBMultiTree`1.#ctor">
            <summary>
            Tree constructor
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBMultiTree`1.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
            Tree constructor with comparer
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBMultiTree`1.NewNode">
            <summary>
            Create new node
            </summary>
        </member>
        <member name="T:Telerik.Collections.Generic.RBTreeBase`3">
            <summary>
            Base class for the tree.
            Based on the Damian Ivereigh implementation
            Support for the multi-trees has been added.
            Do not use this class directly. Use RBTree, RBMultiTree, RBOrderedTree and RBOrderedMultiTree classes
            </summary>
            <typeparam name="T">Key type</typeparam>
            <typeparam name="N">Node type</typeparam>
            <typeparam name="P">Node parameter type</typeparam>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Telerik#Collections#Generic#ITree{T}#Add(`0)">
            <summary>
            Add item
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Telerik#Collections#Generic#ITree{T}#AddOrGet(`0)">
            <summary>
            Add or get item
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Telerik#Collections#Generic#ITree{T}#Find(`0)">
            <summary>
            Find item
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Telerik#Collections#Generic#ITree{T}#Remove(`0)">
            <summary>
            Delete item by key
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Telerik#Collections#Generic#ITree{T}#Clear">
            <summary>
            Clear
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Telerik#Collections#Generic#ITree{T}#Remove(Telerik.Collections.Generic.ITreeNode{`0})">
            <summary>
            Delete item by key
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Telerik#Collections#Generic#ISortedTree{T}#First">
            <summary>
            Get first node
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Telerik#Collections#Generic#ISortedTree{T}#Last">
            <summary>
            Get last node
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Telerik#Collections#Generic#ISortedTree{T}#Previous(Telerik.Collections.Generic.ITreeNode{`0})">
            <summary>
            Get next node
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Telerik#Collections#Generic#ISortedTree{T}#Next(Telerik.Collections.Generic.ITreeNode{`0})">
            <summary>
            Get prior node
            </summary>
        </member>
        <member name="T:Telerik.Collections.Generic.RBTreeBase`3.CollectionAdapter`3">
            <summary>
            Adapter implementing collection interface
            </summary>
        </member>
        <member name="F:Telerik.Collections.Generic.RBTreeBase`3.CollectionAdapter`3.mTree">
            <summary>
            Referenced tree
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.CollectionAdapter`3.#ctor(Telerik.Collections.Generic.RBTreeBase{`3,`4,`5})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Telerik.Collections.Generic.RBTreeBase`3.Unique">
            <summary>
            Is tree unique
            </summary>
        </member>
        <member name="P:Telerik.Collections.Generic.RBTreeBase`3.SyncRoot">
            <summary>
            Object can be used for synchronization
            </summary>
        </member>
        <member name="P:Telerik.Collections.Generic.RBTreeBase`3.Root">
            <summary>
            Root of the tree
            </summary>
        </member>
        <member name="F:Telerik.Collections.Generic.RBTreeBase`3.mComparer">
            <summary>
            Comparator
            </summary>
        </member>
        <member name="P:Telerik.Collections.Generic.RBTreeBase`3.Count">
            <summary>
            Number of nodes in the tree
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.#ctor(System.Boolean)">
            <summary>
            Tree constructor
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.#ctor(System.Collections.Generic.IComparer{`0},System.Boolean)">
            <summary>
            Tree constructor with comparer
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Add(`0)">
            <summary>
            Add new key into the tree
            
            This operation is O(logN) operation
            </summary>
            <exception cref="T:System.ArgumentException">In case the key is already in the tree</exception>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.AddOrGet(`0)">
            <summary>
            Add new key into the tree or get existing node
            This operation is O(logN) operation
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Remove(`0)">
            <summary>
            Remove key from the dictionary
            This operation is O(logN) operation
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Clear">
            <summary>
            Remove all items
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Remove(`1)">
            <summary>
            Remove node from the dictionary
            This operation is O(1) operation
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Find(`0)">
            <summary>
            Find key in the dictionary
            This operation is O(logN) operation
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.First">
            <summary>
            Get first node
            This operation is O(logN) operation
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Last">
            <summary>
            Get last node
            This operation is O(logN) operation
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Next(`1)">
            <summary>
            Get next node
            This operation is O(logN) operation
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Previous(`1)">
            <summary>
            Get previous node
            This operation is O(logN) operation
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.System#Collections#Generic#IEnumerable{N}#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Balance(Telerik.Collections.Generic.RBTreeNodeBase{`0,`2})">
            <summary>
            Balance tree past inserting
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.NewNode">
            <summary>
            Create new node
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Traverse(System.Boolean@,`0)">
            <summary>
            Go trough tree and find the node by the key.
            Might add new node if node doesn't exist.
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.LeftRotate(Telerik.Collections.Generic.RBTreeNodeBase{`0,`2})">
            <summary>
             Rotate our tree Left
            
                         X        rb_left_rotate(X)--->            Y
                       /   \                                     /   \
                      A     Y                                   X     C
                          /   \                               /   \
                         B     C                             A     B
            
             N.B. This does not change the ordering.
            
             We assume that neither X or Y is NULL
             </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.RightRotate(Telerik.Collections.Generic.RBTreeNodeBase{`0,`2})">
            <summary>
             Rotate our tree Right
            
                         X                                         Y
                       /   \                                     /   \
                      A     Y     leftArrow--rb_right_rotate(Y)        X     C
                          /   \                               /   \
                         B     C                             A     B
            
             N.B. This does not change the ordering.
            
             We assume that neither X or Y is NULL
            </summary>>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Successor(Telerik.Collections.Generic.RBTreeNodeBase{`0,`2})">
            <summary>
            Return a pointer to the smallest key greater than x
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Predecessor(Telerik.Collections.Generic.RBTreeNodeBase{`0,`2})">
            <summary>
            Return a pointer to the largest key smaller than x
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.Delete(Telerik.Collections.Generic.RBTreeNodeBase{`0,`2})">
            <summary>
            Delete the node z, and free up the space
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeBase`3.DeleteFix(Telerik.Collections.Generic.RBTreeNodeBase{`0,`2})">
            <summary>
            Restore the reb-black properties after a delete
            </summary>
            <param name="x"></param>
        </member>
        <member name="P:Telerik.Collections.Generic.RBTreeBase`3.Collection">
            <summary>
            Get collection object for this
            </summary>
        </member>
        <member name="T:Telerik.Collections.Generic.RBTreeEnumerator`3">
            <summary>
            Generic tree enumerator
            </summary>
            <typeparam name="N">Node type</typeparam>
            <typeparam name="K">Key type</typeparam>
            <typeparam name="P">>Node parameter</typeparam>
        </member>
        <member name="F:Telerik.Collections.Generic.RBTreeEnumerator`3.mTree">
            <summary>
            Tree
            </summary>
        </member>
        <member name="F:Telerik.Collections.Generic.RBTreeEnumerator`3.mCurrent">
            <summary>
            Current item
            
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeEnumerator`3.#ctor(Telerik.Collections.Generic.RBTreeBase{`1,`0,`2})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Telerik.Collections.Generic.RBTreeEnumerator`3.System#Collections#Generic#IEnumerator{N}#Current">
            <summary>
            Get current element
            </summary>
        </member>
        <member name="P:Telerik.Collections.Generic.RBTreeEnumerator`3.System#Collections#IEnumerator#Current">
            <summary>
            Get current element
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeEnumerator`3.MoveNext">
            <summary>
            Move to next element
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeEnumerator`3.Reset">
            <summary>
            Reset enumeration
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeEnumerator`3.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="T:Telerik.Collections.Generic.RBTreeValueEnumerator`3">
            <summary>
            Generic tree value's enumerator
            </summary>
            <typeparam name="N">Node type</typeparam>
            <typeparam name="K">Key type</typeparam>
            <typeparam name="P">Node parameter</typeparam>
        </member>
        <member name="F:Telerik.Collections.Generic.RBTreeValueEnumerator`3.mTree">
            <summary>
            Tree
            </summary>
        </member>
        <member name="F:Telerik.Collections.Generic.RBTreeValueEnumerator`3.mCurrent">
            <summary>
            Current item
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeValueEnumerator`3.#ctor(Telerik.Collections.Generic.RBTreeBase{`1,`0,`2})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Telerik.Collections.Generic.RBTreeValueEnumerator`3.System#Collections#Generic#IEnumerator{K}#Current">
            <summary>
            Get current element
            </summary>
        </member>
        <member name="P:Telerik.Collections.Generic.RBTreeValueEnumerator`3.System#Collections#IEnumerator#Current">
            <summary>
            Get current element
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeValueEnumerator`3.MoveNext">
            <summary>
            Move to next element
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeValueEnumerator`3.Reset">
            <summary>
            Reset enumeration
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeValueEnumerator`3.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="T:Telerik.Collections.Generic.RBTreeColor">
            <summary>
            Colour of the node
            </summary>
        </member>
        <member name="F:Telerik.Collections.Generic.RBTreeColor.Red">
            <summary>
            Red
            </summary>
        </member>
        <member name="F:Telerik.Collections.Generic.RBTreeColor.Black">
            <summary>
            Black
            </summary>
        </member>
        <member name="T:Telerik.Collections.Generic.RBTreeNodeBase`2">
            <summary>
            Node of the red-black tree
            </summary>
            <typeparam name="T">Key type</typeparam>
            <typeparam name="P">Node's parameter</typeparam>
        </member>
        <member name="P:Telerik.Collections.Generic.RBTreeNodeBase`2.Parent">
            <summary>
            Parent node
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeNodeBase`2.SetParent(Telerik.Collections.Generic.RBTreeNodeBase{`0,`1})">
            <summary>
            Set parent node
            </summary>
        </member>
        <member name="P:Telerik.Collections.Generic.RBTreeNodeBase`2.Left">
            <summary>
            Left node
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeNodeBase`2.SetLeft(Telerik.Collections.Generic.RBTreeNodeBase{`0,`1})">
            <summary>
            Set left node
            </summary>
        </member>
        <member name="P:Telerik.Collections.Generic.RBTreeNodeBase`2.Right">
            <summary>
            Right node
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeNodeBase`2.SetRight(Telerik.Collections.Generic.RBTreeNodeBase{`0,`1})">
            <summary>
            Set right node
            </summary>
        </member>
        <member name="P:Telerik.Collections.Generic.RBTreeNodeBase`2.Key">
            <summary>
            Key value of the node
            </summary>
        </member>
        <member name="P:Telerik.Collections.Generic.RBTreeNodeBase`2.Color">
            <summary>
            Colour of the node
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeNodeBase`2.OnUpdateCount">
            <summary>
            Update reference count
            </summary>
        </member>
        <member name="F:Telerik.Collections.Generic.RBTreeNodeBase`2.mParam">
            <summary>
            Node parameters
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeNodeBase`2.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.RBTreeNodeBase`2.CopyFrom(Telerik.Collections.Generic.RBTreeNodeBase{`0,`1})">
            <summary>
            Copy from other node
            </summary>
        </member>
        <member name="M:Telerik.Collections.Generic.AvlTree`1.InsertWithDuplicates(`0)">
            <summary>
            Inserts the with duplicates.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Collections.Generic.AvlTree`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Telerik.Data.Expressions.ExpressionItemsList.LoadFromXML">
            <summary>
            Load expression items list from embedded in Telerik assembly xml source
            </summary>
        </member>
        <member name="M:Telerik.Data.Expressions.ExpressionItemsList.LoadFromXML(System.String)">
            <summary>
            Load expression items list
            </summary>
            <param name="path">Xml file path</param>
        </member>
        <member name="M:Telerik.Data.Expressions.ExpressionItemsList.LoadFromXML(System.IO.Stream)">
            <summary>
            Load expression items list
            </summary>
            <param name="stream"></param>
        </member>
        <member name="T:Telerik.Data.Expressions.AggregateNode">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.Aggregates">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Data.Expressions.Aggregates.Compare(System.Object,System.Object,Telerik.Data.Expressions.FunctionContext,System.String)">
            <returns>
            -1: value1 &lt; value2
             0: value1 = value2
             1: value1 &gt; value2
            </returns>
        </member>
        <member name="T:Telerik.Data.Expressions.BinaryOpNode">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.ConstNode">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.DataStorageHelper">
            <summary>
            
            </summary>    
        </member>
        <member name="M:Telerik.Data.Expressions.DataStorageHelper.ResultSqlType(Telerik.Data.Expressions.StorageType,Telerik.Data.Expressions.StorageType,System.Boolean,System.Boolean,Telerik.Data.Expressions.Operator)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Data.Expressions.DataStorageHelper.ResultType(Telerik.Data.Expressions.StorageType,Telerik.Data.Expressions.StorageType,System.Boolean,System.Boolean,Telerik.Data.Expressions.Operator)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Data.Expressions.DataStorageHelper.EscapeName(System.String)">
            <summary>
            Escapes the name.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Data.Expressions.DataStorageHelper.EscapeLikeValue(System.String)">
            <summary>
            Escapes the LIKE value.
            </summary>
            <param name="valueWithoutWildcards">The value without wildcards.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Data.Expressions.DataStorageHelper.EscapeValue(System.String)">
            <summary>
            Escapes the filtering value.
            </summary>
            <param name="valueWithoutWildcards">The value without wildcards.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Data.Expressions.DictionaryObject">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.DynamicObject">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.DynamicObject.DynamicProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Data.Expressions.ExpressionContext.Context">
            <summary>
            Set or get default expression context class, which will be used for determinating the expression functions.
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.ExpressionNode">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.ExpressionParser.NodeType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.ExpressionParser.OperatorInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.FunctionContext">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.FunctionNode">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Data.Expressions.FunctionNode.NormalizeValue(System.Object)">
            <summary>
            Normalize the value of the function's argument 
            to ensure the correct overload is matched.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Data.Expressions.InvalidExpressionException">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.Lexer">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.Lexer.StringReader">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.Lexer.ReservedWord">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.Lexer.ReservedWords">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.LexicalException">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.LikeNode">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.NameNode">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.Operand">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.Operator">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Data.Expressions.Operator.GetResultType(Telerik.Data.Expressions.Operator,Telerik.Data.Expressions.Operand,Telerik.Data.Expressions.Operand,Telerik.Data.Expressions.StorageType@,System.Object@)">
            <summary>
            Use for all op except And, Or, In, Is and IsNot
            </summary>
            <returns>if false to stop processing the op and return the retValue</returns>
        </member>
        <member name="T:Telerik.Data.Expressions.OperatorContext">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.ParserException">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.StorageType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.Token">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.UnaryOpNode">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.Utils">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Data.Expressions.ZeroOpNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Licensing.ComponentUsedEventArgs.Type">
            <summary>
            Gets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Telerik.Licensing.ComponentUsedEventArgs.SessionId">
            <summary>
            Gets or sets the session identifier.
            </summary>
            <value>
            The session identifier.
            </value>
        </member>
        <member name="P:Telerik.Licensing.ProductUsedEventArgs.InstalationKey">
            <summary>
            Gets the instalation key.
            </summary>
            <value>
            The instalation key.
            </value>
        </member>
        <member name="M:Telerik.Licensing.DateTimeExtensions.FromIso8601(System.String)">
            <summary>
            Converts an ISO 8601 time/date format string, which is used by JSON and others,
            into a DateTime object.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Licensing.DateTimeExtensions.ToIso8601(System.DateTime)">
            <summary>
            Converts a DateTime object into an ISO 8601 string.  This version
            always returns the string in UTC format.
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Licensing.DateTimeExtensions.TwoDigits(System.Int32)">
            <summary>
            Ensures a two-digit number with leading zero if necessary.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Licensing.DateTimeExtensions.ThreeDigits(System.Int32)">
            <summary>
            Ensures a three-digit number with leading zeros if necessary.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Licensing.DateTimeExtensions.ToASPNetAjax(System.DateTime)">
            <summary>
            The ASP.NET Ajax team made up their own time date format for JSON strings, and it's
            explained in this article: http://msdn.microsoft.com/en-us/library/bb299886.aspx
            Converts a DateTime to the ASP.NET Ajax JSON format.
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Licensing.DateTimeExtensions.FromASPNetAjax(System.String)">
            <summary>
            Converts an ASP.NET Ajax JSON string to DateTime
            </summary>
            <param name="ajax"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Licensing.CharExtensions.ConvertFromUtf32(System.Int32)">
            <summary>
            Converts a Unicode character to a string of its ASCII equivalent.
            Very simple, it works only on ordinary characters.
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Licensing.EnvSessionManagerFactory.TryCreateManager">
            <summary>
            Returns null if no DTE instance is available.
            </summary>
            <returns>EnvSessionManager or Null depending on whether DTE is available.</returns>
        </member>
        <member name="M:Telerik.Licensing.TypesCollection.TryAdd(System.String)">
            <summary>
            Tries to add the item to the collection. If it already exists it won't be added.
            </summary>
            <param name="item">The item to be added.</param>
        </member>
    </members>
</doc>
